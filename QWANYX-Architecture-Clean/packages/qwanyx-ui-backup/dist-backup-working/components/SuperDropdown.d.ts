import { default as React } from 'react';
export interface DropdownOption {
    value: string | number;
    label: string;
    description?: string;
    icon?: string | React.ReactNode;
    avatar?: string;
    avatarAlt?: string;
    disabled?: boolean;
    group?: string;
    tags?: string[];
    status?: 'online' | 'offline' | 'busy' | 'away';
    badge?: string | number;
    color?: string;
    command?: string;
    preview?: React.ReactNode;
    children?: DropdownOption[];
    recent?: boolean;
    pinned?: boolean;
    meta?: any;
}
export interface SuperDropdownProps {
    options: DropdownOption[];
    value?: string | number | (string | number)[];
    onChange?: (value: any) => void;
    placeholder?: string;
    disabled?: boolean;
    mode?: 'select' | 'combobox' | 'command' | 'multiselect' | 'tree';
    dropdownMode?: 'attached' | 'fullscreen' | 'fullHeight' | 'fill';
    searchable?: boolean;
    fuzzySearch?: boolean;
    searchPlaceholder?: string;
    createOption?: boolean | ((inputValue: string) => DropdownOption);
    filterOption?: (option: DropdownOption, searchValue: string) => boolean;
    aiSuggest?: boolean;
    showAvatars?: boolean;
    showIcons?: boolean;
    showDescriptions?: boolean;
    showPreview?: boolean;
    showTags?: boolean;
    showStatus?: boolean;
    showBadges?: boolean;
    showCheckboxes?: boolean;
    grouped?: boolean;
    nested?: boolean;
    showBreadcrumbs?: boolean;
    maxRecentItems?: number;
    showPinnedSection?: boolean;
    virtualScroll?: boolean;
    itemHeight?: number;
    maxHeight?: number;
    asyncLoad?: (searchValue: string) => Promise<DropdownOption[]>;
    loading?: boolean;
    clearable?: boolean;
    closeOnSelect?: boolean;
    blurOnSelect?: boolean;
    openOnFocus?: boolean;
    autoFocus?: boolean;
    animation?: 'none' | 'fade' | 'slide' | 'scale' | 'spring' | 'morph';
    animationDuration?: number;
    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';
    variant?: 'default' | 'outlined' | 'filled' | 'ghost' | 'glass';
    color?: string;
    fullWidth?: boolean;
    className?: string;
    dropdownClassName?: string;
    position?: 'auto' | 'top' | 'bottom' | 'left' | 'right';
    align?: 'start' | 'center' | 'end';
    offset?: number;
    onOpen?: () => void;
    onClose?: () => void;
    onSearch?: (value: string) => void;
    onCreate?: (value: string) => void;
    onHover?: (option: DropdownOption) => void;
}
export declare const SuperDropdown: React.FC<SuperDropdownProps>;
export declare const Select: (props: Omit<SuperDropdownProps, "mode">) => import("react/jsx-runtime").JSX.Element;
export declare const MultiSelect: (props: Omit<SuperDropdownProps, "mode">) => import("react/jsx-runtime").JSX.Element;
export declare const Combobox: (props: Omit<SuperDropdownProps, "mode" | "searchable">) => import("react/jsx-runtime").JSX.Element;
export declare const CommandPalette: (props: Omit<SuperDropdownProps, "mode" | "searchable" | "fuzzySearch">) => import("react/jsx-runtime").JSX.Element;
//# sourceMappingURL=SuperDropdown.d.ts.map