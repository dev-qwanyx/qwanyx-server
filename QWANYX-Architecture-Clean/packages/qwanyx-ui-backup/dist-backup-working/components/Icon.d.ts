import { default as React } from 'react';
export interface IconProps {
    name: string;
    size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl';
    color?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'info' | 'inherit' | 'foreground' | 'muted';
    variant?: 'outlined' | 'filled' | 'rounded' | 'sharp';
    weight?: 'thin' | 'light' | 'regular' | 'medium' | 'bold';
    className?: string;
    style?: React.CSSProperties;
    onClick?: (e: React.MouseEvent) => void;
    spin?: boolean;
}
export declare const Icon: React.FC<IconProps>;
export declare const Icons: {
    readonly Menu: "menu";
    readonly Close: "close";
    readonly ArrowBack: "arrow_back";
    readonly ArrowForward: "arrow_forward";
    readonly ArrowUp: "arrow_upward";
    readonly ArrowDown: "arrow_downward";
    readonly ChevronDown: "expand_more";
    readonly ChevronUp: "expand_less";
    readonly ChevronLeft: "chevron_left";
    readonly ChevronRight: "chevron_right";
    readonly Search: "search";
    readonly Filter: "filter_list";
    readonly Add: "add";
    readonly Remove: "remove";
    readonly Check: "check";
    readonly Copy: "content_copy";
    readonly Download: "download";
    readonly Upload: "upload";
    readonly Edit: "edit";
    readonly Delete: "delete";
    readonly Save: "save";
    readonly Settings: "settings";
    readonly Share: "share";
    readonly Send: "send";
    readonly Print: "print";
    readonly Refresh: "refresh";
    readonly Home: "home";
    readonly Person: "person";
    readonly People: "people";
    readonly PersonAdd: "person_add";
    readonly Logout: "logout";
    readonly Mail: "mail";
    readonly Email: "email";
    readonly Phone: "phone";
    readonly Notifications: "notifications";
    readonly NotificationsOff: "notifications_off";
    readonly Chat: "chat";
    readonly Message: "message";
    readonly Calendar: "calendar_today";
    readonly Clock: "schedule";
    readonly History: "history";
    readonly Star: "star";
    readonly Favorite: "favorite";
    readonly Visibility: "visibility";
    readonly VisibilityOff: "visibility_off";
    readonly Lock: "lock";
    readonly LockOpen: "lock_open";
    readonly Key: "key";
    readonly Shield: "shield";
    readonly Error: "error";
    readonly Warning: "warning";
    readonly Info: "info";
    readonly CheckCircle: "check_circle";
    readonly Cancel: "cancel";
    readonly Help: "help";
    readonly Dashboard: "dashboard";
    readonly Assignment: "assignment";
    readonly Analytics: "analytics";
    readonly Assessment: "assessment";
    readonly TrendingUp: "trending_up";
    readonly ShoppingCart: "shopping_cart";
    readonly Payment: "payment";
    readonly Cloud: "cloud";
    readonly Api: "api";
    readonly Support: "support_agent";
    readonly Wifi: "wifi";
    readonly Database: "database";
    readonly Image: "image";
    readonly Camera: "photo_camera";
    readonly Video: "videocam";
    readonly Music: "music_note";
    readonly Mic: "mic";
    readonly VolumeUp: "volume_up";
    readonly File: "description";
    readonly Folder: "folder";
    readonly FolderOpen: "folder_open";
    readonly AttachFile: "attach_file";
    readonly GridView: "grid_view";
    readonly List: "list";
    readonly Layers: "layers";
    readonly ViewSidebar: "view_sidebar";
};
export type IconName = keyof typeof Icons | string;
//# sourceMappingURL=Icon.d.ts.map