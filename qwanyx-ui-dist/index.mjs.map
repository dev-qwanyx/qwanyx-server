{"version":3,"file":"index.mjs","sources":["../node_modules/react/cjs/react-jsx-runtime.production.js","../node_modules/react/cjs/react-jsx-runtime.development.js","../node_modules/react/jsx-runtime.js","../src/providers/ThemeProvider.tsx","../src/themes/index.ts","../src/providers/WorkspaceProvider.tsx","../src/components/Button.tsx","../src/components/Card.tsx","../node_modules/react-hook-form/dist/index.esm.mjs","../src/components/Input.tsx","../src/components/Text.tsx","../src/components/Container.tsx","../src/components/Navbar.tsx","../src/components/Tabs.tsx","../src/components/Hero.tsx","../src/components/Feature.tsx","../src/components/Footer.tsx","../src/components/Badge.tsx","../src/components/Avatar.tsx","../src/components/Modal.tsx","../src/components/Alert.tsx","../src/components/OTPInput.tsx","../src/components/Auth.tsx","../src/components/Favicon.tsx","../node_modules/@hookform/resolvers/dist/resolvers.mjs","../node_modules/zod/v4/core/core.js","../node_modules/zod/v4/core/util.js","../node_modules/zod/v4/core/errors.js","../node_modules/zod/v4/core/parse.js","../node_modules/zod/v4/core/regexes.js","../node_modules/zod/v4/core/checks.js","../node_modules/zod/v4/core/doc.js","../node_modules/zod/v4/core/versions.js","../node_modules/zod/v4/core/schemas.js","../node_modules/zod/v4/core/registries.js","../node_modules/zod/v4/core/api.js","../node_modules/@hookform/resolvers/zod/dist/zod.mjs","../src/components/Form.tsx","../node_modules/zod/v4/classic/iso.js","../node_modules/zod/v4/classic/errors.js","../node_modules/zod/v4/classic/parse.js","../node_modules/zod/v4/classic/schemas.js","../src/templates/QwanyxTemplate.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\n\"production\" !== process.env.NODE_ENV &&\n  (function () {\n    function getComponentNameFromType(type) {\n      if (null == type) return null;\n      if (\"function\" === typeof type)\n        return type.$$typeof === REACT_CLIENT_REFERENCE\n          ? null\n          : type.displayName || type.name || null;\n      if (\"string\" === typeof type) return type;\n      switch (type) {\n        case REACT_FRAGMENT_TYPE:\n          return \"Fragment\";\n        case REACT_PROFILER_TYPE:\n          return \"Profiler\";\n        case REACT_STRICT_MODE_TYPE:\n          return \"StrictMode\";\n        case REACT_SUSPENSE_TYPE:\n          return \"Suspense\";\n        case REACT_SUSPENSE_LIST_TYPE:\n          return \"SuspenseList\";\n        case REACT_ACTIVITY_TYPE:\n          return \"Activity\";\n      }\n      if (\"object\" === typeof type)\n        switch (\n          (\"number\" === typeof type.tag &&\n            console.error(\n              \"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"\n            ),\n          type.$$typeof)\n        ) {\n          case REACT_PORTAL_TYPE:\n            return \"Portal\";\n          case REACT_CONTEXT_TYPE:\n            return (type.displayName || \"Context\") + \".Provider\";\n          case REACT_CONSUMER_TYPE:\n            return (type._context.displayName || \"Context\") + \".Consumer\";\n          case REACT_FORWARD_REF_TYPE:\n            var innerType = type.render;\n            type = type.displayName;\n            type ||\n              ((type = innerType.displayName || innerType.name || \"\"),\n              (type = \"\" !== type ? \"ForwardRef(\" + type + \")\" : \"ForwardRef\"));\n            return type;\n          case REACT_MEMO_TYPE:\n            return (\n              (innerType = type.displayName || null),\n              null !== innerType\n                ? innerType\n                : getComponentNameFromType(type.type) || \"Memo\"\n            );\n          case REACT_LAZY_TYPE:\n            innerType = type._payload;\n            type = type._init;\n            try {\n              return getComponentNameFromType(type(innerType));\n            } catch (x) {}\n        }\n      return null;\n    }\n    function testStringCoercion(value) {\n      return \"\" + value;\n    }\n    function checkKeyStringCoercion(value) {\n      try {\n        testStringCoercion(value);\n        var JSCompiler_inline_result = !1;\n      } catch (e) {\n        JSCompiler_inline_result = !0;\n      }\n      if (JSCompiler_inline_result) {\n        JSCompiler_inline_result = console;\n        var JSCompiler_temp_const = JSCompiler_inline_result.error;\n        var JSCompiler_inline_result$jscomp$0 =\n          (\"function\" === typeof Symbol &&\n            Symbol.toStringTag &&\n            value[Symbol.toStringTag]) ||\n          value.constructor.name ||\n          \"Object\";\n        JSCompiler_temp_const.call(\n          JSCompiler_inline_result,\n          \"The provided key is an unsupported type %s. This value must be coerced to a string before using it here.\",\n          JSCompiler_inline_result$jscomp$0\n        );\n        return testStringCoercion(value);\n      }\n    }\n    function getTaskName(type) {\n      if (type === REACT_FRAGMENT_TYPE) return \"<>\";\n      if (\n        \"object\" === typeof type &&\n        null !== type &&\n        type.$$typeof === REACT_LAZY_TYPE\n      )\n        return \"<...>\";\n      try {\n        var name = getComponentNameFromType(type);\n        return name ? \"<\" + name + \">\" : \"<...>\";\n      } catch (x) {\n        return \"<...>\";\n      }\n    }\n    function getOwner() {\n      var dispatcher = ReactSharedInternals.A;\n      return null === dispatcher ? null : dispatcher.getOwner();\n    }\n    function UnknownOwner() {\n      return Error(\"react-stack-top-frame\");\n    }\n    function hasValidKey(config) {\n      if (hasOwnProperty.call(config, \"key\")) {\n        var getter = Object.getOwnPropertyDescriptor(config, \"key\").get;\n        if (getter && getter.isReactWarning) return !1;\n      }\n      return void 0 !== config.key;\n    }\n    function defineKeyPropWarningGetter(props, displayName) {\n      function warnAboutAccessingKey() {\n        specialPropKeyWarningShown ||\n          ((specialPropKeyWarningShown = !0),\n          console.error(\n            \"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)\",\n            displayName\n          ));\n      }\n      warnAboutAccessingKey.isReactWarning = !0;\n      Object.defineProperty(props, \"key\", {\n        get: warnAboutAccessingKey,\n        configurable: !0\n      });\n    }\n    function elementRefGetterWithDeprecationWarning() {\n      var componentName = getComponentNameFromType(this.type);\n      didWarnAboutElementRef[componentName] ||\n        ((didWarnAboutElementRef[componentName] = !0),\n        console.error(\n          \"Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release.\"\n        ));\n      componentName = this.props.ref;\n      return void 0 !== componentName ? componentName : null;\n    }\n    function ReactElement(\n      type,\n      key,\n      self,\n      source,\n      owner,\n      props,\n      debugStack,\n      debugTask\n    ) {\n      self = props.ref;\n      type = {\n        $$typeof: REACT_ELEMENT_TYPE,\n        type: type,\n        key: key,\n        props: props,\n        _owner: owner\n      };\n      null !== (void 0 !== self ? self : null)\n        ? Object.defineProperty(type, \"ref\", {\n            enumerable: !1,\n            get: elementRefGetterWithDeprecationWarning\n          })\n        : Object.defineProperty(type, \"ref\", { enumerable: !1, value: null });\n      type._store = {};\n      Object.defineProperty(type._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: 0\n      });\n      Object.defineProperty(type, \"_debugInfo\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: null\n      });\n      Object.defineProperty(type, \"_debugStack\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugStack\n      });\n      Object.defineProperty(type, \"_debugTask\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: debugTask\n      });\n      Object.freeze && (Object.freeze(type.props), Object.freeze(type));\n      return type;\n    }\n    function jsxDEVImpl(\n      type,\n      config,\n      maybeKey,\n      isStaticChildren,\n      source,\n      self,\n      debugStack,\n      debugTask\n    ) {\n      var children = config.children;\n      if (void 0 !== children)\n        if (isStaticChildren)\n          if (isArrayImpl(children)) {\n            for (\n              isStaticChildren = 0;\n              isStaticChildren < children.length;\n              isStaticChildren++\n            )\n              validateChildKeys(children[isStaticChildren]);\n            Object.freeze && Object.freeze(children);\n          } else\n            console.error(\n              \"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\"\n            );\n        else validateChildKeys(children);\n      if (hasOwnProperty.call(config, \"key\")) {\n        children = getComponentNameFromType(type);\n        var keys = Object.keys(config).filter(function (k) {\n          return \"key\" !== k;\n        });\n        isStaticChildren =\n          0 < keys.length\n            ? \"{key: someKey, \" + keys.join(\": ..., \") + \": ...}\"\n            : \"{key: someKey}\";\n        didWarnAboutKeySpread[children + isStaticChildren] ||\n          ((keys =\n            0 < keys.length ? \"{\" + keys.join(\": ..., \") + \": ...}\" : \"{}\"),\n          console.error(\n            'A props object containing a \"key\" prop is being spread into JSX:\\n  let props = %s;\\n  <%s {...props} />\\nReact keys must be passed directly to JSX without using spread:\\n  let props = %s;\\n  <%s key={someKey} {...props} />',\n            isStaticChildren,\n            children,\n            keys,\n            children\n          ),\n          (didWarnAboutKeySpread[children + isStaticChildren] = !0));\n      }\n      children = null;\n      void 0 !== maybeKey &&\n        (checkKeyStringCoercion(maybeKey), (children = \"\" + maybeKey));\n      hasValidKey(config) &&\n        (checkKeyStringCoercion(config.key), (children = \"\" + config.key));\n      if (\"key\" in config) {\n        maybeKey = {};\n        for (var propName in config)\n          \"key\" !== propName && (maybeKey[propName] = config[propName]);\n      } else maybeKey = config;\n      children &&\n        defineKeyPropWarningGetter(\n          maybeKey,\n          \"function\" === typeof type\n            ? type.displayName || type.name || \"Unknown\"\n            : type\n        );\n      return ReactElement(\n        type,\n        children,\n        self,\n        source,\n        getOwner(),\n        maybeKey,\n        debugStack,\n        debugTask\n      );\n    }\n    function validateChildKeys(node) {\n      \"object\" === typeof node &&\n        null !== node &&\n        node.$$typeof === REACT_ELEMENT_TYPE &&\n        node._store &&\n        (node._store.validated = 1);\n    }\n    var React = require(\"react\"),\n      REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n      REACT_PORTAL_TYPE = Symbol.for(\"react.portal\"),\n      REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\"),\n      REACT_STRICT_MODE_TYPE = Symbol.for(\"react.strict_mode\"),\n      REACT_PROFILER_TYPE = Symbol.for(\"react.profiler\");\n    Symbol.for(\"react.provider\");\n    var REACT_CONSUMER_TYPE = Symbol.for(\"react.consumer\"),\n      REACT_CONTEXT_TYPE = Symbol.for(\"react.context\"),\n      REACT_FORWARD_REF_TYPE = Symbol.for(\"react.forward_ref\"),\n      REACT_SUSPENSE_TYPE = Symbol.for(\"react.suspense\"),\n      REACT_SUSPENSE_LIST_TYPE = Symbol.for(\"react.suspense_list\"),\n      REACT_MEMO_TYPE = Symbol.for(\"react.memo\"),\n      REACT_LAZY_TYPE = Symbol.for(\"react.lazy\"),\n      REACT_ACTIVITY_TYPE = Symbol.for(\"react.activity\"),\n      REACT_CLIENT_REFERENCE = Symbol.for(\"react.client.reference\"),\n      ReactSharedInternals =\n        React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,\n      hasOwnProperty = Object.prototype.hasOwnProperty,\n      isArrayImpl = Array.isArray,\n      createTask = console.createTask\n        ? console.createTask\n        : function () {\n            return null;\n          };\n    React = {\n      react_stack_bottom_frame: function (callStackForError) {\n        return callStackForError();\n      }\n    };\n    var specialPropKeyWarningShown;\n    var didWarnAboutElementRef = {};\n    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(\n      React,\n      UnknownOwner\n    )();\n    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));\n    var didWarnAboutKeySpread = {};\n    exports.Fragment = REACT_FRAGMENT_TYPE;\n    exports.jsx = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !1,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n    exports.jsxs = function (type, config, maybeKey, source, self) {\n      var trackActualOwner =\n        1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;\n      return jsxDEVImpl(\n        type,\n        config,\n        maybeKey,\n        !0,\n        source,\n        self,\n        trackActualOwner\n          ? Error(\"react-stack-top-frame\")\n          : unknownOwnerDebugStack,\n        trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask\n      );\n    };\n  })();\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","import React, { createContext, useContext, useEffect, useState } from 'react';\n\nexport interface Theme {\n  name: string;\n  colors: {\n    primary: string;\n    secondary: string;\n    accent: string;\n    success: string;\n    warning: string;\n    error: string;\n    info: string;\n    background: string;\n    foreground: string;\n    card: string;\n    'card-foreground': string;\n    border: string;\n    input: string;\n    ring: string;\n    'text-primary': string;\n    'text-secondary': string;\n    'text-muted': string;\n  };\n  fonts?: {\n    sans?: string;\n    heading?: string;\n    mono?: string;\n  };\n  spacing?: {\n    xs?: string;\n    sm?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  radius?: {\n    sm?: string;\n    DEFAULT?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n  };\n  shadows?: {\n    sm?: string;\n    DEFAULT?: string;\n    md?: string;\n    lg?: string;\n    xl?: string;\n    '2xl'?: string;\n  };\n  transitions?: {\n    fast?: string;\n    base?: string;\n    slow?: string;\n  };\n}\n\ninterface ThemeContextType {\n  theme: Theme;\n  setTheme: (theme: Theme) => void;\n  themes: Theme[];\n  addTheme: (theme: Theme) => void;\n  removeTheme: (name: string) => void;\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined);\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\n// Convert hex to RGB values (returns space-separated RGB)\nconst hexToRgb = (hex: string): string => {\n  // Remove # if present\n  hex = hex.replace('#', '');\n  \n  // Handle 3-digit hex\n  if (hex.length === 3) {\n    hex = hex.split('').map(char => char + char).join('');\n  }\n  \n  const result = /^([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result) return '0 0 0';\n  return `${parseInt(result[1], 16)} ${parseInt(result[2], 16)} ${parseInt(result[3], 16)}`;\n};\n\n// Apply theme to CSS variables\nconst applyTheme = (theme: Theme) => {\n  const root = document.documentElement;\n  \n  // Apply colors\n  Object.entries(theme.colors).forEach(([key, value]) => {\n    // Convert hex to RGB for Tailwind opacity support\n    const rgbValue = value.startsWith('#') ? hexToRgb(value) : value;\n    root.style.setProperty(`--color-${key}`, rgbValue);\n  });\n  \n  // Apply fonts\n  if (theme.fonts) {\n    Object.entries(theme.fonts).forEach(([key, value]) => {\n      root.style.setProperty(`--font-${key}`, value);\n    });\n  }\n  \n  // Apply spacing\n  if (theme.spacing) {\n    Object.entries(theme.spacing).forEach(([key, value]) => {\n      root.style.setProperty(`--spacing-${key}`, value);\n    });\n  }\n  \n  // Apply radius\n  if (theme.radius) {\n    Object.entries(theme.radius).forEach(([key, value]) => {\n      const varName = key === 'DEFAULT' ? '--radius' : `--radius-${key}`;\n      root.style.setProperty(varName, value);\n    });\n  }\n  \n  // Apply shadows\n  if (theme.shadows) {\n    Object.entries(theme.shadows).forEach(([key, value]) => {\n      const varName = key === 'DEFAULT' ? '--shadow' : `--shadow-${key}`;\n      root.style.setProperty(varName, value);\n    });\n  }\n  \n  // Apply transitions\n  if (theme.transitions) {\n    Object.entries(theme.transitions).forEach(([key, value]) => {\n      root.style.setProperty(`--transition-${key}`, value);\n    });\n  }\n};\n\n// Default themes\nconst defaultThemes: Theme[] = [\n  {\n    name: 'QWANYX Light',\n    colors: {\n      primary: '#3B82F6',\n      secondary: '#A855F7',\n      accent: '#22C55E',\n      success: '#22C55E',\n      warning: '#FACC15',\n      error: '#EF4444',\n      info: '#3B82F6',\n      background: '#F9FAFB',\n      foreground: '#0F172A',\n      card: '#FFFFFF',\n      'card-foreground': '#0F172A',\n      border: '#E2E8F0',\n      input: '#FFFFFF',\n      ring: '#3B82F6',\n      'text-primary': '#0F172A',\n      'text-secondary': '#475569',\n      'text-muted': '#94A3B8'\n    }\n  },\n  {\n    name: 'QWANYX Dark',\n    colors: {\n      primary: '#60A5FA',\n      secondary: '#C084FC',\n      accent: '#4ADE80',\n      success: '#4ADE80',\n      warning: '#FDE047',\n      error: '#F87171',\n      info: '#60A5FA',\n      background: '#0F172A',\n      foreground: '#F8FAFC',\n      card: '#1E293B',\n      'card-foreground': '#F8FAFC',\n      border: '#334155',\n      input: '#1E293B',\n      ring: '#60A5FA',\n      'text-primary': '#F8FAFC',\n      'text-secondary': '#CBD5E1',\n      'text-muted': '#64748B'\n    }\n  },\n  {\n    name: 'Ocean Blue',\n    colors: {\n      primary: '#0EA5E9',\n      secondary: '#06B6D4',\n      accent: '#14B8A6',\n      success: '#10B981',\n      warning: '#F59E0B',\n      error: '#EF4444',\n      info: '#0EA5E9',\n      background: '#F0F9FF',\n      foreground: '#0C4A6E',\n      card: '#FFFFFF',\n      'card-foreground': '#0C4A6E',\n      border: '#BAE6FD',\n      input: '#E0F2FE',\n      ring: '#0EA5E9',\n      'text-primary': '#0C4A6E',\n      'text-secondary': '#0369A1',\n      'text-muted': '#7DD3FC'\n    }\n  },\n  {\n    name: 'Forest Green',\n    colors: {\n      primary: '#16A34A',\n      secondary: '#15803D',\n      accent: '#84CC16',\n      success: '#22C55E',\n      warning: '#EAB308',\n      error: '#DC2626',\n      info: '#0891B2',\n      background: '#F0FDF4',\n      foreground: '#14532D',\n      card: '#FFFFFF',\n      'card-foreground': '#14532D',\n      border: '#BBF7D0',\n      input: '#DCFCE7',\n      ring: '#16A34A',\n      'text-primary': '#14532D',\n      'text-secondary': '#166534',\n      'text-muted': '#86EFAC'\n    }\n  }\n];\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n  defaultTheme?: Theme;\n}\n\nexport const ThemeProvider: React.FC<ThemeProviderProps> = ({ \n  children, \n  defaultTheme = defaultThemes[0] \n}) => {\n  const [theme, setThemeState] = useState<Theme>(defaultTheme);\n  const [themes, setThemes] = useState<Theme[]>(defaultThemes);\n  \n  // Apply theme on change\n  useEffect(() => {\n    applyTheme(theme);\n    localStorage.setItem('qwanyx-ui-current-theme', JSON.stringify(theme));\n  }, [theme]);\n  \n  // Load saved theme on mount\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('qwanyx-ui-current-theme');\n    if (savedTheme) {\n      try {\n        const parsed = JSON.parse(savedTheme);\n        setThemeState(parsed);\n      } catch (e) {\n        console.error('Failed to load saved theme:', e);\n      }\n    }\n    \n    const savedThemes = localStorage.getItem('qwanyx-ui-themes');\n    if (savedThemes) {\n      try {\n        const parsed = JSON.parse(savedThemes);\n        setThemes([...defaultThemes, ...parsed]);\n      } catch (e) {\n        console.error('Failed to load saved themes:', e);\n      }\n    }\n  }, []);\n  \n  const setTheme = (newTheme: Theme) => {\n    setThemeState(newTheme);\n  };\n  \n  const addTheme = (newTheme: Theme) => {\n    const updatedThemes = [...themes, newTheme];\n    setThemes(updatedThemes);\n    \n    // Save custom themes (excluding defaults)\n    const customThemes = updatedThemes.filter(t => \n      !defaultThemes.some(dt => dt.name === t.name)\n    );\n    localStorage.setItem('qwanyx-ui-themes', JSON.stringify(customThemes));\n  };\n  \n  const removeTheme = (name: string) => {\n    // Don't allow removing default themes\n    if (defaultThemes.some(t => t.name === name)) return;\n    \n    const updatedThemes = themes.filter(t => t.name !== name);\n    setThemes(updatedThemes);\n    \n    // Save custom themes (excluding defaults)\n    const customThemes = updatedThemes.filter(t => \n      !defaultThemes.some(dt => dt.name === t.name)\n    );\n    localStorage.setItem('qwanyx-ui-themes', JSON.stringify(customThemes));\n  };\n  \n  return (\n    <ThemeContext.Provider value={{ theme, setTheme, themes, addTheme, removeTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};","// Import all theme files\nimport defaultTheme from './default.json';\nimport autodinTheme from './autodin.json';\nimport belgicomicsTheme from './belgicomics.json';\n\nexport interface Theme {\n  name: string;\n  id: string;\n  colors: {\n    primary: string;\n    secondary: string;\n    accent: string;\n    background: string;\n    foreground: string;\n    card: string;\n    border: string;\n    success: string;\n    warning: string;\n    error: string;\n    info: string;\n    text: {\n      primary: string;\n      secondary: string;\n      muted: string;\n    };\n  };\n  typography: {\n    fontFamily: {\n      heading: string;\n      body: string;\n      mono: string;\n    };\n    fontSize: Record<string, string>;\n    fontWeight: Record<string, number>;\n  };\n  spacing: Record<string, string>;\n  borderRadius: Record<string, string>;\n  shadows: Record<string, string>;\n}\n\n// Export all themes as a map\nexport const themes: Record<string, Theme> = {\n  default: defaultTheme,\n  autodin: autodinTheme,\n  belgicomics: belgicomicsTheme\n};\n\n// Helper function to get theme by workspace\nexport const getThemeByWorkspace = (workspace: string): Theme => {\n  return themes[workspace] || themes.default;\n};\n\n// Helper function to get all available themes\nexport const getAllThemes = (): Theme[] => {\n  return Object.values(themes);\n};\n\n// Helper function to get theme by ID\nexport const getThemeById = (id: string): Theme | undefined => {\n  return themes[id];\n};\n\nexport default themes;","import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { getThemeByWorkspace, getAllThemes, Theme } from '../themes';\n\ninterface User {\n  id: string;\n  email: string;\n}\n\ninterface WorkspaceContextType {\n  // Workspace info\n  workspace: string;\n  setWorkspace: (workspace: string) => void;\n  \n  // Auth\n  user: User | null;\n  token: string | null;\n  isAuthenticated: boolean;\n  login: (user: User, token: string) => void;\n  logout: () => void;\n  \n  // Theme management\n  themes: Theme[];\n  currentTheme: Theme | null;\n  saveTheme: () => Promise<void>;\n  loadThemes: () => Promise<void>;\n  deleteTheme: () => Promise<void>;\n  \n  // Template management\n  templates: any[];\n  saveTemplate: () => Promise<void>;\n  loadTemplates: () => Promise<void>;\n  \n  // API\n  apiUrl: string;\n  apiCall: (endpoint: string, options?: RequestInit) => Promise<any>;\n}\n\nconst WorkspaceContext = createContext<WorkspaceContextType | undefined>(undefined);\n\nexport interface WorkspaceProviderProps {\n  children: ReactNode;\n  defaultWorkspace?: string;\n  apiUrl?: string;\n}\n\nexport const WorkspaceProvider: React.FC<WorkspaceProviderProps> = ({\n  children,\n  defaultWorkspace = 'qwanyx-ui',\n  apiUrl = 'http://135.181.72.183:5002'\n}) => {\n  const [workspace, setWorkspaceState] = useState(defaultWorkspace);\n  const [user, setUser] = useState<User | null>(null);\n  const [token, setToken] = useState<string | null>(null);\n  const [themes, setThemes] = useState<Theme[]>([]);\n  const [currentTheme, setCurrentTheme] = useState<Theme | null>(null);\n  const [templates, setTemplates] = useState<any[]>([]);\n\n  // Load auth from localStorage on mount\n  useEffect(() => {\n    const storedToken = localStorage.getItem(`${workspace}_token`);\n    const storedUser = localStorage.getItem(`${workspace}_user`);\n    \n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n  }, [workspace]);\n\n  // API call helper with auth\n  const apiCall = async (endpoint: string, options: RequestInit = {}) => {\n    const headers: any = {\n      'Content-Type': 'application/json',\n      ...options.headers\n    };\n\n    if (token) {\n      headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    const response = await fetch(`${apiUrl}${endpoint}`, {\n      ...options,\n      headers\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.message || 'API call failed');\n    }\n\n    return response.json();\n  };\n\n  // Auth functions\n  const login = (newUser: User, newToken: string) => {\n    setUser(newUser);\n    setToken(newToken);\n    localStorage.setItem(`${workspace}_token`, newToken);\n    localStorage.setItem(`${workspace}_user`, JSON.stringify(newUser));\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem(`${workspace}_token`);\n    localStorage.removeItem(`${workspace}_user`);\n  };\n\n  // Theme management - themes are now static files\n  const saveTheme = async () => {\n    console.warn('Themes are now static files. To add a new theme, create a JSON file in src/themes/');\n    // Themes are read-only from files, no saving needed\n  };\n\n  const loadThemes = async () => {\n    // Load themes from static files\n    const allThemes = getAllThemes();\n    setThemes(allThemes);\n    \n    // Set current theme based on workspace\n    const workspaceTheme = getThemeByWorkspace(workspace);\n    setCurrentTheme(workspaceTheme);\n  };\n\n  const deleteTheme = async () => {\n    console.warn('Themes are now static files. To remove a theme, delete its JSON file from src/themes/');\n    // Themes are read-only from files, no deletion needed\n  };\n\n  // Template management - templates are now static files\n  const saveTemplate = async () => {\n    console.warn('Templates are now static files. To add a new template, create a file in src/templates/');\n    // Templates are read-only from files, no saving needed\n  };\n\n  const loadTemplates = async () => {\n    // Templates will be loaded from static files when implemented\n    setTemplates([]);\n  };\n\n  // Switch workspace\n  const setWorkspace = (newWorkspace: string) => {\n    setWorkspaceState(newWorkspace);\n    // Clear current auth if switching workspace\n    setUser(null);\n    setToken(null);\n    // Load new workspace data\n    const storedToken = localStorage.getItem(`${newWorkspace}_token`);\n    const storedUser = localStorage.getItem(`${newWorkspace}_user`);\n    \n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(JSON.parse(storedUser));\n    }\n  };\n\n  // Load themes and templates on mount or workspace change\n  useEffect(() => {\n    loadThemes();\n    loadTemplates();\n  }, [workspace, user]);\n\n  const value: WorkspaceContextType = {\n    workspace,\n    setWorkspace,\n    user,\n    token,\n    isAuthenticated: !!user,\n    login,\n    logout,\n    themes,\n    currentTheme,\n    saveTheme,\n    loadThemes,\n    deleteTheme,\n    templates,\n    saveTemplate,\n    loadTemplates,\n    apiUrl,\n    apiCall\n  };\n\n  return (\n    <WorkspaceContext.Provider value={value}>\n      {children}\n    </WorkspaceContext.Provider>\n  );\n};\n\nexport const useWorkspace = () => {\n  const context = useContext(WorkspaceContext);\n  if (context === undefined) {\n    throw new Error('useWorkspace must be used within a WorkspaceProvider');\n  }\n  return context;\n};","import React from 'react';\n\nexport interface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: 'solid' | 'outline' | 'ghost' | 'link';\n  color?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'info';\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  fullWidth?: boolean;\n  loading?: boolean;\n  icon?: React.ReactNode;\n  iconPosition?: 'left' | 'right';\n}\n\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({\n  children,\n  variant = 'solid',\n  color = 'primary',\n  size = 'md',\n  fullWidth = false,\n  loading = false,\n  icon,\n  iconPosition = 'left',\n  className = '',\n  disabled,\n  ...props\n}, ref) => {\n  // Build class names\n  const classNames = [\n    'qwanyx-button',\n    `qwanyx-button--${variant}`,\n    `qwanyx-button--${size}`,\n    `qwanyx-button--${color}`,\n    fullWidth && 'qwanyx-button--fullwidth',\n    loading && 'qwanyx-button--loading',\n    className\n  ].filter(Boolean).join(' ');\n  \n  // Loading spinner\n  const spinner = (\n    <span className={`qwanyx-spinner qwanyx-spinner--${size}`}>\n      <svg \n        xmlns=\"http://www.w3.org/2000/svg\" \n        fill=\"none\" \n        viewBox=\"0 0 24 24\"\n      >\n        <circle \n          className=\"qwanyx-spinner__track\" \n          cx=\"12\" \n          cy=\"12\" \n          r=\"10\" \n          stroke=\"currentColor\" \n          strokeWidth=\"4\"\n        />\n        <path \n          className=\"qwanyx-spinner__path\" \n          fill=\"currentColor\" \n          d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n        />\n      </svg>\n    </span>\n  );\n  \n  return (\n    <button\n      ref={ref}\n      className={classNames}\n      disabled={disabled || loading}\n      {...props}\n    >\n      {loading && iconPosition === 'left' && (\n        <span className=\"qwanyx-button__icon qwanyx-button__icon--left\">{spinner}</span>\n      )}\n      {!loading && icon && iconPosition === 'left' && (\n        <span className=\"qwanyx-button__icon qwanyx-button__icon--left\">{icon}</span>\n      )}\n      {children}\n      {!loading && icon && iconPosition === 'right' && (\n        <span className=\"qwanyx-button__icon qwanyx-button__icon--right\">{icon}</span>\n      )}\n      {loading && iconPosition === 'right' && (\n        <span className=\"qwanyx-button__icon qwanyx-button__icon--right\">{spinner}</span>\n      )}\n    </button>\n  );\n});\n\nButton.displayName = 'Button';","import React from 'react';\n\nexport interface CardProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'elevated' | 'outlined' | 'filled';\n  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  hoverable?: boolean;\n}\n\nexport const Card = React.forwardRef<HTMLDivElement, CardProps>(({\n  children,\n  variant = 'elevated',\n  padding = 'md',\n  hoverable = false,\n  className = '',\n  ...props\n}, ref) => {\n  const classNames = [\n    'qwanyx-card',\n    `qwanyx-card--${variant}`,\n    `qwanyx-card--padding-${padding}`,\n    hoverable && 'qwanyx-card--hoverable',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={classNames} {...props}>\n      {children}\n    </div>\n  );\n});\n\nCard.displayName = 'Card';\n\nexport interface CardHeaderProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardHeader = React.forwardRef<HTMLDivElement, CardHeaderProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <div \n      ref={ref} \n      className={`qwanyx-card__header ${className}`} \n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nCardHeader.displayName = 'CardHeader';\n\nexport interface CardTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n}\n\nexport const CardTitle = React.forwardRef<HTMLHeadingElement, CardTitleProps>(({\n  children,\n  as: Component = 'h3',\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <Component \n      ref={ref as any} \n      className={`qwanyx-card__title ${className}`} \n      {...props}\n    >\n      {children}\n    </Component>\n  );\n});\n\nCardTitle.displayName = 'CardTitle';\n\nexport interface CardDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nexport const CardDescription = React.forwardRef<HTMLParagraphElement, CardDescriptionProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <p \n      ref={ref} \n      className={`qwanyx-card__description ${className}`} \n      {...props}\n    >\n      {children}\n    </p>\n  );\n});\n\nCardDescription.displayName = 'CardDescription';\n\nexport interface CardContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardContent = React.forwardRef<HTMLDivElement, CardContentProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <div \n      ref={ref} \n      className={`qwanyx-card__content ${className}`} \n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nCardContent.displayName = 'CardContent';\n\nexport interface CardFooterProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const CardFooter = React.forwardRef<HTMLDivElement, CardFooterProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <div \n      ref={ref} \n      className={`qwanyx-card__footer ${className}`} \n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nCardFooter.displayName = 'CardFooter';\n\nexport interface CardImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  aspectRatio?: 'square' | '16/9' | '4/3' | '21/9';\n}\n\nexport const CardImage = React.forwardRef<HTMLImageElement, CardImageProps>(({\n  aspectRatio = '16/9',\n  className = '',\n  alt = '',\n  ...props\n}, ref) => {\n  const aspectClasses = {\n    'square': 'qwanyx-card__image-container--square',\n    '16/9': 'qwanyx-card__image-container--video',\n    '4/3': 'qwanyx-card__image-container--4-3',\n    '21/9': 'qwanyx-card__image-container--21-9'\n  };\n  \n  return (\n    <div className={`qwanyx-card__image-container ${aspectClasses[aspectRatio]}`}>\n      <img \n        ref={ref}\n        className={`qwanyx-card__image ${className}`}\n        alt={alt}\n        {...props}\n      />\n    </div>\n  );\n});\n\nCardImage.displayName = 'CardImage';","import React from 'react';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isDateObject = (value) => value instanceof Date;\n\nvar isNullOrUndefined = (value) => value == null;\n\nconst isObjectType = (value) => typeof value === 'object';\nvar isObject = (value) => !isNullOrUndefined(value) &&\n    !Array.isArray(value) &&\n    isObjectType(value) &&\n    !isDateObject(value);\n\nvar getEventValue = (event) => isObject(event) && event.target\n    ? isCheckBoxInput(event.target)\n        ? event.target.checked\n        : event.target.value\n    : event;\n\nvar getNodeParentName = (name) => name.substring(0, name.search(/\\.\\d+(\\.|$)/)) || name;\n\nvar isNameInFieldArray = (names, name) => names.has(getNodeParentName(name));\n\nvar isPlainObject = (tempObject) => {\n    const prototypeCopy = tempObject.constructor && tempObject.constructor.prototype;\n    return (isObject(prototypeCopy) && prototypeCopy.hasOwnProperty('isPrototypeOf'));\n};\n\nvar isWeb = typeof window !== 'undefined' &&\n    typeof window.HTMLElement !== 'undefined' &&\n    typeof document !== 'undefined';\n\nfunction cloneObject(data) {\n    let copy;\n    const isArray = Array.isArray(data);\n    const isFileListInstance = typeof FileList !== 'undefined' ? data instanceof FileList : false;\n    if (data instanceof Date) {\n        copy = new Date(data);\n    }\n    else if (!(isWeb && (data instanceof Blob || isFileListInstance)) &&\n        (isArray || isObject(data))) {\n        copy = isArray ? [] : Object.create(Object.getPrototypeOf(data));\n        if (!isArray && !isPlainObject(data)) {\n            copy = data;\n        }\n        else {\n            for (const key in data) {\n                if (data.hasOwnProperty(key)) {\n                    copy[key] = cloneObject(data[key]);\n                }\n            }\n        }\n    }\n    else {\n        return data;\n    }\n    return copy;\n}\n\nvar isKey = (value) => /^\\w*$/.test(value);\n\nvar isUndefined = (val) => val === undefined;\n\nvar compact = (value) => Array.isArray(value) ? value.filter(Boolean) : [];\n\nvar stringToPath = (input) => compact(input.replace(/[\"|']|\\]/g, '').split(/\\.|\\[/));\n\nvar get = (object, path, defaultValue) => {\n    if (!path || !isObject(object)) {\n        return defaultValue;\n    }\n    const result = (isKey(path) ? [path] : stringToPath(path)).reduce((result, key) => isNullOrUndefined(result) ? result : result[key], object);\n    return isUndefined(result) || result === object\n        ? isUndefined(object[path])\n            ? defaultValue\n            : object[path]\n        : result;\n};\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar set = (object, path, value) => {\n    let index = -1;\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\n    const length = tempPath.length;\n    const lastIndex = length - 1;\n    while (++index < length) {\n        const key = tempPath[index];\n        let newValue = value;\n        if (index !== lastIndex) {\n            const objValue = object[key];\n            newValue =\n                isObject(objValue) || Array.isArray(objValue)\n                    ? objValue\n                    : !isNaN(+tempPath[index + 1])\n                        ? []\n                        : {};\n        }\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n            return;\n        }\n        object[key] = newValue;\n        object = object[key];\n    }\n};\n\nconst EVENTS = {\n    BLUR: 'blur',\n    FOCUS_OUT: 'focusout',\n    CHANGE: 'change',\n};\nconst VALIDATION_MODE = {\n    onBlur: 'onBlur',\n    onChange: 'onChange',\n    onSubmit: 'onSubmit',\n    onTouched: 'onTouched',\n    all: 'all',\n};\nconst INPUT_VALIDATION_RULES = {\n    max: 'max',\n    min: 'min',\n    maxLength: 'maxLength',\n    minLength: 'minLength',\n    pattern: 'pattern',\n    required: 'required',\n    validate: 'validate',\n};\n\nconst HookFormContext = React.createContext(null);\nHookFormContext.displayName = 'HookFormContext';\n/**\n * This custom hook allows you to access the form context. useFormContext is intended to be used in deeply nested structures, where it would become inconvenient to pass the context as a prop. To be used with {@link FormProvider}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @returns return all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst useFormContext = () => React.useContext(HookFormContext);\n/**\n * A provider component that propagates the `useForm` methods to all children components via [React Context](https://reactjs.org/docs/context.html) API. To be used with {@link useFormContext}.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformcontext) • [Demo](https://codesandbox.io/s/react-hook-form-v7-form-context-ytudi)\n *\n * @param props - all useForm methods\n *\n * @example\n * ```tsx\n * function App() {\n *   const methods = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   return (\n *     <FormProvider {...methods} >\n *       <form onSubmit={methods.handleSubmit(onSubmit)}>\n *         <NestedInput />\n *         <input type=\"submit\" />\n *       </form>\n *     </FormProvider>\n *   );\n * }\n *\n *  function NestedInput() {\n *   const { register } = useFormContext(); // retrieve all hook methods\n *   return <input {...register(\"test\")} />;\n * }\n * ```\n */\nconst FormProvider = (props) => {\n    const { children, ...data } = props;\n    return (React.createElement(HookFormContext.Provider, { value: data }, children));\n};\n\nvar getProxyFormState = (formState, control, localProxyFormState, isRoot = true) => {\n    const result = {\n        defaultValues: control._defaultValues,\n    };\n    for (const key in formState) {\n        Object.defineProperty(result, key, {\n            get: () => {\n                const _key = key;\n                if (control._proxyFormState[_key] !== VALIDATION_MODE.all) {\n                    control._proxyFormState[_key] = !isRoot || VALIDATION_MODE.all;\n                }\n                localProxyFormState && (localProxyFormState[_key] = true);\n                return formState[_key];\n            },\n        });\n    }\n    return result;\n};\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n\n/**\n * This custom hook allows you to subscribe to each form state, and isolate the re-render at the custom hook level. It has its scope in terms of form state subscription, so it would not affect other useFormState and useForm. Using this hook can reduce the re-render impact on large and complex form application.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useformstate) • [Demo](https://codesandbox.io/s/useformstate-75xly)\n *\n * @param props - include options on specify fields to subscribe. {@link UseFormStateReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, control } = useForm({\n *     defaultValues: {\n *     firstName: \"firstName\"\n *   }});\n *   const { dirtyFields } = useFormState({\n *     control\n *   });\n *   const onSubmit = (data) => console.log(data);\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input {...register(\"firstName\")} placeholder=\"First Name\" />\n *       {dirtyFields.firstName && <p>Field is dirty.</p>}\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFormState(props) {\n    const methods = useFormContext();\n    const { control = methods.control, disabled, name, exact } = props || {};\n    const [formState, updateFormState] = React.useState(control._formState);\n    const _localProxyFormState = React.useRef({\n        isDirty: false,\n        isLoading: false,\n        dirtyFields: false,\n        touchedFields: false,\n        validatingFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    });\n    useIsomorphicLayoutEffect(() => control._subscribe({\n        name,\n        formState: _localProxyFormState.current,\n        exact,\n        callback: (formState) => {\n            !disabled &&\n                updateFormState({\n                    ...control._formState,\n                    ...formState,\n                });\n        },\n    }), [name, disabled, exact]);\n    React.useEffect(() => {\n        _localProxyFormState.current.isValid && control._setValid(true);\n    }, [control]);\n    return React.useMemo(() => getProxyFormState(formState, control, _localProxyFormState.current, false), [formState, control]);\n}\n\nvar isString = (value) => typeof value === 'string';\n\nvar generateWatchOutput = (names, _names, formValues, isGlobal, defaultValue) => {\n    if (isString(names)) {\n        isGlobal && _names.watch.add(names);\n        return get(formValues, names, defaultValue);\n    }\n    if (Array.isArray(names)) {\n        return names.map((fieldName) => (isGlobal && _names.watch.add(fieldName),\n            get(formValues, fieldName)));\n    }\n    isGlobal && (_names.watchAll = true);\n    return formValues;\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nfunction deepEqual(object1, object2, _internal_visited = new WeakSet()) {\n    if (isPrimitive(object1) || isPrimitive(object2)) {\n        return object1 === object2;\n    }\n    if (isDateObject(object1) && isDateObject(object2)) {\n        return object1.getTime() === object2.getTime();\n    }\n    const keys1 = Object.keys(object1);\n    const keys2 = Object.keys(object2);\n    if (keys1.length !== keys2.length) {\n        return false;\n    }\n    if (_internal_visited.has(object1) || _internal_visited.has(object2)) {\n        return true;\n    }\n    _internal_visited.add(object1);\n    _internal_visited.add(object2);\n    for (const key of keys1) {\n        const val1 = object1[key];\n        if (!keys2.includes(key)) {\n            return false;\n        }\n        if (key !== 'ref') {\n            const val2 = object2[key];\n            if ((isDateObject(val1) && isDateObject(val2)) ||\n                (isObject(val1) && isObject(val2)) ||\n                (Array.isArray(val1) && Array.isArray(val2))\n                ? !deepEqual(val1, val2, _internal_visited)\n                : val1 !== val2) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Custom hook to subscribe to field change and isolate re-rendering at the component level.\n *\n * @remarks\n *\n * [API](https://react-hook-form.com/docs/usewatch) • [Demo](https://codesandbox.io/s/react-hook-form-v7-ts-usewatch-h9i5e)\n *\n * @example\n * ```tsx\n * const { control } = useForm();\n * const values = useWatch({\n *   name: \"fieldName\"\n *   control,\n * })\n * ```\n */\nfunction useWatch(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, defaultValue, disabled, exact, compute, } = props || {};\n    const _defaultValue = React.useRef(defaultValue);\n    const _compute = React.useRef(compute);\n    const _computeFormValues = React.useRef(undefined);\n    _compute.current = compute;\n    const defaultValueMemo = React.useMemo(() => control._getWatch(name, _defaultValue.current), [control, name]);\n    const [value, updateValue] = React.useState(_compute.current ? _compute.current(defaultValueMemo) : defaultValueMemo);\n    useIsomorphicLayoutEffect(() => control._subscribe({\n        name,\n        formState: {\n            values: true,\n        },\n        exact,\n        callback: (formState) => {\n            if (!disabled) {\n                const formValues = generateWatchOutput(name, control._names, formState.values || control._formValues, false, _defaultValue.current);\n                if (_compute.current) {\n                    const computedFormValues = _compute.current(formValues);\n                    if (!deepEqual(computedFormValues, _computeFormValues.current)) {\n                        updateValue(computedFormValues);\n                        _computeFormValues.current = computedFormValues;\n                    }\n                }\n                else {\n                    updateValue(formValues);\n                }\n            }\n        },\n    }), [control, disabled, name, exact]);\n    React.useEffect(() => control._removeUnmounted());\n    return value;\n}\n\n/**\n * Custom hook to work with controlled component, this function provide you with both form and field level state. Re-render is isolated at the hook level.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller) • [Demo](https://codesandbox.io/s/usecontroller-0o8px)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns field properties, field and form state. {@link UseControllerReturn}\n *\n * @example\n * ```tsx\n * function Input(props) {\n *   const { field, fieldState, formState } = useController(props);\n *   return (\n *     <div>\n *       <input {...field} placeholder={props.name} />\n *       <p>{fieldState.isTouched && \"Touched\"}</p>\n *       <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *     </div>\n *   );\n * }\n * ```\n */\nfunction useController(props) {\n    const methods = useFormContext();\n    const { name, disabled, control = methods.control, shouldUnregister, defaultValue, } = props;\n    const isArrayField = isNameInFieldArray(control._names.array, name);\n    const defaultValueMemo = React.useMemo(() => get(control._formValues, name, get(control._defaultValues, name, defaultValue)), [control, name, defaultValue]);\n    const value = useWatch({\n        control,\n        name,\n        defaultValue: defaultValueMemo,\n        exact: true,\n    });\n    const formState = useFormState({\n        control,\n        name,\n        exact: true,\n    });\n    const _props = React.useRef(props);\n    const _registerProps = React.useRef(control.register(name, {\n        ...props.rules,\n        value,\n        ...(isBoolean(props.disabled) ? { disabled: props.disabled } : {}),\n    }));\n    _props.current = props;\n    const fieldState = React.useMemo(() => Object.defineProperties({}, {\n        invalid: {\n            enumerable: true,\n            get: () => !!get(formState.errors, name),\n        },\n        isDirty: {\n            enumerable: true,\n            get: () => !!get(formState.dirtyFields, name),\n        },\n        isTouched: {\n            enumerable: true,\n            get: () => !!get(formState.touchedFields, name),\n        },\n        isValidating: {\n            enumerable: true,\n            get: () => !!get(formState.validatingFields, name),\n        },\n        error: {\n            enumerable: true,\n            get: () => get(formState.errors, name),\n        },\n    }), [formState, name]);\n    const onChange = React.useCallback((event) => _registerProps.current.onChange({\n        target: {\n            value: getEventValue(event),\n            name: name,\n        },\n        type: EVENTS.CHANGE,\n    }), [name]);\n    const onBlur = React.useCallback(() => _registerProps.current.onBlur({\n        target: {\n            value: get(control._formValues, name),\n            name: name,\n        },\n        type: EVENTS.BLUR,\n    }), [name, control._formValues]);\n    const ref = React.useCallback((elm) => {\n        const field = get(control._fields, name);\n        if (field && elm) {\n            field._f.ref = {\n                focus: () => elm.focus && elm.focus(),\n                select: () => elm.select && elm.select(),\n                setCustomValidity: (message) => elm.setCustomValidity(message),\n                reportValidity: () => elm.reportValidity(),\n            };\n        }\n    }, [control._fields, name]);\n    const field = React.useMemo(() => ({\n        name,\n        value,\n        ...(isBoolean(disabled) || formState.disabled\n            ? { disabled: formState.disabled || disabled }\n            : {}),\n        onChange,\n        onBlur,\n        ref,\n    }), [name, disabled, formState.disabled, onChange, onBlur, ref, value]);\n    React.useEffect(() => {\n        const _shouldUnregisterField = control._options.shouldUnregister || shouldUnregister;\n        control.register(name, {\n            ..._props.current.rules,\n            ...(isBoolean(_props.current.disabled)\n                ? { disabled: _props.current.disabled }\n                : {}),\n        });\n        const updateMounted = (name, value) => {\n            const field = get(control._fields, name);\n            if (field && field._f) {\n                field._f.mount = value;\n            }\n        };\n        updateMounted(name, true);\n        if (_shouldUnregisterField) {\n            const value = cloneObject(get(control._options.defaultValues, name));\n            set(control._defaultValues, name, value);\n            if (isUndefined(get(control._formValues, name))) {\n                set(control._formValues, name, value);\n            }\n        }\n        !isArrayField && control.register(name);\n        return () => {\n            (isArrayField\n                ? _shouldUnregisterField && !control._state.action\n                : _shouldUnregisterField)\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, isArrayField, shouldUnregister]);\n    React.useEffect(() => {\n        control._setDisabledField({\n            disabled,\n            name,\n        });\n    }, [disabled, name, control]);\n    return React.useMemo(() => ({\n        field,\n        formState,\n        fieldState,\n    }), [field, formState, fieldState]);\n}\n\n/**\n * Component based on `useController` hook to work with controlled component.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usecontroller/controller) • [Demo](https://codesandbox.io/s/react-hook-form-v6-controller-ts-jwyzw) • [Video](https://www.youtube.com/watch?v=N2UNk_UCVyA)\n *\n * @param props - the path name to the form field value, and validation rules.\n *\n * @returns provide field handler functions, field and form state.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control } = useForm<FormValues>({\n *     defaultValues: {\n *       test: \"\"\n *     }\n *   });\n *\n *   return (\n *     <form>\n *       <Controller\n *         control={control}\n *         name=\"test\"\n *         render={({ field: { onChange, onBlur, value, ref }, formState, fieldState }) => (\n *           <>\n *             <input\n *               onChange={onChange} // send value to hook form\n *               onBlur={onBlur} // notify when input is touched\n *               value={value} // return updated value\n *               ref={ref} // set ref for focus management\n *             />\n *             <p>{formState.isSubmitted ? \"submitted\" : \"\"}</p>\n *             <p>{fieldState.isTouched ? \"touched\" : \"\"}</p>\n *           </>\n *         )}\n *       />\n *     </form>\n *   );\n * }\n * ```\n */\nconst Controller = (props) => props.render(useController(props));\n\nconst flatten = (obj) => {\n    const output = {};\n    for (const key of Object.keys(obj)) {\n        if (isObjectType(obj[key]) && obj[key] !== null) {\n            const nested = flatten(obj[key]);\n            for (const nestedKey of Object.keys(nested)) {\n                output[`${key}.${nestedKey}`] = nested[nestedKey];\n            }\n        }\n        else {\n            output[key] = obj[key];\n        }\n    }\n    return output;\n};\n\nconst POST_REQUEST = 'post';\n/**\n * Form component to manage submission.\n *\n * @param props - to setup submission detail. {@link FormProps}\n *\n * @returns form component or headless render prop.\n *\n * @example\n * ```tsx\n * function App() {\n *   const { control, formState: { errors } } = useForm();\n *\n *   return (\n *     <Form action=\"/api\" control={control}>\n *       <input {...register(\"name\")} />\n *       <p>{errors?.root?.server && 'Server error'}</p>\n *       <button>Submit</button>\n *     </Form>\n *   );\n * }\n * ```\n */\nfunction Form(props) {\n    const methods = useFormContext();\n    const [mounted, setMounted] = React.useState(false);\n    const { control = methods.control, onSubmit, children, action, method = POST_REQUEST, headers, encType, onError, render, onSuccess, validateStatus, ...rest } = props;\n    const submit = async (event) => {\n        let hasError = false;\n        let type = '';\n        await control.handleSubmit(async (data) => {\n            const formData = new FormData();\n            let formDataJson = '';\n            try {\n                formDataJson = JSON.stringify(data);\n            }\n            catch (_a) { }\n            const flattenFormValues = flatten(control._formValues);\n            for (const key in flattenFormValues) {\n                formData.append(key, flattenFormValues[key]);\n            }\n            if (onSubmit) {\n                await onSubmit({\n                    data,\n                    event,\n                    method,\n                    formData,\n                    formDataJson,\n                });\n            }\n            if (action) {\n                try {\n                    const shouldStringifySubmissionData = [\n                        headers && headers['Content-Type'],\n                        encType,\n                    ].some((value) => value && value.includes('json'));\n                    const response = await fetch(String(action), {\n                        method,\n                        headers: {\n                            ...headers,\n                            ...(encType && encType !== 'multipart/form-data'\n                                ? { 'Content-Type': encType }\n                                : {}),\n                        },\n                        body: shouldStringifySubmissionData ? formDataJson : formData,\n                    });\n                    if (response &&\n                        (validateStatus\n                            ? !validateStatus(response.status)\n                            : response.status < 200 || response.status >= 300)) {\n                        hasError = true;\n                        onError && onError({ response });\n                        type = String(response.status);\n                    }\n                    else {\n                        onSuccess && onSuccess({ response });\n                    }\n                }\n                catch (error) {\n                    hasError = true;\n                    onError && onError({ error });\n                }\n            }\n        })(event);\n        if (hasError && props.control) {\n            props.control._subjects.state.next({\n                isSubmitSuccessful: false,\n            });\n            props.control.setError('root.server', {\n                type,\n            });\n        }\n    };\n    React.useEffect(() => {\n        setMounted(true);\n    }, []);\n    return render ? (React.createElement(React.Fragment, null, render({\n        submit,\n    }))) : (React.createElement(\"form\", { noValidate: mounted, action: action, method: method, encType: encType, onSubmit: submit, ...rest }, children));\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => validateAllFieldCriteria\n    ? {\n        ...errors[name],\n        types: {\n            ...(errors[name] && errors[name].types ? errors[name].types : {}),\n            [type]: message || true,\n        },\n    }\n    : {};\n\nvar convertToArrayPayload = (value) => (Array.isArray(value) ? value : [value]);\n\nvar createSubject = () => {\n    let _observers = [];\n    const next = (value) => {\n        for (const observer of _observers) {\n            observer.next && observer.next(value);\n        }\n    };\n    const subscribe = (observer) => {\n        _observers.push(observer);\n        return {\n            unsubscribe: () => {\n                _observers = _observers.filter((o) => o !== observer);\n            },\n        };\n    };\n    const unsubscribe = () => {\n        _observers = [];\n    };\n    return {\n        get observers() {\n            return _observers;\n        },\n        next,\n        subscribe,\n        unsubscribe,\n    };\n};\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isHTMLElement = (value) => {\n    if (!isWeb) {\n        return false;\n    }\n    const owner = value ? value.ownerDocument : 0;\n    return (value instanceof\n        (owner && owner.defaultView ? owner.defaultView.HTMLElement : HTMLElement));\n};\n\nvar isMultipleSelect = (element) => element.type === `select-multiple`;\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isRadioOrCheckbox = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nvar live = (ref) => isHTMLElement(ref) && ref.isConnected;\n\nfunction baseGet(object, updatePath) {\n    const length = updatePath.slice(0, -1).length;\n    let index = 0;\n    while (index < length) {\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\n    }\n    return object;\n}\nfunction isEmptyArray(obj) {\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && !isUndefined(obj[key])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction unset(object, path) {\n    const paths = Array.isArray(path)\n        ? path\n        : isKey(path)\n            ? [path]\n            : stringToPath(path);\n    const childObject = paths.length === 1 ? object : baseGet(object, paths);\n    const index = paths.length - 1;\n    const key = paths[index];\n    if (childObject) {\n        delete childObject[key];\n    }\n    if (index !== 0 &&\n        ((isObject(childObject) && isEmptyObject(childObject)) ||\n            (Array.isArray(childObject) && isEmptyArray(childObject)))) {\n        unset(object, paths.slice(0, -1));\n    }\n    return object;\n}\n\nvar objectHasFunction = (data) => {\n    for (const key in data) {\n        if (isFunction(data[key])) {\n            return true;\n        }\n    }\n    return false;\n};\n\nfunction markFieldsDirty(data, fields = {}) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                fields[key] = Array.isArray(data[key]) ? [] : {};\n                markFieldsDirty(data[key], fields[key]);\n            }\n            else if (!isNullOrUndefined(data[key])) {\n                fields[key] = true;\n            }\n        }\n    }\n    return fields;\n}\nfunction getDirtyFieldsFromDefaultValues(data, formValues, dirtyFieldsFromValues) {\n    const isParentNodeArray = Array.isArray(data);\n    if (isObject(data) || isParentNodeArray) {\n        for (const key in data) {\n            if (Array.isArray(data[key]) ||\n                (isObject(data[key]) && !objectHasFunction(data[key]))) {\n                if (isUndefined(formValues) ||\n                    isPrimitive(dirtyFieldsFromValues[key])) {\n                    dirtyFieldsFromValues[key] = Array.isArray(data[key])\n                        ? markFieldsDirty(data[key], [])\n                        : { ...markFieldsDirty(data[key]) };\n                }\n                else {\n                    getDirtyFieldsFromDefaultValues(data[key], isNullOrUndefined(formValues) ? {} : formValues[key], dirtyFieldsFromValues[key]);\n                }\n            }\n            else {\n                dirtyFieldsFromValues[key] = !deepEqual(data[key], formValues[key]);\n            }\n        }\n    }\n    return dirtyFieldsFromValues;\n}\nvar getDirtyFields = (defaultValues, formValues) => getDirtyFieldsFromDefaultValues(defaultValues, formValues, markFieldsDirty(formValues));\n\nconst defaultResult = {\n    value: false,\n    isValid: false,\n};\nconst validResult = { value: true, isValid: true };\nvar getCheckboxValue = (options) => {\n    if (Array.isArray(options)) {\n        if (options.length > 1) {\n            const values = options\n                .filter((option) => option && option.checked && !option.disabled)\n                .map((option) => option.value);\n            return { value: values, isValid: !!values.length };\n        }\n        return options[0].checked && !options[0].disabled\n            ? // @ts-expect-error expected to work in the browser\n                options[0].attributes && !isUndefined(options[0].attributes.value)\n                    ? isUndefined(options[0].value) || options[0].value === ''\n                        ? validResult\n                        : { value: options[0].value, isValid: true }\n                    : validResult\n            : defaultResult;\n    }\n    return defaultResult;\n};\n\nvar getFieldValueAs = (value, { valueAsNumber, valueAsDate, setValueAs }) => isUndefined(value)\n    ? value\n    : valueAsNumber\n        ? value === ''\n            ? NaN\n            : value\n                ? +value\n                : value\n        : valueAsDate && isString(value)\n            ? new Date(value)\n            : setValueAs\n                ? setValueAs(value)\n                : value;\n\nconst defaultReturn = {\n    isValid: false,\n    value: null,\n};\nvar getRadioValue = (options) => Array.isArray(options)\n    ? options.reduce((previous, option) => option && option.checked && !option.disabled\n        ? {\n            isValid: true,\n            value: option.value,\n        }\n        : previous, defaultReturn)\n    : defaultReturn;\n\nfunction getFieldValue(_f) {\n    const ref = _f.ref;\n    if (isFileInput(ref)) {\n        return ref.files;\n    }\n    if (isRadioInput(ref)) {\n        return getRadioValue(_f.refs).value;\n    }\n    if (isMultipleSelect(ref)) {\n        return [...ref.selectedOptions].map(({ value }) => value);\n    }\n    if (isCheckBoxInput(ref)) {\n        return getCheckboxValue(_f.refs).value;\n    }\n    return getFieldValueAs(isUndefined(ref.value) ? _f.ref.value : ref.value, _f);\n}\n\nvar getResolverOptions = (fieldsNames, _fields, criteriaMode, shouldUseNativeValidation) => {\n    const fields = {};\n    for (const name of fieldsNames) {\n        const field = get(_fields, name);\n        field && set(fields, name, field._f);\n    }\n    return {\n        criteriaMode,\n        names: [...fieldsNames],\n        fields,\n        shouldUseNativeValidation,\n    };\n};\n\nvar isRegex = (value) => value instanceof RegExp;\n\nvar getRuleValue = (rule) => isUndefined(rule)\n    ? rule\n    : isRegex(rule)\n        ? rule.source\n        : isObject(rule)\n            ? isRegex(rule.value)\n                ? rule.value.source\n                : rule.value\n            : rule;\n\nvar getValidationModes = (mode) => ({\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\n    isOnChange: mode === VALIDATION_MODE.onChange,\n    isOnAll: mode === VALIDATION_MODE.all,\n    isOnTouch: mode === VALIDATION_MODE.onTouched,\n});\n\nconst ASYNC_FUNCTION = 'AsyncFunction';\nvar hasPromiseValidation = (fieldReference) => !!fieldReference &&\n    !!fieldReference.validate &&\n    !!((isFunction(fieldReference.validate) &&\n        fieldReference.validate.constructor.name === ASYNC_FUNCTION) ||\n        (isObject(fieldReference.validate) &&\n            Object.values(fieldReference.validate).find((validateFunction) => validateFunction.constructor.name === ASYNC_FUNCTION)));\n\nvar hasValidation = (options) => options.mount &&\n    (options.required ||\n        options.min ||\n        options.max ||\n        options.maxLength ||\n        options.minLength ||\n        options.pattern ||\n        options.validate);\n\nvar isWatched = (name, _names, isBlurEvent) => !isBlurEvent &&\n    (_names.watchAll ||\n        _names.watch.has(name) ||\n        [..._names.watch].some((watchName) => name.startsWith(watchName) &&\n            /^\\.\\w+/.test(name.slice(watchName.length))));\n\nconst iterateFieldsByAction = (fields, action, fieldsNames, abortEarly) => {\n    for (const key of fieldsNames || Object.keys(fields)) {\n        const field = get(fields, key);\n        if (field) {\n            const { _f, ...currentField } = field;\n            if (_f) {\n                if (_f.refs && _f.refs[0] && action(_f.refs[0], key) && !abortEarly) {\n                    return true;\n                }\n                else if (_f.ref && action(_f.ref, _f.name) && !abortEarly) {\n                    return true;\n                }\n                else {\n                    if (iterateFieldsByAction(currentField, action)) {\n                        break;\n                    }\n                }\n            }\n            else if (isObject(currentField)) {\n                if (iterateFieldsByAction(currentField, action)) {\n                    break;\n                }\n            }\n        }\n    }\n    return;\n};\n\nfunction schemaErrorLookup(errors, _fields, name) {\n    const error = get(errors, name);\n    if (error || isKey(name)) {\n        return {\n            error,\n            name,\n        };\n    }\n    const names = name.split('.');\n    while (names.length) {\n        const fieldName = names.join('.');\n        const field = get(_fields, fieldName);\n        const foundError = get(errors, fieldName);\n        if (field && !Array.isArray(field) && name !== fieldName) {\n            return { name };\n        }\n        if (foundError && foundError.type) {\n            return {\n                name: fieldName,\n                error: foundError,\n            };\n        }\n        if (foundError && foundError.root && foundError.root.type) {\n            return {\n                name: `${fieldName}.root`,\n                error: foundError.root,\n            };\n        }\n        names.pop();\n    }\n    return {\n        name,\n    };\n}\n\nvar shouldRenderFormState = (formStateData, _proxyFormState, updateFormState, isRoot) => {\n    updateFormState(formStateData);\n    const { name, ...formState } = formStateData;\n    return (isEmptyObject(formState) ||\n        Object.keys(formState).length >= Object.keys(_proxyFormState).length ||\n        Object.keys(formState).find((key) => _proxyFormState[key] ===\n            (!isRoot || VALIDATION_MODE.all)));\n};\n\nvar shouldSubscribeByName = (name, signalName, exact) => !name ||\n    !signalName ||\n    name === signalName ||\n    convertToArrayPayload(name).some((currentName) => currentName &&\n        (exact\n            ? currentName === signalName\n            : currentName.startsWith(signalName) ||\n                signalName.startsWith(currentName)));\n\nvar skipValidation = (isBlurEvent, isTouched, isSubmitted, reValidateMode, mode) => {\n    if (mode.isOnAll) {\n        return false;\n    }\n    else if (!isSubmitted && mode.isOnTouch) {\n        return !(isTouched || isBlurEvent);\n    }\n    else if (isSubmitted ? reValidateMode.isOnBlur : mode.isOnBlur) {\n        return !isBlurEvent;\n    }\n    else if (isSubmitted ? reValidateMode.isOnChange : mode.isOnChange) {\n        return isBlurEvent;\n    }\n    return true;\n};\n\nvar unsetEmptyArray = (ref, name) => !compact(get(ref, name)).length && unset(ref, name);\n\nvar updateFieldArrayRootError = (errors, error, name) => {\n    const fieldArrayErrors = convertToArrayPayload(get(errors, name));\n    set(fieldArrayErrors, 'root', error[name]);\n    set(errors, name, fieldArrayErrors);\n    return errors;\n};\n\nvar isMessage = (value) => isString(value);\n\nfunction getValidateError(result, ref, type = 'validate') {\n    if (isMessage(result) ||\n        (Array.isArray(result) && result.every(isMessage)) ||\n        (isBoolean(result) && !result)) {\n        return {\n            type,\n            message: isMessage(result) ? result : '',\n            ref,\n        };\n    }\n}\n\nvar getValueAndMessage = (validationData) => isObject(validationData) && !isRegex(validationData)\n    ? validationData\n    : {\n        value: validationData,\n        message: '',\n    };\n\nvar validateField = async (field, disabledFieldNames, formValues, validateAllFieldCriteria, shouldUseNativeValidation, isFieldArray) => {\n    const { ref, refs, required, maxLength, minLength, min, max, pattern, validate, name, valueAsNumber, mount, } = field._f;\n    const inputValue = get(formValues, name);\n    if (!mount || disabledFieldNames.has(name)) {\n        return {};\n    }\n    const inputRef = refs ? refs[0] : ref;\n    const setCustomValidity = (message) => {\n        if (shouldUseNativeValidation && inputRef.reportValidity) {\n            inputRef.setCustomValidity(isBoolean(message) ? '' : message || '');\n            inputRef.reportValidity();\n        }\n    };\n    const error = {};\n    const isRadio = isRadioInput(ref);\n    const isCheckBox = isCheckBoxInput(ref);\n    const isRadioOrCheckbox = isRadio || isCheckBox;\n    const isEmpty = ((valueAsNumber || isFileInput(ref)) &&\n        isUndefined(ref.value) &&\n        isUndefined(inputValue)) ||\n        (isHTMLElement(ref) && ref.value === '') ||\n        inputValue === '' ||\n        (Array.isArray(inputValue) && !inputValue.length);\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\n        error[name] = {\n            type: exceedMax ? maxType : minType,\n            message,\n            ref,\n            ...appendErrorsCurry(exceedMax ? maxType : minType, message),\n        };\n    };\n    if (isFieldArray\n        ? !Array.isArray(inputValue) || !inputValue.length\n        : required &&\n            ((!isRadioOrCheckbox && (isEmpty || isNullOrUndefined(inputValue))) ||\n                (isBoolean(inputValue) && !inputValue) ||\n                (isCheckBox && !getCheckboxValue(refs).isValid) ||\n                (isRadio && !getRadioValue(refs).isValid))) {\n        const { value, message } = isMessage(required)\n            ? { value: !!required, message: required }\n            : getValueAndMessage(required);\n        if (value) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.required,\n                message,\n                ref: inputRef,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.required, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (!isEmpty && (!isNullOrUndefined(min) || !isNullOrUndefined(max))) {\n        let exceedMax;\n        let exceedMin;\n        const maxOutput = getValueAndMessage(max);\n        const minOutput = getValueAndMessage(min);\n        if (!isNullOrUndefined(inputValue) && !isNaN(inputValue)) {\n            const valueNumber = ref.valueAsNumber ||\n                (inputValue ? +inputValue : inputValue);\n            if (!isNullOrUndefined(maxOutput.value)) {\n                exceedMax = valueNumber > maxOutput.value;\n            }\n            if (!isNullOrUndefined(minOutput.value)) {\n                exceedMin = valueNumber < minOutput.value;\n            }\n        }\n        else {\n            const valueDate = ref.valueAsDate || new Date(inputValue);\n            const convertTimeToDate = (time) => new Date(new Date().toDateString() + ' ' + time);\n            const isTime = ref.type == 'time';\n            const isWeek = ref.type == 'week';\n            if (isString(maxOutput.value) && inputValue) {\n                exceedMax = isTime\n                    ? convertTimeToDate(inputValue) > convertTimeToDate(maxOutput.value)\n                    : isWeek\n                        ? inputValue > maxOutput.value\n                        : valueDate > new Date(maxOutput.value);\n            }\n            if (isString(minOutput.value) && inputValue) {\n                exceedMin = isTime\n                    ? convertTimeToDate(inputValue) < convertTimeToDate(minOutput.value)\n                    : isWeek\n                        ? inputValue < minOutput.value\n                        : valueDate < new Date(minOutput.value);\n            }\n        }\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(!!exceedMax, maxOutput.message, minOutput.message, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if ((maxLength || minLength) &&\n        !isEmpty &&\n        (isString(inputValue) || (isFieldArray && Array.isArray(inputValue)))) {\n        const maxLengthOutput = getValueAndMessage(maxLength);\n        const minLengthOutput = getValueAndMessage(minLength);\n        const exceedMax = !isNullOrUndefined(maxLengthOutput.value) &&\n            inputValue.length > +maxLengthOutput.value;\n        const exceedMin = !isNullOrUndefined(minLengthOutput.value) &&\n            inputValue.length < +minLengthOutput.value;\n        if (exceedMax || exceedMin) {\n            getMinMaxMessage(exceedMax, maxLengthOutput.message, minLengthOutput.message);\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(error[name].message);\n                return error;\n            }\n        }\n    }\n    if (pattern && !isEmpty && isString(inputValue)) {\n        const { value: patternValue, message } = getValueAndMessage(pattern);\n        if (isRegex(patternValue) && !inputValue.match(patternValue)) {\n            error[name] = {\n                type: INPUT_VALIDATION_RULES.pattern,\n                message,\n                ref,\n                ...appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, message),\n            };\n            if (!validateAllFieldCriteria) {\n                setCustomValidity(message);\n                return error;\n            }\n        }\n    }\n    if (validate) {\n        if (isFunction(validate)) {\n            const result = await validate(inputValue, formValues);\n            const validateError = getValidateError(result, inputRef);\n            if (validateError) {\n                error[name] = {\n                    ...validateError,\n                    ...appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message),\n                };\n                if (!validateAllFieldCriteria) {\n                    setCustomValidity(validateError.message);\n                    return error;\n                }\n            }\n        }\n        else if (isObject(validate)) {\n            let validationResult = {};\n            for (const key in validate) {\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\n                    break;\n                }\n                const validateError = getValidateError(await validate[key](inputValue, formValues), inputRef, key);\n                if (validateError) {\n                    validationResult = {\n                        ...validateError,\n                        ...appendErrorsCurry(key, validateError.message),\n                    };\n                    setCustomValidity(validateError.message);\n                    if (validateAllFieldCriteria) {\n                        error[name] = validationResult;\n                    }\n                }\n            }\n            if (!isEmptyObject(validationResult)) {\n                error[name] = {\n                    ref: inputRef,\n                    ...validationResult,\n                };\n                if (!validateAllFieldCriteria) {\n                    return error;\n                }\n            }\n        }\n    }\n    setCustomValidity(true);\n    return error;\n};\n\nconst defaultOptions = {\n    mode: VALIDATION_MODE.onSubmit,\n    reValidateMode: VALIDATION_MODE.onChange,\n    shouldFocusError: true,\n};\nfunction createFormControl(props = {}) {\n    let _options = {\n        ...defaultOptions,\n        ...props,\n    };\n    let _formState = {\n        submitCount: 0,\n        isDirty: false,\n        isReady: false,\n        isLoading: isFunction(_options.defaultValues),\n        isValidating: false,\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        touchedFields: {},\n        dirtyFields: {},\n        validatingFields: {},\n        errors: _options.errors || {},\n        disabled: _options.disabled || false,\n    };\n    let _fields = {};\n    let _defaultValues = isObject(_options.defaultValues) || isObject(_options.values)\n        ? cloneObject(_options.defaultValues || _options.values) || {}\n        : {};\n    let _formValues = _options.shouldUnregister\n        ? {}\n        : cloneObject(_defaultValues);\n    let _state = {\n        action: false,\n        mount: false,\n        watch: false,\n    };\n    let _names = {\n        mount: new Set(),\n        disabled: new Set(),\n        unMount: new Set(),\n        array: new Set(),\n        watch: new Set(),\n    };\n    let delayErrorCallback;\n    let timer = 0;\n    const _proxyFormState = {\n        isDirty: false,\n        dirtyFields: false,\n        validatingFields: false,\n        touchedFields: false,\n        isValidating: false,\n        isValid: false,\n        errors: false,\n    };\n    let _proxySubscribeFormState = {\n        ..._proxyFormState,\n    };\n    const _subjects = {\n        array: createSubject(),\n        state: createSubject(),\n    };\n    const shouldDisplayAllAssociatedErrors = _options.criteriaMode === VALIDATION_MODE.all;\n    const debounce = (callback) => (wait) => {\n        clearTimeout(timer);\n        timer = setTimeout(callback, wait);\n    };\n    const _setValid = async (shouldUpdateValid) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValid ||\n                _proxySubscribeFormState.isValid ||\n                shouldUpdateValid)) {\n            const isValid = _options.resolver\n                ? isEmptyObject((await _runSchema()).errors)\n                : await executeBuiltInValidation(_fields, true);\n            if (isValid !== _formState.isValid) {\n                _subjects.state.next({\n                    isValid,\n                });\n            }\n        }\n    };\n    const _updateIsValidating = (names, isValidating) => {\n        if (!_options.disabled &&\n            (_proxyFormState.isValidating ||\n                _proxyFormState.validatingFields ||\n                _proxySubscribeFormState.isValidating ||\n                _proxySubscribeFormState.validatingFields)) {\n            (names || Array.from(_names.mount)).forEach((name) => {\n                if (name) {\n                    isValidating\n                        ? set(_formState.validatingFields, name, isValidating)\n                        : unset(_formState.validatingFields, name);\n                }\n            });\n            _subjects.state.next({\n                validatingFields: _formState.validatingFields,\n                isValidating: !isEmptyObject(_formState.validatingFields),\n            });\n        }\n    };\n    const _setFieldArray = (name, values = [], method, args, shouldSetValues = true, shouldUpdateFieldsAndState = true) => {\n        if (args && method && !_options.disabled) {\n            _state.action = true;\n            if (shouldUpdateFieldsAndState && Array.isArray(get(_fields, name))) {\n                const fieldValues = method(get(_fields, name), args.argA, args.argB);\n                shouldSetValues && set(_fields, name, fieldValues);\n            }\n            if (shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.errors, name))) {\n                const errors = method(get(_formState.errors, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.errors, name, errors);\n                unsetEmptyArray(_formState.errors, name);\n            }\n            if ((_proxyFormState.touchedFields ||\n                _proxySubscribeFormState.touchedFields) &&\n                shouldUpdateFieldsAndState &&\n                Array.isArray(get(_formState.touchedFields, name))) {\n                const touchedFields = method(get(_formState.touchedFields, name), args.argA, args.argB);\n                shouldSetValues && set(_formState.touchedFields, name, touchedFields);\n            }\n            if (_proxyFormState.dirtyFields || _proxySubscribeFormState.dirtyFields) {\n                _formState.dirtyFields = getDirtyFields(_defaultValues, _formValues);\n            }\n            _subjects.state.next({\n                name,\n                isDirty: _getDirty(name, values),\n                dirtyFields: _formState.dirtyFields,\n                errors: _formState.errors,\n                isValid: _formState.isValid,\n            });\n        }\n        else {\n            set(_formValues, name, values);\n        }\n    };\n    const updateErrors = (name, error) => {\n        set(_formState.errors, name, error);\n        _subjects.state.next({\n            errors: _formState.errors,\n        });\n    };\n    const _setErrors = (errors) => {\n        _formState.errors = errors;\n        _subjects.state.next({\n            errors: _formState.errors,\n            isValid: false,\n        });\n    };\n    const updateValidAndValue = (name, shouldSkipSetValueAs, value, ref) => {\n        const field = get(_fields, name);\n        if (field) {\n            const defaultValue = get(_formValues, name, isUndefined(value) ? get(_defaultValues, name) : value);\n            isUndefined(defaultValue) ||\n                (ref && ref.defaultChecked) ||\n                shouldSkipSetValueAs\n                ? set(_formValues, name, shouldSkipSetValueAs ? defaultValue : getFieldValue(field._f))\n                : setFieldValue(name, defaultValue);\n            _state.mount && _setValid();\n        }\n    };\n    const updateTouchAndDirty = (name, fieldValue, isBlurEvent, shouldDirty, shouldRender) => {\n        let shouldUpdateField = false;\n        let isPreviousDirty = false;\n        const output = {\n            name,\n        };\n        if (!_options.disabled) {\n            if (!isBlurEvent || shouldDirty) {\n                if (_proxyFormState.isDirty || _proxySubscribeFormState.isDirty) {\n                    isPreviousDirty = _formState.isDirty;\n                    _formState.isDirty = output.isDirty = _getDirty();\n                    shouldUpdateField = isPreviousDirty !== output.isDirty;\n                }\n                const isCurrentFieldPristine = deepEqual(get(_defaultValues, name), fieldValue);\n                isPreviousDirty = !!get(_formState.dirtyFields, name);\n                isCurrentFieldPristine\n                    ? unset(_formState.dirtyFields, name)\n                    : set(_formState.dirtyFields, name, true);\n                output.dirtyFields = _formState.dirtyFields;\n                shouldUpdateField =\n                    shouldUpdateField ||\n                        ((_proxyFormState.dirtyFields ||\n                            _proxySubscribeFormState.dirtyFields) &&\n                            isPreviousDirty !== !isCurrentFieldPristine);\n            }\n            if (isBlurEvent) {\n                const isPreviousFieldTouched = get(_formState.touchedFields, name);\n                if (!isPreviousFieldTouched) {\n                    set(_formState.touchedFields, name, isBlurEvent);\n                    output.touchedFields = _formState.touchedFields;\n                    shouldUpdateField =\n                        shouldUpdateField ||\n                            ((_proxyFormState.touchedFields ||\n                                _proxySubscribeFormState.touchedFields) &&\n                                isPreviousFieldTouched !== isBlurEvent);\n                }\n            }\n            shouldUpdateField && shouldRender && _subjects.state.next(output);\n        }\n        return shouldUpdateField ? output : {};\n    };\n    const shouldRenderByError = (name, isValid, error, fieldState) => {\n        const previousFieldError = get(_formState.errors, name);\n        const shouldUpdateValid = (_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n            isBoolean(isValid) &&\n            _formState.isValid !== isValid;\n        if (_options.delayError && error) {\n            delayErrorCallback = debounce(() => updateErrors(name, error));\n            delayErrorCallback(_options.delayError);\n        }\n        else {\n            clearTimeout(timer);\n            delayErrorCallback = null;\n            error\n                ? set(_formState.errors, name, error)\n                : unset(_formState.errors, name);\n        }\n        if ((error ? !deepEqual(previousFieldError, error) : previousFieldError) ||\n            !isEmptyObject(fieldState) ||\n            shouldUpdateValid) {\n            const updatedFormState = {\n                ...fieldState,\n                ...(shouldUpdateValid && isBoolean(isValid) ? { isValid } : {}),\n                errors: _formState.errors,\n                name,\n            };\n            _formState = {\n                ..._formState,\n                ...updatedFormState,\n            };\n            _subjects.state.next(updatedFormState);\n        }\n    };\n    const _runSchema = async (name) => {\n        _updateIsValidating(name, true);\n        const result = await _options.resolver(_formValues, _options.context, getResolverOptions(name || _names.mount, _fields, _options.criteriaMode, _options.shouldUseNativeValidation));\n        _updateIsValidating(name);\n        return result;\n    };\n    const executeSchemaAndUpdateState = async (names) => {\n        const { errors } = await _runSchema(names);\n        if (names) {\n            for (const name of names) {\n                const error = get(errors, name);\n                error\n                    ? set(_formState.errors, name, error)\n                    : unset(_formState.errors, name);\n            }\n        }\n        else {\n            _formState.errors = errors;\n        }\n        return errors;\n    };\n    const executeBuiltInValidation = async (fields, shouldOnlyCheckValid, context = {\n        valid: true,\n    }) => {\n        for (const name in fields) {\n            const field = fields[name];\n            if (field) {\n                const { _f, ...fieldValue } = field;\n                if (_f) {\n                    const isFieldArrayRoot = _names.array.has(_f.name);\n                    const isPromiseFunction = field._f && hasPromiseValidation(field._f);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name], true);\n                    }\n                    const fieldError = await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation && !shouldOnlyCheckValid, isFieldArrayRoot);\n                    if (isPromiseFunction && _proxyFormState.validatingFields) {\n                        _updateIsValidating([name]);\n                    }\n                    if (fieldError[_f.name]) {\n                        context.valid = false;\n                        if (shouldOnlyCheckValid) {\n                            break;\n                        }\n                    }\n                    !shouldOnlyCheckValid &&\n                        (get(fieldError, _f.name)\n                            ? isFieldArrayRoot\n                                ? updateFieldArrayRootError(_formState.errors, fieldError, _f.name)\n                                : set(_formState.errors, _f.name, fieldError[_f.name])\n                            : unset(_formState.errors, _f.name));\n                }\n                !isEmptyObject(fieldValue) &&\n                    (await executeBuiltInValidation(fieldValue, shouldOnlyCheckValid, context));\n            }\n        }\n        return context.valid;\n    };\n    const _removeUnmounted = () => {\n        for (const name of _names.unMount) {\n            const field = get(_fields, name);\n            field &&\n                (field._f.refs\n                    ? field._f.refs.every((ref) => !live(ref))\n                    : !live(field._f.ref)) &&\n                unregister(name);\n        }\n        _names.unMount = new Set();\n    };\n    const _getDirty = (name, data) => !_options.disabled &&\n        (name && data && set(_formValues, name, data),\n            !deepEqual(getValues(), _defaultValues));\n    const _getWatch = (names, defaultValue, isGlobal) => generateWatchOutput(names, _names, {\n        ...(_state.mount\n            ? _formValues\n            : isUndefined(defaultValue)\n                ? _defaultValues\n                : isString(names)\n                    ? { [names]: defaultValue }\n                    : defaultValue),\n    }, isGlobal, defaultValue);\n    const _getFieldArray = (name) => compact(get(_state.mount ? _formValues : _defaultValues, name, _options.shouldUnregister ? get(_defaultValues, name, []) : []));\n    const setFieldValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        let fieldValue = value;\n        if (field) {\n            const fieldReference = field._f;\n            if (fieldReference) {\n                !fieldReference.disabled &&\n                    set(_formValues, name, getFieldValueAs(value, fieldReference));\n                fieldValue =\n                    isHTMLElement(fieldReference.ref) && isNullOrUndefined(value)\n                        ? ''\n                        : value;\n                if (isMultipleSelect(fieldReference.ref)) {\n                    [...fieldReference.ref.options].forEach((optionRef) => (optionRef.selected = fieldValue.includes(optionRef.value)));\n                }\n                else if (fieldReference.refs) {\n                    if (isCheckBoxInput(fieldReference.ref)) {\n                        fieldReference.refs.forEach((checkboxRef) => {\n                            if (!checkboxRef.defaultChecked || !checkboxRef.disabled) {\n                                if (Array.isArray(fieldValue)) {\n                                    checkboxRef.checked = !!fieldValue.find((data) => data === checkboxRef.value);\n                                }\n                                else {\n                                    checkboxRef.checked =\n                                        fieldValue === checkboxRef.value || !!fieldValue;\n                                }\n                            }\n                        });\n                    }\n                    else {\n                        fieldReference.refs.forEach((radioRef) => (radioRef.checked = radioRef.value === fieldValue));\n                    }\n                }\n                else if (isFileInput(fieldReference.ref)) {\n                    fieldReference.ref.value = '';\n                }\n                else {\n                    fieldReference.ref.value = fieldValue;\n                    if (!fieldReference.ref.type) {\n                        _subjects.state.next({\n                            name,\n                            values: cloneObject(_formValues),\n                        });\n                    }\n                }\n            }\n        }\n        (options.shouldDirty || options.shouldTouch) &&\n            updateTouchAndDirty(name, fieldValue, options.shouldTouch, options.shouldDirty, true);\n        options.shouldValidate && trigger(name);\n    };\n    const setValues = (name, value, options) => {\n        for (const fieldKey in value) {\n            if (!value.hasOwnProperty(fieldKey)) {\n                return;\n            }\n            const fieldValue = value[fieldKey];\n            const fieldName = name + '.' + fieldKey;\n            const field = get(_fields, fieldName);\n            (_names.array.has(name) ||\n                isObject(fieldValue) ||\n                (field && !field._f)) &&\n                !isDateObject(fieldValue)\n                ? setValues(fieldName, fieldValue, options)\n                : setFieldValue(fieldName, fieldValue, options);\n        }\n    };\n    const setValue = (name, value, options = {}) => {\n        const field = get(_fields, name);\n        const isFieldArray = _names.array.has(name);\n        const cloneValue = cloneObject(value);\n        set(_formValues, name, cloneValue);\n        if (isFieldArray) {\n            _subjects.array.next({\n                name,\n                values: cloneObject(_formValues),\n            });\n            if ((_proxyFormState.isDirty ||\n                _proxyFormState.dirtyFields ||\n                _proxySubscribeFormState.isDirty ||\n                _proxySubscribeFormState.dirtyFields) &&\n                options.shouldDirty) {\n                _subjects.state.next({\n                    name,\n                    dirtyFields: getDirtyFields(_defaultValues, _formValues),\n                    isDirty: _getDirty(name, cloneValue),\n                });\n            }\n        }\n        else {\n            field && !field._f && !isNullOrUndefined(cloneValue)\n                ? setValues(name, cloneValue, options)\n                : setFieldValue(name, cloneValue, options);\n        }\n        isWatched(name, _names) && _subjects.state.next({ ..._formState, name });\n        _subjects.state.next({\n            name: _state.mount ? name : undefined,\n            values: cloneObject(_formValues),\n        });\n    };\n    const onChange = async (event) => {\n        _state.mount = true;\n        const target = event.target;\n        let name = target.name;\n        let isFieldValueUpdated = true;\n        const field = get(_fields, name);\n        const _updateIsFieldValueUpdated = (fieldValue) => {\n            isFieldValueUpdated =\n                Number.isNaN(fieldValue) ||\n                    (isDateObject(fieldValue) && isNaN(fieldValue.getTime())) ||\n                    deepEqual(fieldValue, get(_formValues, name, fieldValue));\n        };\n        const validationModeBeforeSubmit = getValidationModes(_options.mode);\n        const validationModeAfterSubmit = getValidationModes(_options.reValidateMode);\n        if (field) {\n            let error;\n            let isValid;\n            const fieldValue = target.type\n                ? getFieldValue(field._f)\n                : getEventValue(event);\n            const isBlurEvent = event.type === EVENTS.BLUR || event.type === EVENTS.FOCUS_OUT;\n            const shouldSkipValidation = (!hasValidation(field._f) &&\n                !_options.resolver &&\n                !get(_formState.errors, name) &&\n                !field._f.deps) ||\n                skipValidation(isBlurEvent, get(_formState.touchedFields, name), _formState.isSubmitted, validationModeAfterSubmit, validationModeBeforeSubmit);\n            const watched = isWatched(name, _names, isBlurEvent);\n            set(_formValues, name, fieldValue);\n            if (isBlurEvent) {\n                if (!target || !target.readOnly) {\n                    field._f.onBlur && field._f.onBlur(event);\n                    delayErrorCallback && delayErrorCallback(0);\n                }\n            }\n            else if (field._f.onChange) {\n                field._f.onChange(event);\n            }\n            const fieldState = updateTouchAndDirty(name, fieldValue, isBlurEvent);\n            const shouldRender = !isEmptyObject(fieldState) || watched;\n            !isBlurEvent &&\n                _subjects.state.next({\n                    name,\n                    type: event.type,\n                    values: cloneObject(_formValues),\n                });\n            if (shouldSkipValidation) {\n                if (_proxyFormState.isValid || _proxySubscribeFormState.isValid) {\n                    if (_options.mode === 'onBlur') {\n                        if (isBlurEvent) {\n                            _setValid();\n                        }\n                    }\n                    else if (!isBlurEvent) {\n                        _setValid();\n                    }\n                }\n                return (shouldRender &&\n                    _subjects.state.next({ name, ...(watched ? {} : fieldState) }));\n            }\n            !isBlurEvent && watched && _subjects.state.next({ ..._formState });\n            if (_options.resolver) {\n                const { errors } = await _runSchema([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    const previousErrorLookupResult = schemaErrorLookup(_formState.errors, _fields, name);\n                    const errorLookupResult = schemaErrorLookup(errors, _fields, previousErrorLookupResult.name || name);\n                    error = errorLookupResult.error;\n                    name = errorLookupResult.name;\n                    isValid = isEmptyObject(errors);\n                }\n            }\n            else {\n                _updateIsValidating([name], true);\n                error = (await validateField(field, _names.disabled, _formValues, shouldDisplayAllAssociatedErrors, _options.shouldUseNativeValidation))[name];\n                _updateIsValidating([name]);\n                _updateIsFieldValueUpdated(fieldValue);\n                if (isFieldValueUpdated) {\n                    if (error) {\n                        isValid = false;\n                    }\n                    else if (_proxyFormState.isValid ||\n                        _proxySubscribeFormState.isValid) {\n                        isValid = await executeBuiltInValidation(_fields, true);\n                    }\n                }\n            }\n            if (isFieldValueUpdated) {\n                field._f.deps &&\n                    trigger(field._f.deps);\n                shouldRenderByError(name, isValid, error, fieldState);\n            }\n        }\n    };\n    const _focusInput = (ref, key) => {\n        if (get(_formState.errors, key) && ref.focus) {\n            ref.focus();\n            return 1;\n        }\n        return;\n    };\n    const trigger = async (name, options = {}) => {\n        let isValid;\n        let validationResult;\n        const fieldNames = convertToArrayPayload(name);\n        if (_options.resolver) {\n            const errors = await executeSchemaAndUpdateState(isUndefined(name) ? name : fieldNames);\n            isValid = isEmptyObject(errors);\n            validationResult = name\n                ? !fieldNames.some((name) => get(errors, name))\n                : isValid;\n        }\n        else if (name) {\n            validationResult = (await Promise.all(fieldNames.map(async (fieldName) => {\n                const field = get(_fields, fieldName);\n                return await executeBuiltInValidation(field && field._f ? { [fieldName]: field } : field);\n            }))).every(Boolean);\n            !(!validationResult && !_formState.isValid) && _setValid();\n        }\n        else {\n            validationResult = isValid = await executeBuiltInValidation(_fields);\n        }\n        _subjects.state.next({\n            ...(!isString(name) ||\n                ((_proxyFormState.isValid || _proxySubscribeFormState.isValid) &&\n                    isValid !== _formState.isValid)\n                ? {}\n                : { name }),\n            ...(_options.resolver || !name ? { isValid } : {}),\n            errors: _formState.errors,\n        });\n        options.shouldFocus &&\n            !validationResult &&\n            iterateFieldsByAction(_fields, _focusInput, name ? fieldNames : _names.mount);\n        return validationResult;\n    };\n    const getValues = (fieldNames) => {\n        const values = {\n            ...(_state.mount ? _formValues : _defaultValues),\n        };\n        return isUndefined(fieldNames)\n            ? values\n            : isString(fieldNames)\n                ? get(values, fieldNames)\n                : fieldNames.map((name) => get(values, name));\n    };\n    const getFieldState = (name, formState) => ({\n        invalid: !!get((formState || _formState).errors, name),\n        isDirty: !!get((formState || _formState).dirtyFields, name),\n        error: get((formState || _formState).errors, name),\n        isValidating: !!get(_formState.validatingFields, name),\n        isTouched: !!get((formState || _formState).touchedFields, name),\n    });\n    const clearErrors = (name) => {\n        name &&\n            convertToArrayPayload(name).forEach((inputName) => unset(_formState.errors, inputName));\n        _subjects.state.next({\n            errors: name ? _formState.errors : {},\n        });\n    };\n    const setError = (name, error, options) => {\n        const ref = (get(_fields, name, { _f: {} })._f || {}).ref;\n        const currentError = get(_formState.errors, name) || {};\n        // Don't override existing error messages elsewhere in the object tree.\n        const { ref: currentRef, message, type, ...restOfErrorTree } = currentError;\n        set(_formState.errors, name, {\n            ...restOfErrorTree,\n            ...error,\n            ref,\n        });\n        _subjects.state.next({\n            name,\n            errors: _formState.errors,\n            isValid: false,\n        });\n        options && options.shouldFocus && ref && ref.focus && ref.focus();\n    };\n    const watch = (name, defaultValue) => isFunction(name)\n        ? _subjects.state.subscribe({\n            next: (payload) => 'values' in payload &&\n                name(_getWatch(undefined, defaultValue), payload),\n        })\n        : _getWatch(name, defaultValue, true);\n    const _subscribe = (props) => _subjects.state.subscribe({\n        next: (formState) => {\n            if (shouldSubscribeByName(props.name, formState.name, props.exact) &&\n                shouldRenderFormState(formState, props.formState || _proxyFormState, _setFormState, props.reRenderRoot)) {\n                props.callback({\n                    values: { ..._formValues },\n                    ..._formState,\n                    ...formState,\n                    defaultValues: _defaultValues,\n                });\n            }\n        },\n    }).unsubscribe;\n    const subscribe = (props) => {\n        _state.mount = true;\n        _proxySubscribeFormState = {\n            ..._proxySubscribeFormState,\n            ...props.formState,\n        };\n        return _subscribe({\n            ...props,\n            formState: _proxySubscribeFormState,\n        });\n    };\n    const unregister = (name, options = {}) => {\n        for (const fieldName of name ? convertToArrayPayload(name) : _names.mount) {\n            _names.mount.delete(fieldName);\n            _names.array.delete(fieldName);\n            if (!options.keepValue) {\n                unset(_fields, fieldName);\n                unset(_formValues, fieldName);\n            }\n            !options.keepError && unset(_formState.errors, fieldName);\n            !options.keepDirty && unset(_formState.dirtyFields, fieldName);\n            !options.keepTouched && unset(_formState.touchedFields, fieldName);\n            !options.keepIsValidating &&\n                unset(_formState.validatingFields, fieldName);\n            !_options.shouldUnregister &&\n                !options.keepDefaultValue &&\n                unset(_defaultValues, fieldName);\n        }\n        _subjects.state.next({\n            values: cloneObject(_formValues),\n        });\n        _subjects.state.next({\n            ..._formState,\n            ...(!options.keepDirty ? {} : { isDirty: _getDirty() }),\n        });\n        !options.keepIsValid && _setValid();\n    };\n    const _setDisabledField = ({ disabled, name, }) => {\n        if ((isBoolean(disabled) && _state.mount) ||\n            !!disabled ||\n            _names.disabled.has(name)) {\n            disabled ? _names.disabled.add(name) : _names.disabled.delete(name);\n        }\n    };\n    const register = (name, options = {}) => {\n        let field = get(_fields, name);\n        const disabledIsDefined = isBoolean(options.disabled) || isBoolean(_options.disabled);\n        set(_fields, name, {\n            ...(field || {}),\n            _f: {\n                ...(field && field._f ? field._f : { ref: { name } }),\n                name,\n                mount: true,\n                ...options,\n            },\n        });\n        _names.mount.add(name);\n        if (field) {\n            _setDisabledField({\n                disabled: isBoolean(options.disabled)\n                    ? options.disabled\n                    : _options.disabled,\n                name,\n            });\n        }\n        else {\n            updateValidAndValue(name, true, options.value);\n        }\n        return {\n            ...(disabledIsDefined\n                ? { disabled: options.disabled || _options.disabled }\n                : {}),\n            ...(_options.progressive\n                ? {\n                    required: !!options.required,\n                    min: getRuleValue(options.min),\n                    max: getRuleValue(options.max),\n                    minLength: getRuleValue(options.minLength),\n                    maxLength: getRuleValue(options.maxLength),\n                    pattern: getRuleValue(options.pattern),\n                }\n                : {}),\n            name,\n            onChange,\n            onBlur: onChange,\n            ref: (ref) => {\n                if (ref) {\n                    register(name, options);\n                    field = get(_fields, name);\n                    const fieldRef = isUndefined(ref.value)\n                        ? ref.querySelectorAll\n                            ? ref.querySelectorAll('input,select,textarea')[0] || ref\n                            : ref\n                        : ref;\n                    const radioOrCheckbox = isRadioOrCheckbox(fieldRef);\n                    const refs = field._f.refs || [];\n                    if (radioOrCheckbox\n                        ? refs.find((option) => option === fieldRef)\n                        : fieldRef === field._f.ref) {\n                        return;\n                    }\n                    set(_fields, name, {\n                        _f: {\n                            ...field._f,\n                            ...(radioOrCheckbox\n                                ? {\n                                    refs: [\n                                        ...refs.filter(live),\n                                        fieldRef,\n                                        ...(Array.isArray(get(_defaultValues, name)) ? [{}] : []),\n                                    ],\n                                    ref: { type: fieldRef.type, name },\n                                }\n                                : { ref: fieldRef }),\n                        },\n                    });\n                    updateValidAndValue(name, false, undefined, fieldRef);\n                }\n                else {\n                    field = get(_fields, name, {});\n                    if (field._f) {\n                        field._f.mount = false;\n                    }\n                    (_options.shouldUnregister || options.shouldUnregister) &&\n                        !(isNameInFieldArray(_names.array, name) && _state.action) &&\n                        _names.unMount.add(name);\n                }\n            },\n        };\n    };\n    const _focusError = () => _options.shouldFocusError &&\n        iterateFieldsByAction(_fields, _focusInput, _names.mount);\n    const _disableForm = (disabled) => {\n        if (isBoolean(disabled)) {\n            _subjects.state.next({ disabled });\n            iterateFieldsByAction(_fields, (ref, name) => {\n                const currentField = get(_fields, name);\n                if (currentField) {\n                    ref.disabled = currentField._f.disabled || disabled;\n                    if (Array.isArray(currentField._f.refs)) {\n                        currentField._f.refs.forEach((inputRef) => {\n                            inputRef.disabled = currentField._f.disabled || disabled;\n                        });\n                    }\n                }\n            }, 0, false);\n        }\n    };\n    const handleSubmit = (onValid, onInvalid) => async (e) => {\n        let onValidError = undefined;\n        if (e) {\n            e.preventDefault && e.preventDefault();\n            e.persist &&\n                e.persist();\n        }\n        let fieldValues = cloneObject(_formValues);\n        _subjects.state.next({\n            isSubmitting: true,\n        });\n        if (_options.resolver) {\n            const { errors, values } = await _runSchema();\n            _formState.errors = errors;\n            fieldValues = cloneObject(values);\n        }\n        else {\n            await executeBuiltInValidation(_fields);\n        }\n        if (_names.disabled.size) {\n            for (const name of _names.disabled) {\n                unset(fieldValues, name);\n            }\n        }\n        unset(_formState.errors, 'root');\n        if (isEmptyObject(_formState.errors)) {\n            _subjects.state.next({\n                errors: {},\n            });\n            try {\n                await onValid(fieldValues, e);\n            }\n            catch (error) {\n                onValidError = error;\n            }\n        }\n        else {\n            if (onInvalid) {\n                await onInvalid({ ..._formState.errors }, e);\n            }\n            _focusError();\n            setTimeout(_focusError);\n        }\n        _subjects.state.next({\n            isSubmitted: true,\n            isSubmitting: false,\n            isSubmitSuccessful: isEmptyObject(_formState.errors) && !onValidError,\n            submitCount: _formState.submitCount + 1,\n            errors: _formState.errors,\n        });\n        if (onValidError) {\n            throw onValidError;\n        }\n    };\n    const resetField = (name, options = {}) => {\n        if (get(_fields, name)) {\n            if (isUndefined(options.defaultValue)) {\n                setValue(name, cloneObject(get(_defaultValues, name)));\n            }\n            else {\n                setValue(name, options.defaultValue);\n                set(_defaultValues, name, cloneObject(options.defaultValue));\n            }\n            if (!options.keepTouched) {\n                unset(_formState.touchedFields, name);\n            }\n            if (!options.keepDirty) {\n                unset(_formState.dirtyFields, name);\n                _formState.isDirty = options.defaultValue\n                    ? _getDirty(name, cloneObject(get(_defaultValues, name)))\n                    : _getDirty();\n            }\n            if (!options.keepError) {\n                unset(_formState.errors, name);\n                _proxyFormState.isValid && _setValid();\n            }\n            _subjects.state.next({ ..._formState });\n        }\n    };\n    const _reset = (formValues, keepStateOptions = {}) => {\n        const updatedValues = formValues ? cloneObject(formValues) : _defaultValues;\n        const cloneUpdatedValues = cloneObject(updatedValues);\n        const isEmptyResetValues = isEmptyObject(formValues);\n        const values = isEmptyResetValues ? _defaultValues : cloneUpdatedValues;\n        if (!keepStateOptions.keepDefaultValues) {\n            _defaultValues = updatedValues;\n        }\n        if (!keepStateOptions.keepValues) {\n            if (keepStateOptions.keepDirtyValues) {\n                const fieldsToCheck = new Set([\n                    ..._names.mount,\n                    ...Object.keys(getDirtyFields(_defaultValues, _formValues)),\n                ]);\n                for (const fieldName of Array.from(fieldsToCheck)) {\n                    get(_formState.dirtyFields, fieldName)\n                        ? set(values, fieldName, get(_formValues, fieldName))\n                        : setValue(fieldName, get(values, fieldName));\n                }\n            }\n            else {\n                if (isWeb && isUndefined(formValues)) {\n                    for (const name of _names.mount) {\n                        const field = get(_fields, name);\n                        if (field && field._f) {\n                            const fieldReference = Array.isArray(field._f.refs)\n                                ? field._f.refs[0]\n                                : field._f.ref;\n                            if (isHTMLElement(fieldReference)) {\n                                const form = fieldReference.closest('form');\n                                if (form) {\n                                    form.reset();\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n                if (keepStateOptions.keepFieldsRef) {\n                    for (const fieldName of _names.mount) {\n                        setValue(fieldName, get(values, fieldName));\n                    }\n                }\n                else {\n                    _fields = {};\n                }\n            }\n            _formValues = _options.shouldUnregister\n                ? keepStateOptions.keepDefaultValues\n                    ? cloneObject(_defaultValues)\n                    : {}\n                : cloneObject(values);\n            _subjects.array.next({\n                values: { ...values },\n            });\n            _subjects.state.next({\n                values: { ...values },\n            });\n        }\n        _names = {\n            mount: keepStateOptions.keepDirtyValues ? _names.mount : new Set(),\n            unMount: new Set(),\n            array: new Set(),\n            disabled: new Set(),\n            watch: new Set(),\n            watchAll: false,\n            focus: '',\n        };\n        _state.mount =\n            !_proxyFormState.isValid ||\n                !!keepStateOptions.keepIsValid ||\n                !!keepStateOptions.keepDirtyValues;\n        _state.watch = !!_options.shouldUnregister;\n        _subjects.state.next({\n            submitCount: keepStateOptions.keepSubmitCount\n                ? _formState.submitCount\n                : 0,\n            isDirty: isEmptyResetValues\n                ? false\n                : keepStateOptions.keepDirty\n                    ? _formState.isDirty\n                    : !!(keepStateOptions.keepDefaultValues &&\n                        !deepEqual(formValues, _defaultValues)),\n            isSubmitted: keepStateOptions.keepIsSubmitted\n                ? _formState.isSubmitted\n                : false,\n            dirtyFields: isEmptyResetValues\n                ? {}\n                : keepStateOptions.keepDirtyValues\n                    ? keepStateOptions.keepDefaultValues && _formValues\n                        ? getDirtyFields(_defaultValues, _formValues)\n                        : _formState.dirtyFields\n                    : keepStateOptions.keepDefaultValues && formValues\n                        ? getDirtyFields(_defaultValues, formValues)\n                        : keepStateOptions.keepDirty\n                            ? _formState.dirtyFields\n                            : {},\n            touchedFields: keepStateOptions.keepTouched\n                ? _formState.touchedFields\n                : {},\n            errors: keepStateOptions.keepErrors ? _formState.errors : {},\n            isSubmitSuccessful: keepStateOptions.keepIsSubmitSuccessful\n                ? _formState.isSubmitSuccessful\n                : false,\n            isSubmitting: false,\n            defaultValues: _defaultValues,\n        });\n    };\n    const reset = (formValues, keepStateOptions) => _reset(isFunction(formValues)\n        ? formValues(_formValues)\n        : formValues, keepStateOptions);\n    const setFocus = (name, options = {}) => {\n        const field = get(_fields, name);\n        const fieldReference = field && field._f;\n        if (fieldReference) {\n            const fieldRef = fieldReference.refs\n                ? fieldReference.refs[0]\n                : fieldReference.ref;\n            if (fieldRef.focus) {\n                fieldRef.focus();\n                options.shouldSelect &&\n                    isFunction(fieldRef.select) &&\n                    fieldRef.select();\n            }\n        }\n    };\n    const _setFormState = (updatedFormState) => {\n        _formState = {\n            ..._formState,\n            ...updatedFormState,\n        };\n    };\n    const _resetDefaultValues = () => isFunction(_options.defaultValues) &&\n        _options.defaultValues().then((values) => {\n            reset(values, _options.resetOptions);\n            _subjects.state.next({\n                isLoading: false,\n            });\n        });\n    const methods = {\n        control: {\n            register,\n            unregister,\n            getFieldState,\n            handleSubmit,\n            setError,\n            _subscribe,\n            _runSchema,\n            _focusError,\n            _getWatch,\n            _getDirty,\n            _setValid,\n            _setFieldArray,\n            _setDisabledField,\n            _setErrors,\n            _getFieldArray,\n            _reset,\n            _resetDefaultValues,\n            _removeUnmounted,\n            _disableForm,\n            _subjects,\n            _proxyFormState,\n            get _fields() {\n                return _fields;\n            },\n            get _formValues() {\n                return _formValues;\n            },\n            get _state() {\n                return _state;\n            },\n            set _state(value) {\n                _state = value;\n            },\n            get _defaultValues() {\n                return _defaultValues;\n            },\n            get _names() {\n                return _names;\n            },\n            set _names(value) {\n                _names = value;\n            },\n            get _formState() {\n                return _formState;\n            },\n            get _options() {\n                return _options;\n            },\n            set _options(value) {\n                _options = {\n                    ..._options,\n                    ...value,\n                };\n            },\n        },\n        subscribe,\n        trigger,\n        register,\n        handleSubmit,\n        watch,\n        setValue,\n        getValues,\n        reset,\n        resetField,\n        clearErrors,\n        unregister,\n        setError,\n        setFocus,\n        getFieldState,\n    };\n    return {\n        ...methods,\n        formControl: methods,\n    };\n}\n\nvar generateId = () => {\n    if (typeof crypto !== 'undefined' && crypto.randomUUID) {\n        return crypto.randomUUID();\n    }\n    const d = typeof performance === 'undefined' ? Date.now() : performance.now() * 1000;\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16 + d) % 16 | 0;\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\n    });\n};\n\nvar getFocusFieldName = (name, index, options = {}) => options.shouldFocus || isUndefined(options.shouldFocus)\n    ? options.focusName ||\n        `${name}.${isUndefined(options.focusIndex) ? index : options.focusIndex}.`\n    : '';\n\nvar appendAt = (data, value) => [\n    ...data,\n    ...convertToArrayPayload(value),\n];\n\nvar fillEmptyArray = (value) => Array.isArray(value) ? value.map(() => undefined) : undefined;\n\nfunction insert(data, index, value) {\n    return [\n        ...data.slice(0, index),\n        ...convertToArrayPayload(value),\n        ...data.slice(index),\n    ];\n}\n\nvar moveArrayAt = (data, from, to) => {\n    if (!Array.isArray(data)) {\n        return [];\n    }\n    if (isUndefined(data[to])) {\n        data[to] = undefined;\n    }\n    data.splice(to, 0, data.splice(from, 1)[0]);\n    return data;\n};\n\nvar prependAt = (data, value) => [\n    ...convertToArrayPayload(value),\n    ...convertToArrayPayload(data),\n];\n\nfunction removeAtIndexes(data, indexes) {\n    let i = 0;\n    const temp = [...data];\n    for (const index of indexes) {\n        temp.splice(index - i, 1);\n        i++;\n    }\n    return compact(temp).length ? temp : [];\n}\nvar removeArrayAt = (data, index) => isUndefined(index)\n    ? []\n    : removeAtIndexes(data, convertToArrayPayload(index).sort((a, b) => a - b));\n\nvar swapArrayAt = (data, indexA, indexB) => {\n    [data[indexA], data[indexB]] = [data[indexB], data[indexA]];\n};\n\nvar updateAt = (fieldValues, index, value) => {\n    fieldValues[index] = value;\n    return fieldValues;\n};\n\n/**\n * A custom hook that exposes convenient methods to perform operations with a list of dynamic inputs that need to be appended, updated, removed etc. • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn) • [Video](https://youtu.be/4MrbfGSFY2A)\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/usefieldarray) • [Demo](https://codesandbox.io/s/react-hook-form-usefieldarray-ssugn)\n *\n * @param props - useFieldArray props\n *\n * @returns methods - functions to manipulate with the Field Arrays (dynamic inputs) {@link UseFieldArrayReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, control, handleSubmit, reset, trigger, setError } = useForm({\n *     defaultValues: {\n *       test: []\n *     }\n *   });\n *   const { fields, append } = useFieldArray({\n *     control,\n *     name: \"test\"\n *   });\n *\n *   return (\n *     <form onSubmit={handleSubmit(data => console.log(data))}>\n *       {fields.map((item, index) => (\n *          <input key={item.id} {...register(`test.${index}.firstName`)}  />\n *       ))}\n *       <button type=\"button\" onClick={() => append({ firstName: \"bill\" })}>\n *         append\n *       </button>\n *       <input type=\"submit\" />\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useFieldArray(props) {\n    const methods = useFormContext();\n    const { control = methods.control, name, keyName = 'id', shouldUnregister, rules, } = props;\n    const [fields, setFields] = React.useState(control._getFieldArray(name));\n    const ids = React.useRef(control._getFieldArray(name).map(generateId));\n    const _fieldIds = React.useRef(fields);\n    const _actioned = React.useRef(false);\n    _fieldIds.current = fields;\n    control._names.array.add(name);\n    React.useMemo(() => rules &&\n        control.register(name, rules), [control, rules, name]);\n    useIsomorphicLayoutEffect(() => control._subjects.array.subscribe({\n        next: ({ values, name: fieldArrayName, }) => {\n            if (fieldArrayName === name || !fieldArrayName) {\n                const fieldValues = get(values, name);\n                if (Array.isArray(fieldValues)) {\n                    setFields(fieldValues);\n                    ids.current = fieldValues.map(generateId);\n                }\n            }\n        },\n    }).unsubscribe, [control, name]);\n    const updateValues = React.useCallback((updatedFieldArrayValues) => {\n        _actioned.current = true;\n        control._setFieldArray(name, updatedFieldArrayValues);\n    }, [control, name]);\n    const append = (value, options) => {\n        const appendValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = appendAt(control._getFieldArray(name), appendValue);\n        control._names.focus = getFocusFieldName(name, updatedFieldArrayValues.length - 1, options);\n        ids.current = appendAt(ids.current, appendValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, appendAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const prepend = (value, options) => {\n        const prependValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = prependAt(control._getFieldArray(name), prependValue);\n        control._names.focus = getFocusFieldName(name, 0, options);\n        ids.current = prependAt(ids.current, prependValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, prependAt, {\n            argA: fillEmptyArray(value),\n        });\n    };\n    const remove = (index) => {\n        const updatedFieldArrayValues = removeArrayAt(control._getFieldArray(name), index);\n        ids.current = removeArrayAt(ids.current, index);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        !Array.isArray(get(control._fields, name)) &&\n            set(control._fields, name, undefined);\n        control._setFieldArray(name, updatedFieldArrayValues, removeArrayAt, {\n            argA: index,\n        });\n    };\n    const insert$1 = (index, value, options) => {\n        const insertValue = convertToArrayPayload(cloneObject(value));\n        const updatedFieldArrayValues = insert(control._getFieldArray(name), index, insertValue);\n        control._names.focus = getFocusFieldName(name, index, options);\n        ids.current = insert(ids.current, index, insertValue.map(generateId));\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, insert, {\n            argA: index,\n            argB: fillEmptyArray(value),\n        });\n    };\n    const swap = (indexA, indexB) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        swapArrayAt(updatedFieldArrayValues, indexA, indexB);\n        swapArrayAt(ids.current, indexA, indexB);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, swapArrayAt, {\n            argA: indexA,\n            argB: indexB,\n        }, false);\n    };\n    const move = (from, to) => {\n        const updatedFieldArrayValues = control._getFieldArray(name);\n        moveArrayAt(updatedFieldArrayValues, from, to);\n        moveArrayAt(ids.current, from, to);\n        updateValues(updatedFieldArrayValues);\n        setFields(updatedFieldArrayValues);\n        control._setFieldArray(name, updatedFieldArrayValues, moveArrayAt, {\n            argA: from,\n            argB: to,\n        }, false);\n    };\n    const update = (index, value) => {\n        const updateValue = cloneObject(value);\n        const updatedFieldArrayValues = updateAt(control._getFieldArray(name), index, updateValue);\n        ids.current = [...updatedFieldArrayValues].map((item, i) => !item || i === index ? generateId() : ids.current[i]);\n        updateValues(updatedFieldArrayValues);\n        setFields([...updatedFieldArrayValues]);\n        control._setFieldArray(name, updatedFieldArrayValues, updateAt, {\n            argA: index,\n            argB: updateValue,\n        }, true, false);\n    };\n    const replace = (value) => {\n        const updatedFieldArrayValues = convertToArrayPayload(cloneObject(value));\n        ids.current = updatedFieldArrayValues.map(generateId);\n        updateValues([...updatedFieldArrayValues]);\n        setFields([...updatedFieldArrayValues]);\n        control._setFieldArray(name, [...updatedFieldArrayValues], (data) => data, {}, true, false);\n    };\n    React.useEffect(() => {\n        control._state.action = false;\n        isWatched(name, control._names) &&\n            control._subjects.state.next({\n                ...control._formState,\n            });\n        if (_actioned.current &&\n            (!getValidationModes(control._options.mode).isOnSubmit ||\n                control._formState.isSubmitted) &&\n            !getValidationModes(control._options.reValidateMode).isOnSubmit) {\n            if (control._options.resolver) {\n                control._runSchema([name]).then((result) => {\n                    const error = get(result.errors, name);\n                    const existingError = get(control._formState.errors, name);\n                    if (existingError\n                        ? (!error && existingError.type) ||\n                            (error &&\n                                (existingError.type !== error.type ||\n                                    existingError.message !== error.message))\n                        : error && error.type) {\n                        error\n                            ? set(control._formState.errors, name, error)\n                            : unset(control._formState.errors, name);\n                        control._subjects.state.next({\n                            errors: control._formState.errors,\n                        });\n                    }\n                });\n            }\n            else {\n                const field = get(control._fields, name);\n                if (field &&\n                    field._f &&\n                    !(getValidationModes(control._options.reValidateMode).isOnSubmit &&\n                        getValidationModes(control._options.mode).isOnSubmit)) {\n                    validateField(field, control._names.disabled, control._formValues, control._options.criteriaMode === VALIDATION_MODE.all, control._options.shouldUseNativeValidation, true).then((error) => !isEmptyObject(error) &&\n                        control._subjects.state.next({\n                            errors: updateFieldArrayRootError(control._formState.errors, error, name),\n                        }));\n                }\n            }\n        }\n        control._subjects.state.next({\n            name,\n            values: cloneObject(control._formValues),\n        });\n        control._names.focus &&\n            iterateFieldsByAction(control._fields, (ref, key) => {\n                if (control._names.focus &&\n                    key.startsWith(control._names.focus) &&\n                    ref.focus) {\n                    ref.focus();\n                    return 1;\n                }\n                return;\n            });\n        control._names.focus = '';\n        control._setValid();\n        _actioned.current = false;\n    }, [fields, name, control]);\n    React.useEffect(() => {\n        !get(control._formValues, name) && control._setFieldArray(name);\n        return () => {\n            const updateMounted = (name, value) => {\n                const field = get(control._fields, name);\n                if (field && field._f) {\n                    field._f.mount = value;\n                }\n            };\n            control._options.shouldUnregister || shouldUnregister\n                ? control.unregister(name)\n                : updateMounted(name, false);\n        };\n    }, [name, control, keyName, shouldUnregister]);\n    return {\n        swap: React.useCallback(swap, [updateValues, name, control]),\n        move: React.useCallback(move, [updateValues, name, control]),\n        prepend: React.useCallback(prepend, [updateValues, name, control]),\n        append: React.useCallback(append, [updateValues, name, control]),\n        remove: React.useCallback(remove, [updateValues, name, control]),\n        insert: React.useCallback(insert$1, [updateValues, name, control]),\n        update: React.useCallback(update, [updateValues, name, control]),\n        replace: React.useCallback(replace, [updateValues, name, control]),\n        fields: React.useMemo(() => fields.map((field, index) => ({\n            ...field,\n            [keyName]: ids.current[index] || generateId(),\n        })), [fields, keyName]),\n    };\n}\n\n/**\n * Custom hook to manage the entire form.\n *\n * @remarks\n * [API](https://react-hook-form.com/docs/useform) • [Demo](https://codesandbox.io/s/react-hook-form-get-started-ts-5ksmm) • [Video](https://www.youtube.com/watch?v=RkXv4AXXC_4)\n *\n * @param props - form configuration and validation parameters.\n *\n * @returns methods - individual functions to manage the form state. {@link UseFormReturn}\n *\n * @example\n * ```tsx\n * function App() {\n *   const { register, handleSubmit, watch, formState: { errors } } = useForm();\n *   const onSubmit = data => console.log(data);\n *\n *   console.log(watch(\"example\"));\n *\n *   return (\n *     <form onSubmit={handleSubmit(onSubmit)}>\n *       <input defaultValue=\"test\" {...register(\"example\")} />\n *       <input {...register(\"exampleRequired\", { required: true })} />\n *       {errors.exampleRequired && <span>This field is required</span>}\n *       <button>Submit</button>\n *     </form>\n *   );\n * }\n * ```\n */\nfunction useForm(props = {}) {\n    const _formControl = React.useRef(undefined);\n    const _values = React.useRef(undefined);\n    const [formState, updateFormState] = React.useState({\n        isDirty: false,\n        isValidating: false,\n        isLoading: isFunction(props.defaultValues),\n        isSubmitted: false,\n        isSubmitting: false,\n        isSubmitSuccessful: false,\n        isValid: false,\n        submitCount: 0,\n        dirtyFields: {},\n        touchedFields: {},\n        validatingFields: {},\n        errors: props.errors || {},\n        disabled: props.disabled || false,\n        isReady: false,\n        defaultValues: isFunction(props.defaultValues)\n            ? undefined\n            : props.defaultValues,\n    });\n    if (!_formControl.current) {\n        if (props.formControl) {\n            _formControl.current = {\n                ...props.formControl,\n                formState,\n            };\n            if (props.defaultValues && !isFunction(props.defaultValues)) {\n                props.formControl.reset(props.defaultValues, props.resetOptions);\n            }\n        }\n        else {\n            const { formControl, ...rest } = createFormControl(props);\n            _formControl.current = {\n                ...rest,\n                formState,\n            };\n        }\n    }\n    const control = _formControl.current.control;\n    control._options = props;\n    useIsomorphicLayoutEffect(() => {\n        const sub = control._subscribe({\n            formState: control._proxyFormState,\n            callback: () => updateFormState({ ...control._formState }),\n            reRenderRoot: true,\n        });\n        updateFormState((data) => ({\n            ...data,\n            isReady: true,\n        }));\n        control._formState.isReady = true;\n        return sub;\n    }, [control]);\n    React.useEffect(() => control._disableForm(props.disabled), [control, props.disabled]);\n    React.useEffect(() => {\n        if (props.mode) {\n            control._options.mode = props.mode;\n        }\n        if (props.reValidateMode) {\n            control._options.reValidateMode = props.reValidateMode;\n        }\n    }, [control, props.mode, props.reValidateMode]);\n    React.useEffect(() => {\n        if (props.errors) {\n            control._setErrors(props.errors);\n            control._focusError();\n        }\n    }, [control, props.errors]);\n    React.useEffect(() => {\n        props.shouldUnregister &&\n            control._subjects.state.next({\n                values: control._getWatch(),\n            });\n    }, [control, props.shouldUnregister]);\n    React.useEffect(() => {\n        if (control._proxyFormState.isDirty) {\n            const isDirty = control._getDirty();\n            if (isDirty !== formState.isDirty) {\n                control._subjects.state.next({\n                    isDirty,\n                });\n            }\n        }\n    }, [control, formState.isDirty]);\n    React.useEffect(() => {\n        if (props.values && !deepEqual(props.values, _values.current)) {\n            control._reset(props.values, {\n                keepFieldsRef: true,\n                ...control._options.resetOptions,\n            });\n            _values.current = props.values;\n            updateFormState((state) => ({ ...state }));\n        }\n        else {\n            control._resetDefaultValues();\n        }\n    }, [control, props.values]);\n    React.useEffect(() => {\n        if (!control._state.mount) {\n            control._setValid();\n            control._state.mount = true;\n        }\n        if (control._state.watch) {\n            control._state.watch = false;\n            control._subjects.state.next({ ...control._formState });\n        }\n        control._removeUnmounted();\n    });\n    _formControl.current.formState = getProxyFormState(formState, control);\n    return _formControl.current;\n}\n\nexport { Controller, Form, FormProvider, appendErrors, createFormControl, get, set, useController, useFieldArray, useForm, useFormContext, useFormState, useWatch };\n//# sourceMappingURL=index.esm.mjs.map\n","import React from 'react';\nimport { useFormContext } from 'react-hook-form';\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  variant?: 'default' | 'filled' | 'ghost';\n  inputSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  error?: boolean;\n  success?: boolean;\n  fullWidth?: boolean;\n  icon?: React.ReactNode;\n  iconPosition?: 'left' | 'right';\n  name?: string;\n}\n\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(({\n  variant = 'default',\n  inputSize = 'md',\n  error = false,\n  success = false,\n  fullWidth = false,\n  icon,\n  iconPosition = 'left',\n  className = '',\n  name,\n  ...props\n}, ref) => {\n  // Try to get form context if available\n  let formContext: any;\n  try {\n    formContext = useFormContext();\n  } catch {\n    // Not in a form context, that's okay\n  }\n\n  // If we have a name and are in a form context, register the input\n  const registration = name && formContext ? formContext.register(name) : {};\n  \n  const inputClasses = [\n    'qwanyx-input',\n    `qwanyx-input--${inputSize}`,\n    `qwanyx-input--${variant}`,\n    error && 'qwanyx-input--error',\n    success && 'qwanyx-input--success',\n    fullWidth && 'qwanyx-input--fullwidth',\n    icon && iconPosition === 'left' && 'qwanyx-input--icon-left',\n    icon && iconPosition === 'right' && 'qwanyx-input--icon-right',\n    className\n  ].filter(Boolean).join(' ');\n  \n  if (icon) {\n    const wrapperClasses = [\n      'qwanyx-input-wrapper',\n      fullWidth && 'qwanyx-input-wrapper--fullwidth'\n    ].filter(Boolean).join(' ');\n    \n    const iconClasses = [\n      'qwanyx-input-wrapper__icon',\n      `qwanyx-input-wrapper__icon--${iconPosition}`\n    ].join(' ');\n    \n    return (\n      <div className={wrapperClasses}>\n        {icon && (\n          <div className={iconClasses}>\n            {icon}\n          </div>\n        )}\n        <input\n          ref={ref}\n          className={inputClasses}\n          {...registration}\n          {...props}\n        />\n      </div>\n    );\n  }\n  \n  return (\n    <input\n      ref={ref}\n      className={inputClasses}\n      {...registration}\n      {...props}\n    />\n  );\n});\n\nInput.displayName = 'Input';\n\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  variant?: 'default' | 'filled' | 'ghost';\n  textareaSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  error?: boolean;\n  success?: boolean;\n  fullWidth?: boolean;\n  resize?: 'none' | 'vertical' | 'horizontal' | 'both';\n  name?: string;\n}\n\nexport const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({\n  variant = 'default',\n  textareaSize = 'md',\n  error = false,\n  success = false,\n  fullWidth = false,\n  resize = 'vertical',\n  className = '',\n  name,\n  ...props\n}, ref) => {\n  // Try to get form context if available\n  let formContext: any;\n  try {\n    formContext = useFormContext();\n  } catch {\n    // Not in a form context, that's okay\n  }\n\n  // If we have a name and are in a form context, register the textarea\n  const registration = name && formContext ? formContext.register(name) : {};\n  \n  const textareaClasses = [\n    'qwanyx-input',\n    'qwanyx-textarea',\n    `qwanyx-input--${textareaSize}`,\n    `qwanyx-input--${variant}`,\n    error && 'qwanyx-input--error',\n    success && 'qwanyx-input--success',\n    fullWidth && 'qwanyx-input--fullwidth',\n    `qwanyx-textarea--resize-${resize}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <textarea\n      ref={ref}\n      className={textareaClasses}\n      {...registration}\n      {...props}\n    />\n  );\n});\n\nTextarea.displayName = 'Textarea';","import React from 'react';\n\nexport interface HeadingProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  size?: '5xl' | '4xl' | '3xl' | '2xl' | 'xl' | 'lg' | 'base' | 'sm' | 'xs';\n  weight?: 'light' | 'normal' | 'medium' | 'semibold' | 'bold' | 'extrabold';\n  color?: 'primary' | 'secondary' | 'muted' | 'accent' | 'success' | 'warning' | 'error' | 'info';\n  align?: 'left' | 'center' | 'right' | 'justify';\n}\n\nexport const Heading = React.forwardRef<HTMLHeadingElement, HeadingProps>(({\n  children,\n  as: Component = 'h2',\n  size,\n  weight = 'semibold',\n  color = 'primary',\n  align = 'left',\n  className = '',\n  ...props\n}, ref) => {\n  // Auto-size based on heading level if not specified\n  const autoSize = size || {\n    h1: '4xl',\n    h2: '3xl',\n    h3: '2xl',\n    h4: 'xl',\n    h5: 'lg',\n    h6: 'base'\n  }[Component] as HeadingProps['size'];\n  \n  const sizeClasses = {\n    '5xl': 'text-5xl',\n    '4xl': 'text-4xl',\n    '3xl': 'text-3xl',\n    '2xl': 'text-2xl',\n    'xl': 'text-xl',\n    'lg': 'text-lg',\n    'base': 'text-base',\n    'sm': 'text-sm',\n    'xs': 'text-xs'\n  };\n  \n  const weightClasses = {\n    light: 'font-light',\n    normal: 'font-normal',\n    medium: 'font-medium',\n    semibold: 'font-semibold',\n    bold: 'font-bold',\n    extrabold: 'font-extrabold'\n  };\n  \n  const colorClasses = {\n    primary: 'text-text-primary',\n    secondary: 'text-text-secondary',\n    muted: 'text-text-muted',\n    accent: 'text-accent',\n    success: 'text-success',\n    warning: 'text-warning',\n    error: 'text-error',\n    info: 'text-info'\n  };\n  \n  const alignClasses = {\n    left: 'text-left',\n    center: 'text-center',\n    right: 'text-right',\n    justify: 'text-justify'\n  };\n  \n  const combinedClassName = [\n    sizeClasses[autoSize!],\n    weightClasses[weight],\n    colorClasses[color],\n    alignClasses[align],\n    'font-heading',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <Component ref={ref as any} className={combinedClassName} {...props}>\n      {children}\n    </Component>\n  );\n});\n\nHeading.displayName = 'Heading';\n\nexport interface TextProps {\n  children?: React.ReactNode;\n  as?: 'p' | 'span' | 'div' | 'label';\n  size?: 'xs' | 'sm' | 'base' | 'lg' | 'xl' | '2xl';\n  weight?: 'light' | 'normal' | 'medium' | 'semibold' | 'bold';\n  color?: 'primary' | 'secondary' | 'muted' | 'accent' | 'success' | 'warning' | 'error' | 'info';\n  align?: 'left' | 'center' | 'right' | 'justify';\n  italic?: boolean;\n  underline?: boolean;\n  lineThrough?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const Text = React.forwardRef<HTMLParagraphElement, TextProps>(({\n  children,\n  as: Component = 'p',\n  size = 'base',\n  weight = 'normal',\n  color = 'primary',\n  align = 'left',\n  italic = false,\n  underline = false,\n  lineThrough = false,\n  className = '',\n  style\n}, ref) => {\n  const sizeClasses = {\n    'xs': 'text-xs',\n    'sm': 'text-sm',\n    'base': 'text-base',\n    'lg': 'text-lg',\n    'xl': 'text-xl',\n    '2xl': 'text-2xl'\n  };\n  \n  const weightClasses = {\n    light: 'font-light',\n    normal: 'font-normal',\n    medium: 'font-medium',\n    semibold: 'font-semibold',\n    bold: 'font-bold'\n  };\n  \n  const colorClasses = {\n    primary: 'text-text-primary',\n    secondary: 'text-text-secondary',\n    muted: 'text-text-muted',\n    accent: 'text-accent',\n    success: 'text-success',\n    warning: 'text-warning',\n    error: 'text-error',\n    info: 'text-info'\n  };\n  \n  const alignClasses = {\n    left: 'text-left',\n    center: 'text-center',\n    right: 'text-right',\n    justify: 'text-justify'\n  };\n  \n  const decorationClasses = [\n    italic && 'italic',\n    underline && 'underline',\n    lineThrough && 'line-through'\n  ].filter(Boolean).join(' ');\n  \n  const combinedClassName = [\n    sizeClasses[size],\n    weightClasses[weight],\n    colorClasses[color],\n    alignClasses[align],\n    decorationClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  // Handle label element\n  if (Component === 'label') {\n    return (\n      <label ref={ref as any} className={combinedClassName} style={style}>\n        {children}\n      </label>\n    );\n  }\n  \n  return (\n    <Component ref={ref as any} className={combinedClassName} style={style}>\n      {children}\n    </Component>\n  );\n});\n\nText.displayName = 'Text';\n\nexport interface CodeProps extends React.HTMLAttributes<HTMLElement> {\n  variant?: 'inline' | 'block';\n  language?: string;\n}\n\nexport const Code = React.forwardRef<HTMLElement, CodeProps>(({\n  children,\n  variant = 'inline',\n  language,\n  className = '',\n  ...props\n}, ref) => {\n  if (variant === 'block') {\n    return (\n      <pre \n        ref={ref as any}\n        className={`bg-foreground/5 border border-border rounded-md p-4 overflow-x-auto ${className}`}\n        {...props}\n      >\n        <code className=\"text-sm font-mono text-text-primary\" data-language={language}>\n          {children}\n        </code>\n      </pre>\n    );\n  }\n  \n  return (\n    <code\n      ref={ref as any}\n      className={`bg-foreground/10 px-1.5 py-0.5 rounded text-sm font-mono text-text-primary ${className}`}\n      {...props}\n    >\n      {children}\n    </code>\n  );\n});\n\nCode.displayName = 'Code';","import React from 'react';\n\nexport interface ContainerProps extends React.HTMLAttributes<HTMLDivElement> {\n  size?: 'sm' | 'md' | 'lg' | 'xl' | '2xl' | 'full';\n  padding?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  center?: boolean;\n}\n\nexport const Container = React.forwardRef<HTMLDivElement, ContainerProps>(({\n  children,\n  size = 'xl',\n  padding = 'md',\n  center = true,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-container',\n    `qwanyx-container--${size}`,\n    padding !== 'none' && `qwanyx-container--padding-${padding}`,\n    center && 'qwanyx-container--center',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nContainer.displayName = 'Container';\n\nexport interface SectionProps extends React.HTMLAttributes<HTMLElement> {\n  spacing?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  fullHeight?: boolean;\n}\n\nexport const Section = React.forwardRef<HTMLElement, SectionProps>(({\n  children,\n  spacing = 'lg',\n  fullHeight = false,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-section',\n    spacing !== 'none' && `qwanyx-section--spacing-${spacing}`,\n    fullHeight && 'qwanyx-section--fullheight',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <section ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </section>\n  );\n});\n\nSection.displayName = 'Section';\n\nexport interface GridProps extends React.HTMLAttributes<HTMLDivElement> {\n  cols?: 1 | 2 | 3 | 4 | 5 | 6 | 12;\n  gap?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  responsive?: boolean;\n}\n\nexport const Grid = React.forwardRef<HTMLDivElement, GridProps>(({\n  children,\n  cols = 3,\n  gap = 'md',\n  responsive = true,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-grid',\n    `qwanyx-grid--cols-${cols}`,\n    responsive && 'qwanyx-grid--responsive',\n    gap !== 'none' && `qwanyx-grid--gap-${gap}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nGrid.displayName = 'Grid';\n\nexport interface FlexProps extends React.HTMLAttributes<HTMLDivElement> {\n  direction?: 'row' | 'col' | 'row-reverse' | 'col-reverse';\n  wrap?: 'wrap' | 'nowrap' | 'wrap-reverse';\n  justify?: 'start' | 'end' | 'center' | 'between' | 'around' | 'evenly';\n  align?: 'start' | 'end' | 'center' | 'baseline' | 'stretch';\n  gap?: 'none' | 'sm' | 'md' | 'lg' | 'xl';\n  fullWidth?: boolean;\n  fullHeight?: boolean;\n}\n\nexport const Flex = React.forwardRef<HTMLDivElement, FlexProps>(({\n  children,\n  direction = 'row',\n  wrap = 'nowrap',\n  justify = 'start',\n  align = 'stretch',\n  gap = 'none',\n  fullWidth = false,\n  fullHeight = false,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-flex',\n    `qwanyx-flex--${direction}`,\n    `qwanyx-flex--${wrap}`,\n    `qwanyx-flex--justify-${justify}`,\n    `qwanyx-flex--align-${align}`,\n    gap !== 'none' && `qwanyx-flex--gap-${gap}`,\n    fullWidth && 'qwanyx-flex--fullwidth',\n    fullHeight && 'qwanyx-flex--fullheight',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFlex.displayName = 'Flex';","import React from 'react';\nimport { Container } from './Container';\n\nexport interface NavbarProps extends React.HTMLAttributes<HTMLElement> {\n  fixed?: boolean;\n  transparent?: boolean;\n  bordered?: boolean;\n}\n\nexport const Navbar = React.forwardRef<HTMLElement, NavbarProps>(({\n  children,\n  fixed = false,\n  transparent = false,\n  bordered = true,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-navbar',\n    fixed && 'qwanyx-navbar--fixed',\n    transparent && 'qwanyx-navbar--transparent',\n    !bordered && 'qwanyx-navbar--borderless',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <nav ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </nav>\n  );\n});\n\nNavbar.displayName = 'Navbar';\n\nexport interface NavbarBrandProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const NavbarBrand = React.forwardRef<HTMLDivElement, NavbarBrandProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <div ref={ref} className={`qwanyx-navbar__brand ${className}`} {...props}>\n      {children}\n    </div>\n  );\n});\n\nNavbarBrand.displayName = 'NavbarBrand';\n\nexport interface NavbarLogoProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const NavbarLogo = React.forwardRef<HTMLImageElement, NavbarLogoProps>(({\n  size = 'md',\n  className = '',\n  alt = 'Logo',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-navbar__logo',\n    `qwanyx-navbar__logo--${size}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <img \n      ref={ref} \n      className={combinedClassName}\n      alt={alt}\n      {...props}\n    />\n  );\n});\n\nNavbarLogo.displayName = 'NavbarLogo';\n\nexport interface NavbarContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  align?: 'left' | 'center' | 'right';\n}\n\nexport const NavbarContent = React.forwardRef<HTMLDivElement, NavbarContentProps>(({\n  children,\n  align = 'left',\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-navbar__content',\n    `qwanyx-navbar__content--${align}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div \n      ref={ref}\n      className={combinedClassName}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nNavbarContent.displayName = 'NavbarContent';\n\nexport interface NavbarItemProps {\n  children?: React.ReactNode;\n  active?: boolean;\n  as?: 'div' | 'a' | 'button';\n  href?: string;\n  className?: string;\n  onClick?: () => void;\n}\n\nexport const NavbarItem = React.forwardRef<HTMLDivElement, NavbarItemProps>(({\n  children,\n  active = false,\n  as: Component = 'div',\n  className = '',\n  href,\n  onClick\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-navbar__item',\n    active && 'qwanyx-navbar__item--active',\n    className\n  ].filter(Boolean).join(' ');\n  \n  if (Component === 'a' || href) {\n    return (\n      <a \n        ref={ref as any}\n        className={combinedClassName}\n        href={href}\n        onClick={onClick}\n      >\n        {children}\n      </a>\n    );\n  }\n  \n  if (Component === 'button') {\n    return (\n      <button\n        ref={ref as any}\n        className={combinedClassName}\n        onClick={onClick}\n      >\n        {children}\n      </button>\n    );\n  }\n  \n  return (\n    <div\n      ref={ref}\n      className={combinedClassName}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n});\n\nNavbarItem.displayName = 'NavbarItem';\n\nexport interface NavbarMenuProps extends React.HTMLAttributes<HTMLDivElement> {\n  mobile?: boolean;\n  open?: boolean;\n}\n\nexport const NavbarMenu = React.forwardRef<HTMLDivElement, NavbarMenuProps>(({\n  children,\n  mobile = false,\n  open = false,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-navbar__menu',\n    mobile ? 'qwanyx-navbar__menu--mobile' : 'qwanyx-navbar__menu--desktop',\n    mobile && open && 'qwanyx-navbar__menu--open',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div\n      ref={ref}\n      className={combinedClassName}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nNavbarMenu.displayName = 'NavbarMenu';\n\n// Example usage component - shows how to compose a full navbar\nexport interface SimpleNavbarProps {\n  logo?: React.ReactNode;\n  title?: string;\n  subtitle?: string;\n  items?: Array<{\n    label: string;\n    href?: string;\n    active?: boolean;\n    onClick?: () => void;\n  }>;\n  actions?: React.ReactNode;\n  fixed?: boolean;\n  className?: string;\n}\n\nexport const SimpleNavbar: React.FC<SimpleNavbarProps> = ({\n  logo,\n  title,\n  subtitle,\n  items = [],\n  actions,\n  fixed = false\n}) => {\n  const [mobileMenuOpen, setMobileMenuOpen] = React.useState(false);\n  \n  return (\n    <Navbar fixed={fixed} className=\"qwanyx-navbar--simple\">\n      <Container>\n        <div className=\"qwanyx-navbar__container\">\n          {/* Left side: Brand and Menu */}\n          <div className=\"qwanyx-navbar__left\">\n            {/* Brand Section */}\n            <NavbarBrand>\n              {logo}\n              {(title || subtitle) && (\n                <div>\n                  {title && <div className=\"qwanyx-navbar__title\">{title}</div>}\n                  {subtitle && <div className=\"qwanyx-navbar__subtitle\">{subtitle}</div>}\n                </div>\n              )}\n            </NavbarBrand>\n            \n            {/* Desktop Menu */}\n            <NavbarMenu>\n              {items.map((item, index) => (\n                <NavbarItem\n                  key={index}\n                  as=\"a\"\n                  href={item.href}\n                  active={item.active}\n                  onClick={item.onClick}\n                >\n                  {item.label}\n                </NavbarItem>\n              ))}\n            </NavbarMenu>\n          </div>\n          \n          {/* Right side: Actions */}\n          {actions && (\n            <div className=\"qwanyx-navbar__actions\">\n              {actions}\n            </div>\n          )}\n          \n          {/* Mobile Menu Button */}\n          <button\n            className=\"qwanyx-navbar__mobile-toggle\"\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n          >\n            <svg style={{ width: '1.5rem', height: '1.5rem' }} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              {mobileMenuOpen ? (\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              ) : (\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              )}\n            </svg>\n          </button>\n        </div>\n        \n        {/* Mobile Menu */}\n        <NavbarMenu mobile open={mobileMenuOpen}>\n          {items.map((item, index) => (\n            <NavbarItem\n              key={index}\n              as=\"a\"\n              href={item.href}\n              active={item.active}\n              onClick={item.onClick}\n            >\n              {item.label}\n            </NavbarItem>\n          ))}\n          {actions && (\n            <div className=\"qwanyx-navbar__mobile-actions\">\n              {actions}\n            </div>\n          )}\n        </NavbarMenu>\n      </Container>\n    </Navbar>\n  );\n};","import React, { useState, createContext, useContext } from 'react';\n\ninterface TabsContextType {\n  activeTab: string;\n  setActiveTab: (id: string) => void;\n}\n\nconst TabsContext = createContext<TabsContextType | undefined>(undefined);\n\nexport interface TabsProps extends React.HTMLAttributes<HTMLDivElement> {\n  defaultValue?: string;\n  value?: string;\n  onValueChange?: (value: string) => void;\n  variant?: 'line' | 'boxed' | 'pills';\n  size?: 'sm' | 'md' | 'lg';\n  fullWidth?: boolean;\n}\n\nexport const Tabs = React.forwardRef<HTMLDivElement, TabsProps>(({\n  children,\n  defaultValue,\n  value,\n  onValueChange,\n  variant = 'line',\n  size = 'md',\n  fullWidth = false,\n  className = '',\n  ...props\n}, ref) => {\n  const [internalValue, setInternalValue] = useState(defaultValue || '');\n  const activeTab = value !== undefined ? value : internalValue;\n  \n  const setActiveTab = (id: string) => {\n    if (value === undefined) {\n      setInternalValue(id);\n    }\n    onValueChange?.(id);\n  };\n  \n  const baseClasses = 'w-full';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <TabsContext.Provider value={{ activeTab, setActiveTab }}>\n      <div ref={ref} className={combinedClassName} {...props}>\n        {children}\n      </div>\n    </TabsContext.Provider>\n  );\n});\n\nTabs.displayName = 'Tabs';\n\nexport interface TabsListProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'line' | 'boxed' | 'pills';\n  size?: 'sm' | 'md' | 'lg';\n  fullWidth?: boolean;\n}\n\nexport const TabsList = React.forwardRef<HTMLDivElement, TabsListProps>(({\n  children,\n  variant = 'line',\n  size = 'md',\n  fullWidth = false,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'flex';\n  \n  const variantClasses = {\n    line: 'border-b border-border',\n    boxed: 'border-b border-gray-200',\n    pills: 'gap-2'\n  };\n  \n  const widthClass = fullWidth ? 'w-full' : '';\n  \n  const combinedClassName = [\n    baseClasses,\n    variantClasses[variant],\n    widthClass,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {React.Children.map(children, (child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child as React.ReactElement<any>, {\n            variant,\n            size,\n            fullWidth\n          });\n        }\n        return child;\n      })}\n    </div>\n  );\n});\n\nTabsList.displayName = 'TabsList';\n\nexport interface TabsTriggerProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string;\n  variant?: 'line' | 'boxed' | 'pills';\n  size?: 'sm' | 'md' | 'lg';\n  fullWidth?: boolean;\n}\n\nexport const TabsTrigger = React.forwardRef<HTMLButtonElement, TabsTriggerProps>(({\n  children,\n  value,\n  variant = 'line',\n  size = 'md',\n  fullWidth = false,\n  className = '',\n  onClick,\n  ...props\n}, ref) => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error('TabsTrigger must be used within Tabs');\n  }\n  \n  const { activeTab, setActiveTab } = context;\n  const isActive = activeTab === value;\n  \n  const handleClick = (e: React.MouseEvent<HTMLButtonElement>) => {\n    setActiveTab(value);\n    onClick?.(e);\n  };\n  \n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  };\n  \n  const variantClasses = {\n    line: isActive\n      ? 'border-b-2 border-blue-500 text-blue-500 -mb-[1px]'\n      : 'text-gray-600 hover:text-gray-900 hover:border-b-2 hover:border-gray-300 -mb-[1px]',\n    boxed: isActive\n      ? 'bg-white border border-gray-200 border-b-white -mb-[1px] rounded-t-md text-gray-900'\n      : 'border border-transparent hover:bg-gray-50 text-gray-600 hover:text-gray-900',\n    pills: isActive\n      ? 'bg-blue-500 text-white rounded-full'\n      : 'bg-gray-100 text-gray-600 hover:bg-gray-200 rounded-full'\n  };\n  \n  const baseClasses = 'font-medium transition-all duration-200 focus:outline-none';\n  const widthClass = fullWidth ? 'flex-1' : '';\n  \n  const combinedClassName = [\n    baseClasses,\n    sizeClasses[size],\n    variantClasses[variant],\n    widthClass,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      role=\"tab\"\n      aria-selected={isActive}\n      className={combinedClassName}\n      onClick={handleClick}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n});\n\nTabsTrigger.displayName = 'TabsTrigger';\n\nexport interface TabsContentProps extends React.HTMLAttributes<HTMLDivElement> {\n  value: string;\n}\n\nexport const TabsContent = React.forwardRef<HTMLDivElement, TabsContentProps>(({\n  children,\n  value,\n  className = '',\n  ...props\n}, ref) => {\n  const context = useContext(TabsContext);\n  if (!context) {\n    throw new Error('TabsContent must be used within Tabs');\n  }\n  \n  const { activeTab } = context;\n  \n  if (activeTab !== value) {\n    return null;\n  }\n  \n  return (\n    <div\n      ref={ref}\n      role=\"tabpanel\"\n      className={`mt-6 ${className}`}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nTabsContent.displayName = 'TabsContent';\n\n// Simple Tabs component for easy use\nexport interface SimpleTabsProps {\n  tabs: Array<{\n    id: string;\n    label: string;\n    content: React.ReactNode;\n    disabled?: boolean;\n  }>;\n  defaultTab?: string;\n  variant?: 'line' | 'boxed' | 'pills';\n  size?: 'sm' | 'md' | 'lg';\n  fullWidth?: boolean;\n  className?: string;\n}\n\nexport const SimpleTabs: React.FC<SimpleTabsProps> = ({\n  tabs,\n  defaultTab,\n  variant = 'line',\n  size = 'md',\n  fullWidth = false,\n  className = ''\n}) => {\n  const defaultValue = defaultTab || tabs[0]?.id;\n  \n  return (\n    <Tabs defaultValue={defaultValue} className={className}>\n      <TabsList variant={variant} size={size} fullWidth={fullWidth}>\n        {tabs.map((tab) => (\n          <TabsTrigger\n            key={tab.id}\n            value={tab.id}\n            disabled={tab.disabled}\n          >\n            {tab.label}\n          </TabsTrigger>\n        ))}\n      </TabsList>\n      {tabs.map((tab) => (\n        <TabsContent key={tab.id} value={tab.id}>\n          {tab.content}\n        </TabsContent>\n      ))}\n    </Tabs>\n  );\n};","import React from 'react';\nimport { Container } from './Container';\n\nexport interface HeroProps extends React.HTMLAttributes<HTMLElement> {\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';\n  centered?: boolean;\n  overlay?: boolean;\n  overlayOpacity?: number;\n  backgroundImage?: string;\n  backgroundColor?: string;\n}\n\nexport const Hero = React.forwardRef<HTMLElement, HeroProps>(({\n  children,\n  size = 'lg',\n  centered = true,\n  overlay = false,\n  overlayOpacity = 0.5,\n  backgroundImage,\n  backgroundColor,\n  className = '',\n  style,\n  ...props\n}, ref) => {\n  const sizeClasses = {\n    sm: 'py-12',\n    md: 'py-20',\n    lg: 'py-32',\n    xl: 'py-48',\n    full: 'min-h-screen flex items-center'\n  };\n  \n  const baseClasses = 'relative overflow-hidden';\n  const centerClasses = centered ? 'text-center' : '';\n  \n  const combinedClassName = [\n    baseClasses,\n    sizeClasses[size],\n    centerClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  const backgroundStyle: React.CSSProperties = {\n    ...style,\n    ...(backgroundImage && {\n      backgroundImage: `url(${backgroundImage})`,\n      backgroundSize: 'cover',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat'\n    }),\n    ...(backgroundColor && { backgroundColor })\n  };\n  \n  return (\n    <section ref={ref} className={combinedClassName} style={backgroundStyle} {...props}>\n      {overlay && backgroundImage && (\n        <div \n          className=\"absolute inset-0 bg-black pointer-events-none\"\n          style={{ opacity: overlayOpacity }}\n        />\n      )}\n      <div className=\"relative z-10\">\n        {children}\n      </div>\n    </section>\n  );\n});\n\nHero.displayName = 'Hero';\n\nexport interface HeroTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: 'h1' | 'h2' | 'h3';\n}\n\nexport const HeroTitle = React.forwardRef<HTMLHeadingElement, HeroTitleProps>(({\n  children,\n  as: Component = 'h1',\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'text-4xl md:text-5xl lg:text-6xl font-bold mb-6';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <Component ref={ref as any} className={combinedClassName} {...props}>\n      {children}\n    </Component>\n  );\n});\n\nHeroTitle.displayName = 'HeroTitle';\n\nexport interface HeroSubtitleProps extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nexport const HeroSubtitle = React.forwardRef<HTMLParagraphElement, HeroSubtitleProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'text-lg md:text-xl lg:text-2xl mb-8 opacity-90';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <p ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </p>\n  );\n});\n\nHeroSubtitle.displayName = 'HeroSubtitle';\n\nexport interface HeroContentProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const HeroContent = React.forwardRef<HTMLDivElement, HeroContentProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <Container>\n      <div ref={ref} className={className} {...props}>\n        {children}\n      </div>\n    </Container>\n  );\n});\n\nHeroContent.displayName = 'HeroContent';\n\nexport interface HeroActionsProps extends React.HTMLAttributes<HTMLDivElement> {\n  spacing?: 'sm' | 'md' | 'lg';\n}\n\nexport const HeroActions = React.forwardRef<HTMLDivElement, HeroActionsProps>(({\n  children,\n  spacing = 'md',\n  className = '',\n  ...props\n}, ref) => {\n  const spacingClasses = {\n    sm: 'gap-2',\n    md: 'gap-4',\n    lg: 'gap-6'\n  };\n  \n  const baseClasses = 'flex flex-wrap justify-center items-center';\n  \n  const combinedClassName = [\n    baseClasses,\n    spacingClasses[spacing],\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nHeroActions.displayName = 'HeroActions';","import React from 'react';\n\nexport interface FeatureProps extends React.HTMLAttributes<HTMLDivElement> {\n  icon?: React.ReactNode;\n  iconPosition?: 'top' | 'left' | 'right';\n  centered?: boolean;\n}\n\nexport const Feature = React.forwardRef<HTMLDivElement, FeatureProps>(({\n  children,\n  icon,\n  iconPosition = 'top',\n  centered = false,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = centered ? 'text-center' : '';\n  \n  const layoutClasses = {\n    top: 'flex flex-col',\n    left: 'flex flex-row items-start',\n    right: 'flex flex-row-reverse items-start'\n  };\n  \n  const iconSpacingClasses = {\n    top: 'mb-4',\n    left: 'mr-4',\n    right: 'ml-4'\n  };\n  \n  const combinedClassName = [\n    baseClasses,\n    icon ? layoutClasses[iconPosition] : '',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {icon && (\n        <div className={iconSpacingClasses[iconPosition]}>\n          {icon}\n        </div>\n      )}\n      <div className=\"flex-1\">\n        {children}\n      </div>\n    </div>\n  );\n});\n\nFeature.displayName = 'Feature';\n\nexport interface FeatureIconProps extends React.HTMLAttributes<HTMLDivElement> {\n  size?: 'sm' | 'md' | 'lg' | 'xl';\n  variant?: 'circle' | 'square' | 'none';\n  color?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'info';\n}\n\nexport const FeatureIcon = React.forwardRef<HTMLDivElement, FeatureIconProps>(({\n  children,\n  size = 'md',\n  variant = 'circle',\n  color = 'primary',\n  className = '',\n  ...props\n}, ref) => {\n  const sizeClasses = {\n    sm: 'w-10 h-10 text-lg',\n    md: 'w-12 h-12 text-xl',\n    lg: 'w-16 h-16 text-2xl',\n    xl: 'w-20 h-20 text-3xl'\n  };\n  \n  const variantClasses = {\n    circle: 'rounded-full',\n    square: 'rounded-lg',\n    none: ''\n  };\n  \n  const colorClasses = {\n    primary: 'bg-blue-100 text-blue-600',\n    secondary: 'bg-purple-100 text-purple-600',\n    accent: 'bg-green-100 text-green-600',\n    success: 'bg-green-100 text-green-600',\n    warning: 'bg-yellow-100 text-yellow-600',\n    error: 'bg-red-100 text-red-600',\n    info: 'bg-blue-100 text-blue-600'\n  };\n  \n  const baseClasses = 'flex items-center justify-center';\n  \n  const combinedClassName = [\n    baseClasses,\n    sizeClasses[size],\n    variantClasses[variant],\n    variant !== 'none' ? colorClasses[color] : '',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFeatureIcon.displayName = 'FeatureIcon';\n\nexport interface FeatureTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {\n  as?: 'h2' | 'h3' | 'h4' | 'h5';\n}\n\nexport const FeatureTitle = React.forwardRef<HTMLHeadingElement, FeatureTitleProps>(({\n  children,\n  as: Component = 'h3',\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'text-xl font-semibold mb-2';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <Component ref={ref as any} className={combinedClassName} {...props}>\n      {children}\n    </Component>\n  );\n});\n\nFeatureTitle.displayName = 'FeatureTitle';\n\nexport interface FeatureDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nexport const FeatureDescription = React.forwardRef<HTMLParagraphElement, FeatureDescriptionProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'text-gray-600';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <p ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </p>\n  );\n});\n\nFeatureDescription.displayName = 'FeatureDescription';\n\n// Features Grid component for layout\nexport interface FeaturesGridProps extends React.HTMLAttributes<HTMLDivElement> {\n  cols?: 1 | 2 | 3 | 4;\n  gap?: 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport const FeaturesGrid = React.forwardRef<HTMLDivElement, FeaturesGridProps>(({\n  children,\n  cols = 3,\n  gap = 'lg',\n  className = '',\n  ...props\n}, ref) => {\n  const colsClasses = {\n    1: 'grid-cols-1',\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',\n    4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4'\n  };\n  \n  const gapClasses = {\n    sm: 'gap-4',\n    md: 'gap-6',\n    lg: 'gap-8',\n    xl: 'gap-12'\n  };\n  \n  const baseClasses = 'grid';\n  \n  const combinedClassName = [\n    baseClasses,\n    colsClasses[cols],\n    gapClasses[gap],\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFeaturesGrid.displayName = 'FeaturesGrid';","import React from 'react';\nimport { Container } from './Container';\n\nexport interface FooterProps extends React.HTMLAttributes<HTMLElement> {\n  variant?: 'simple' | 'detailed' | 'minimal';\n}\n\nexport const Footer = React.forwardRef<HTMLElement, FooterProps>(({\n  children,\n  variant = 'simple',\n  className = '',\n  ...props\n}, ref) => {\n  const variantClasses = {\n    simple: 'py-8',\n    detailed: 'py-12',\n    minimal: 'py-4'\n  };\n  \n  const baseClasses = 'border-t border-border';\n  \n  const combinedClassName = [\n    baseClasses,\n    variantClasses[variant],\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <footer ref={ref} className={combinedClassName} {...props}>\n      <Container>\n        {children}\n      </Container>\n    </footer>\n  );\n});\n\nFooter.displayName = 'Footer';\n\nexport interface FooterSectionProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const FooterSection = React.forwardRef<HTMLDivElement, FooterSectionProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  return (\n    <div ref={ref} className={className} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFooterSection.displayName = 'FooterSection';\n\nexport interface FooterTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\n\nexport const FooterTitle = React.forwardRef<HTMLHeadingElement, FooterTitleProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'font-semibold text-gray-900 mb-4';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <h3 ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </h3>\n  );\n});\n\nFooterTitle.displayName = 'FooterTitle';\n\nexport interface FooterLinkProps extends React.AnchorHTMLAttributes<HTMLAnchorElement> {}\n\nexport const FooterLink = React.forwardRef<HTMLAnchorElement, FooterLinkProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'text-gray-600 hover:text-gray-900 transition-colors';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <a ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </a>\n  );\n});\n\nFooterLink.displayName = 'FooterLink';\n\nexport interface FooterLinksProps extends React.HTMLAttributes<HTMLUListElement> {\n  spacing?: 'sm' | 'md' | 'lg';\n}\n\nexport const FooterLinks = React.forwardRef<HTMLUListElement, FooterLinksProps>(({\n  children,\n  spacing = 'md',\n  className = '',\n  ...props\n}, ref) => {\n  const spacingClasses = {\n    sm: 'space-y-1',\n    md: 'space-y-2',\n    lg: 'space-y-3'\n  };\n  \n  const combinedClassName = [\n    spacingClasses[spacing],\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <ul ref={ref} className={combinedClassName} {...props}>\n      {React.Children.map(children, (child) => (\n        <li>{child}</li>\n      ))}\n    </ul>\n  );\n});\n\nFooterLinks.displayName = 'FooterLinks';\n\nexport interface FooterGridProps extends React.HTMLAttributes<HTMLDivElement> {\n  cols?: 2 | 3 | 4 | 5 | 6;\n  gap?: 'sm' | 'md' | 'lg' | 'xl';\n}\n\nexport const FooterGrid = React.forwardRef<HTMLDivElement, FooterGridProps>(({\n  children,\n  cols = 4,\n  gap = 'lg',\n  className = '',\n  ...props\n}, ref) => {\n  const colsClasses = {\n    2: 'grid-cols-1 md:grid-cols-2',\n    3: 'grid-cols-1 md:grid-cols-3',\n    4: 'grid-cols-2 md:grid-cols-4',\n    5: 'grid-cols-2 md:grid-cols-5',\n    6: 'grid-cols-2 md:grid-cols-3 lg:grid-cols-6'\n  };\n  \n  const gapClasses = {\n    sm: 'gap-4',\n    md: 'gap-6',\n    lg: 'gap-8',\n    xl: 'gap-12'\n  };\n  \n  const baseClasses = 'grid';\n  \n  const combinedClassName = [\n    baseClasses,\n    colsClasses[cols],\n    gapClasses[gap],\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFooterGrid.displayName = 'FooterGrid';\n\nexport interface FooterBottomProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const FooterBottom = React.forwardRef<HTMLDivElement, FooterBottomProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const baseClasses = 'mt-8 pt-8 border-t border-border text-sm text-gray-600';\n  \n  const combinedClassName = [\n    baseClasses,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nFooterBottom.displayName = 'FooterBottom';","import React from 'react';\n\nexport interface BadgeProps extends React.HTMLAttributes<HTMLSpanElement> {\n  variant?: 'solid' | 'outline' | 'subtle';\n  color?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'info' | 'gray';\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n  rounded?: 'sm' | 'md' | 'lg' | 'full';\n}\n\nexport const Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(({\n  children,\n  variant = 'solid',\n  color = 'primary',\n  size = 'md',\n  rounded = 'md',\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-badge',\n    `qwanyx-badge--${size}`,\n    `qwanyx-badge--rounded-${rounded}`,\n    `qwanyx-badge--${variant}`,\n    `qwanyx-badge--${color}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <span ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </span>\n  );\n});\n\nBadge.displayName = 'Badge';\n\n// Badge with icon support\nexport interface IconBadgeProps extends BadgeProps {\n  icon?: React.ReactNode;\n  iconPosition?: 'left' | 'right';\n}\n\nexport const IconBadge = React.forwardRef<HTMLSpanElement, IconBadgeProps>(({\n  children,\n  icon,\n  iconPosition = 'left',\n  ...props\n}, ref) => {\n  return (\n    <Badge ref={ref} {...props}>\n      {icon && iconPosition === 'left' && (\n        <span className={`qwanyx-badge__icon--${iconPosition}`}>{icon}</span>\n      )}\n      {children}\n      {icon && iconPosition === 'right' && (\n        <span className={`qwanyx-badge__icon--${iconPosition}`}>{icon}</span>\n      )}\n    </Badge>\n  );\n});\n\nIconBadge.displayName = 'IconBadge';\n\n// Badge with close button\nexport interface ClosableBadgeProps extends BadgeProps {\n  onClose?: () => void;\n}\n\nexport const ClosableBadge = React.forwardRef<HTMLSpanElement, ClosableBadgeProps>(({\n  children,\n  onClose,\n  ...props\n}, ref) => {\n  return (\n    <Badge ref={ref} {...props}>\n      {children}\n      {onClose && (\n        <button\n          onClick={onClose}\n          className=\"qwanyx-badge__close\"\n          aria-label=\"Remove\"\n        >\n          <svg fill=\"currentColor\" viewBox=\"0 0 20 20\">\n            <path\n              fillRule=\"evenodd\"\n              d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n              clipRule=\"evenodd\"\n            />\n          </svg>\n        </button>\n      )}\n    </Badge>\n  );\n});\n\nClosableBadge.displayName = 'ClosableBadge';\n\n// Badge with dot indicator\nexport interface DotBadgeProps extends BadgeProps {\n  dot?: boolean;\n  dotPosition?: 'left' | 'right';\n  dotColor?: 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'info';\n}\n\nexport const DotBadge = React.forwardRef<HTMLSpanElement, DotBadgeProps>(({\n  children,\n  dot = true,\n  dotPosition = 'left',\n  dotColor = 'primary',\n  ...props\n}, ref) => {\n  return (\n    <Badge ref={ref} {...props}>\n      {dot && dotPosition === 'left' && (\n        <span className={`qwanyx-badge__dot qwanyx-badge__dot--${dotPosition} qwanyx-badge__dot--${dotColor}`} />\n      )}\n      {children}\n      {dot && dotPosition === 'right' && (\n        <span className={`qwanyx-badge__dot qwanyx-badge__dot--${dotPosition} qwanyx-badge__dot--${dotColor}`} />\n      )}\n    </Badge>\n  );\n});\n\nDotBadge.displayName = 'DotBadge';","import React from 'react';\n\nexport interface AvatarProps extends React.HTMLAttributes<HTMLDivElement> {\n  src?: string;\n  alt?: string;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  shape?: 'circle' | 'square';\n  fallback?: string | React.ReactNode;\n  status?: 'online' | 'offline' | 'away' | 'busy';\n  statusPosition?: 'top-right' | 'top-left' | 'bottom-right' | 'bottom-left';\n}\n\nexport const Avatar = React.forwardRef<HTMLDivElement, AvatarProps>(({\n  src,\n  alt = '',\n  size = 'md',\n  shape = 'circle',\n  fallback,\n  status,\n  statusPosition = 'bottom-right',\n  className = '',\n  children,\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-avatar',\n    `qwanyx-avatar--${size}`,\n    `qwanyx-avatar--${shape}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  const renderFallback = () => {\n    if (typeof fallback === 'string') {\n      return (\n        <span className=\"qwanyx-avatar__fallback\">\n          {fallback}\n        </span>\n      );\n    }\n    return fallback;\n  };\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {src ? (\n        <img\n          src={src}\n          alt={alt}\n          className=\"qwanyx-avatar__image\"\n        />\n      ) : (\n        renderFallback()\n      )}\n      {children}\n      {status && (\n        <span\n          className={`qwanyx-avatar__status qwanyx-avatar__status--${status} qwanyx-avatar__status--${statusPosition}`}\n        />\n      )}\n    </div>\n  );\n});\n\nAvatar.displayName = 'Avatar';\n\n// Avatar Group component\nexport interface AvatarGroupProps extends React.HTMLAttributes<HTMLDivElement> {\n  max?: number;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl';\n  spacing?: 'tight' | 'normal' | 'loose';\n}\n\nexport const AvatarGroup = React.forwardRef<HTMLDivElement, AvatarGroupProps>(({\n  children,\n  max = 5,\n  size = 'md',\n  spacing = 'normal',\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-avatar-group',\n    `qwanyx-avatar-group--${spacing}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  const childrenArray = React.Children.toArray(children);\n  const visibleChildren = childrenArray.slice(0, max);\n  const remainingCount = childrenArray.length - max;\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {visibleChildren.map((child) => {\n        if (React.isValidElement(child)) {\n          return React.cloneElement(child as React.ReactElement<any>, {\n            size,\n            className: `${(child.props as any).className || ''}`\n          });\n        }\n        return child;\n      })}\n      {remainingCount > 0 && (\n        <Avatar\n          size={size}\n          fallback={`+${remainingCount}`}\n          className=\"qwanyx-avatar--count\"\n        />\n      )}\n    </div>\n  );\n});\n\nAvatarGroup.displayName = 'AvatarGroup';\n\n// Avatar with initials\nexport interface InitialsAvatarProps extends Omit<AvatarProps, 'fallback'> {\n  name: string;\n  color?: 'auto' | 'primary' | 'secondary' | 'accent' | 'success' | 'warning' | 'error' | 'info';\n}\n\nexport const InitialsAvatar = React.forwardRef<HTMLDivElement, InitialsAvatarProps>(({\n  name,\n  color = 'auto',\n  className = '',\n  ...props\n}, ref) => {\n  const getInitials = (name: string) => {\n    const parts = name.split(' ');\n    if (parts.length >= 2) {\n      return `${parts[0][0]}${parts[parts.length - 1][0]}`.toUpperCase();\n    }\n    return name.slice(0, 2).toUpperCase();\n  };\n  \n  const getColorIndexFromName = (name: string) => {\n    let hash = 0;\n    for (let i = 0; i < name.length; i++) {\n      hash = name.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return Math.abs(hash) % 9;\n  };\n  \n  const getColorClass = () => {\n    if (color === 'auto') {\n      return `qwanyx-avatar--color-${getColorIndexFromName(name)}`;\n    }\n    return `qwanyx-avatar--${color}`;\n  };\n  \n  return (\n    <Avatar\n      ref={ref}\n      fallback={\n        <span className=\"qwanyx-avatar--initials\">\n          {getInitials(name)}\n        </span>\n      }\n      className={`${getColorClass()} ${className}`}\n      {...props}\n    />\n  );\n});\n\nInitialsAvatar.displayName = 'InitialsAvatar';","import React, { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\n\nexport interface ModalProps extends React.HTMLAttributes<HTMLDivElement> {\n  isOpen: boolean;\n  onClose: () => void;\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';\n  closeOnOverlayClick?: boolean;\n  closeOnEscape?: boolean;\n  showCloseButton?: boolean;\n  overlayClassName?: string;\n}\n\nexport const Modal = React.forwardRef<HTMLDivElement, ModalProps>(({\n  children,\n  isOpen,\n  onClose,\n  size = 'md',\n  closeOnOverlayClick = true,\n  closeOnEscape = true,\n  showCloseButton = true,\n  overlayClassName = '',\n  className = '',\n  ...props\n}, ref) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  \n  useEffect(() => {\n    const handleEscape = (e: KeyboardEvent) => {\n      if (closeOnEscape && e.key === 'Escape') {\n        onClose();\n      }\n    };\n    \n    if (isOpen) {\n      document.addEventListener('keydown', handleEscape);\n      document.body.style.overflow = 'hidden';\n    }\n    \n    return () => {\n      document.removeEventListener('keydown', handleEscape);\n      document.body.style.overflow = '';\n    };\n  }, [isOpen, onClose, closeOnEscape]);\n  \n  const handleOverlayClick = (e: React.MouseEvent) => {\n    if (closeOnOverlayClick && e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n  \n  const combinedOverlayClassName = [\n    'qwanyx-modal-overlay',\n    overlayClassName\n  ].filter(Boolean).join(' ');\n  \n  const combinedModalClassName = [\n    'qwanyx-modal',\n    `qwanyx-modal--${size}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  if (!isOpen) return null;\n  \n  return createPortal(\n    <div\n      className={combinedOverlayClassName}\n      onClick={handleOverlayClick}\n      role=\"dialog\"\n      aria-modal=\"true\"\n    >\n      <div\n        ref={ref || modalRef}\n        className={combinedModalClassName}\n        {...props}\n      >\n        {showCloseButton && (\n          <button\n            onClick={onClose}\n            className=\"qwanyx-modal__close\"\n            aria-label=\"Close modal\"\n          >\n            <svg fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        )}\n        {children}\n      </div>\n    </div>,\n    document.body\n  );\n});\n\nModal.displayName = 'Modal';\n\nexport interface ModalHeaderProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const ModalHeader = React.forwardRef<HTMLDivElement, ModalHeaderProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-modal__header',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nModalHeader.displayName = 'ModalHeader';\n\nexport interface ModalTitleProps extends React.HTMLAttributes<HTMLHeadingElement> {}\n\nexport const ModalTitle = React.forwardRef<HTMLHeadingElement, ModalTitleProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-modal__title',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <h2 ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </h2>\n  );\n});\n\nModalTitle.displayName = 'ModalTitle';\n\nexport interface ModalDescriptionProps extends React.HTMLAttributes<HTMLParagraphElement> {}\n\nexport const ModalDescription = React.forwardRef<HTMLParagraphElement, ModalDescriptionProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-modal__description',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <p ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </p>\n  );\n});\n\nModalDescription.displayName = 'ModalDescription';\n\nexport interface ModalBodyProps extends React.HTMLAttributes<HTMLDivElement> {}\n\nexport const ModalBody = React.forwardRef<HTMLDivElement, ModalBodyProps>(({\n  children,\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-modal__body',\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nModalBody.displayName = 'ModalBody';\n\nexport interface ModalFooterProps extends React.HTMLAttributes<HTMLDivElement> {\n  align?: 'left' | 'center' | 'right' | 'between';\n}\n\nexport const ModalFooter = React.forwardRef<HTMLDivElement, ModalFooterProps>(({\n  children,\n  align = 'right',\n  className = '',\n  ...props\n}, ref) => {\n  const combinedClassName = [\n    'qwanyx-modal__footer',\n    `qwanyx-modal__footer--${align}`,\n    className\n  ].filter(Boolean).join(' ');\n  \n  return (\n    <div ref={ref} className={combinedClassName} {...props}>\n      {children}\n    </div>\n  );\n});\n\nModalFooter.displayName = 'ModalFooter';\n\n// Simple Modal component for easy use\nexport interface SimpleModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  title?: string;\n  description?: string;\n  children: React.ReactNode;\n  footer?: React.ReactNode;\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';\n  closeOnOverlayClick?: boolean;\n  closeOnEscape?: boolean;\n  showCloseButton?: boolean;\n}\n\nexport const SimpleModal: React.FC<SimpleModalProps> = ({\n  isOpen,\n  onClose,\n  title,\n  description,\n  children,\n  footer,\n  size = 'md',\n  closeOnOverlayClick = true,\n  closeOnEscape = true,\n  showCloseButton = true\n}) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      size={size}\n      closeOnOverlayClick={closeOnOverlayClick}\n      closeOnEscape={closeOnEscape}\n      showCloseButton={showCloseButton}\n    >\n      {(title || description) && (\n        <ModalHeader>\n          {title && <ModalTitle>{title}</ModalTitle>}\n          {description && <ModalDescription>{description}</ModalDescription>}\n        </ModalHeader>\n      )}\n      <ModalBody>{children}</ModalBody>\n      {footer && <ModalFooter>{footer}</ModalFooter>}\n    </Modal>\n  );\n};","import React from 'react';\n\nexport interface AlertProps extends React.HTMLAttributes<HTMLDivElement> {\n  variant?: 'info' | 'success' | 'warning' | 'error';\n  title?: string;\n  dismissible?: boolean;\n  onDismiss?: () => void;\n}\n\nexport const Alert = React.forwardRef<HTMLDivElement, AlertProps>(({\n  children,\n  variant = 'info',\n  title,\n  dismissible = false,\n  onDismiss,\n  className = '',\n  ...props\n}, ref) => {\n  const variantClasses = {\n    info: 'bg-blue-50 border-blue-200 text-blue-800',\n    success: 'bg-green-50 border-green-200 text-green-800',\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n    error: 'bg-red-50 border-red-200 text-red-800'\n  };\n\n  const iconClasses = {\n    info: 'text-blue-400',\n    success: 'text-green-400',\n    warning: 'text-yellow-400',\n    error: 'text-red-400'\n  };\n\n  const icons = {\n    info: (\n      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fillRule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clipRule=\"evenodd\" />\n      </svg>\n    ),\n    success: (\n      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clipRule=\"evenodd\" />\n      </svg>\n    ),\n    warning: (\n      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fillRule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clipRule=\"evenodd\" />\n      </svg>\n    ),\n    error: (\n      <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n      </svg>\n    )\n  };\n\n  const baseClasses = 'border rounded-lg p-4';\n\n  const combinedClassName = [\n    baseClasses,\n    variantClasses[variant],\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div ref={ref} className={combinedClassName} role=\"alert\" {...props}>\n      <div className=\"flex\">\n        <div className={`flex-shrink-0 ${iconClasses[variant]}`}>\n          {icons[variant]}\n        </div>\n        <div className=\"ml-3 flex-1\">\n          {title && (\n            <h3 className=\"text-sm font-medium mb-1\">{title}</h3>\n          )}\n          <div className=\"text-sm\">{children}</div>\n        </div>\n        {dismissible && (\n          <div className=\"ml-auto pl-3\">\n            <button\n              onClick={onDismiss}\n              className=\"inline-flex rounded-md p-1.5 hover:bg-white hover:bg-opacity-20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent focus:ring-white\"\n            >\n              <span className=\"sr-only\">Dismiss</span>\n              <svg className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fillRule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\n              </svg>\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n});\n\nAlert.displayName = 'Alert';","import React, { useState, useRef, useEffect, KeyboardEvent, ClipboardEvent } from 'react';\n\nexport interface OTPInputProps {\n  length?: number;\n  value?: string;\n  onChange: (value: string) => void;\n  onComplete?: (value: string) => void;\n  disabled?: boolean;\n  error?: boolean;\n  autoFocus?: boolean;\n  className?: string;\n}\n\nexport const OTPInput: React.FC<OTPInputProps> = ({\n  length = 6,\n  value = '',\n  onChange,\n  onComplete,\n  disabled = false,\n  error = false,\n  autoFocus = true,\n  className = ''\n}) => {\n  const [digits, setDigits] = useState<string[]>(() => {\n    const initialDigits = value.split('').slice(0, length);\n    return [...initialDigits, ...Array(length - initialDigits.length).fill('')];\n  });\n  \n  const inputRefs = useRef<(HTMLInputElement | null)[]>([]);\n\n  useEffect(() => {\n    if (autoFocus && inputRefs.current[0]) {\n      inputRefs.current[0].focus();\n    }\n  }, [autoFocus]);\n\n  useEffect(() => {\n    const newValue = digits.join('');\n    onChange(newValue);\n    \n    if (newValue.length === length && onComplete) {\n      onComplete(newValue);\n    }\n  }, [digits, length, onChange, onComplete]);\n\n  const handleChange = (index: number, digit: string) => {\n    if (disabled) return;\n    \n    // Only allow digits\n    if (digit && !/^\\d$/.test(digit)) return;\n\n    const newDigits = [...digits];\n    newDigits[index] = digit;\n    setDigits(newDigits);\n\n    // Auto-focus next input\n    if (digit && index < length - 1) {\n      inputRefs.current[index + 1]?.focus();\n    }\n  };\n\n  const handleKeyDown = (index: number, e: KeyboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n\n    // Handle backspace\n    if (e.key === 'Backspace') {\n      if (!digits[index] && index > 0) {\n        // If current field is empty, move to previous field\n        inputRefs.current[index - 1]?.focus();\n        const newDigits = [...digits];\n        newDigits[index - 1] = '';\n        setDigits(newDigits);\n      } else {\n        // Clear current field\n        const newDigits = [...digits];\n        newDigits[index] = '';\n        setDigits(newDigits);\n      }\n      e.preventDefault();\n    }\n\n    // Handle arrow keys\n    if (e.key === 'ArrowLeft' && index > 0) {\n      inputRefs.current[index - 1]?.focus();\n    }\n    if (e.key === 'ArrowRight' && index < length - 1) {\n      inputRefs.current[index + 1]?.focus();\n    }\n  };\n\n  const handlePaste = (e: ClipboardEvent<HTMLInputElement>) => {\n    if (disabled) return;\n    \n    e.preventDefault();\n    const pastedData = e.clipboardData.getData('text').replace(/\\D/g, '');\n    \n    if (pastedData) {\n      const newDigits = pastedData.split('').slice(0, length);\n      const paddedDigits = [...newDigits, ...Array(length - newDigits.length).fill('')];\n      setDigits(paddedDigits);\n      \n      // Focus on the next empty field or the last field\n      const nextEmptyIndex = paddedDigits.findIndex(d => d === '');\n      const focusIndex = nextEmptyIndex === -1 ? length - 1 : nextEmptyIndex;\n      inputRefs.current[focusIndex]?.focus();\n    }\n  };\n\n  const handleFocus = (index: number) => {\n    // Select all text when focusing\n    inputRefs.current[index]?.select();\n  };\n\n  return (\n    <div className={`flex gap-2 justify-center ${className}`}>\n      {Array.from({ length }, (_, index) => (\n        <div key={index} className=\"relative\">\n          <input\n            ref={(el) => {\n              if (el) inputRefs.current[index] = el;\n            }}\n            type=\"text\"\n            inputMode=\"numeric\"\n            maxLength={1}\n            value={digits[index]}\n            onChange={(e) => handleChange(index, e.target.value)}\n            onKeyDown={(e) => handleKeyDown(index, e)}\n            onPaste={handlePaste}\n            onFocus={() => handleFocus(index)}\n            disabled={disabled}\n            className={`\n              w-12 h-14 \n              text-center text-2xl font-bold\n              border-2 rounded-lg\n              transition-all duration-200\n              ${disabled \n                ? 'bg-gray-100 text-gray-400 border-gray-300 cursor-not-allowed' \n                : 'bg-white text-gray-900 hover:border-blue-400 focus:border-blue-500'\n              }\n              ${error \n                ? 'border-red-500 focus:border-red-500 animate-shake' \n                : digits[index] \n                  ? 'border-green-500' \n                  : 'border-gray-300'\n              }\n              focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-20\n            `}\n          />\n          {/* Dot indicator for filled fields */}\n          {digits[index] && (\n            <div className=\"absolute -bottom-2 left-1/2 transform -translate-x-1/2\">\n              <div className=\"w-1.5 h-1.5 bg-blue-500 rounded-full\" />\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\n// Optional timer component for code expiration\nexport interface OTPTimerProps {\n  duration?: number; // in seconds\n  onExpire?: () => void;\n  onResend?: () => void;\n  canResend?: boolean;\n}\n\nexport const OTPTimer: React.FC<OTPTimerProps> = ({\n  duration = 600, // 10 minutes default\n  onExpire,\n  onResend,\n  canResend = true\n}) => {\n  const [timeLeft, setTimeLeft] = useState(duration);\n  const [expired, setExpired] = useState(false);\n\n  useEffect(() => {\n    if (timeLeft <= 0) {\n      setExpired(true);\n      if (onExpire) onExpire();\n      return;\n    }\n\n    const timer = setInterval(() => {\n      setTimeLeft((prev) => prev - 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft, onExpire]);\n\n  const formatTime = (seconds: number) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const handleResend = () => {\n    setTimeLeft(duration);\n    setExpired(false);\n    if (onResend) onResend();\n  };\n\n  if (expired) {\n    return (\n      <div className=\"text-center\">\n        <p className=\"text-red-600 text-sm mb-2\">Code expired</p>\n        {canResend && (\n          <button\n            onClick={handleResend}\n            className=\"text-blue-500 hover:underline text-sm\"\n          >\n            Resend code\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"text-center\">\n      <p className=\"text-gray-600 text-sm\">\n        Code expires in{' '}\n        <span className={`font-mono font-bold ${timeLeft < 60 ? 'text-red-600' : 'text-gray-900'}`}>\n          {formatTime(timeLeft)}\n        </span>\n      </p>\n    </div>\n  );\n};","import React, { useState, useEffect } from 'react';\nimport { Modal, ModalHeader, ModalTitle, ModalDescription, ModalBody, ModalFooter } from './Modal';\nimport { Input } from './Input';\nimport { Button } from './Button';\nimport { Text } from './Text';\nimport { OTPInput, OTPTimer } from './OTPInput';\n\nexport interface AuthModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  mode?: 'login' | 'register';\n  workspace?: string;\n  apiUrl?: string;\n  onSuccess?: (user: any, token: string) => void;\n}\n\nexport const AuthModal: React.FC<AuthModalProps> = ({\n  isOpen,\n  onClose,\n  mode: initialMode = 'login',\n  workspace = 'qwanyx-ui',\n  apiUrl = 'http://135.181.72.183:5002',\n  onSuccess\n}) => {\n  const [mode, setMode] = useState(initialMode);\n  const [step, setStep] = useState<'email' | 'code'>('email');\n  const [email, setEmail] = useState('');\n  const [code, setCode] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  // Reset state when modal opens/closes\n  useEffect(() => {\n    if (!isOpen) {\n      // Reset everything when modal closes\n      setStep('email');\n      setEmail('');\n      setCode('');\n      setError('');\n      setSuccess('');\n      setLoading(false);\n    } else {\n      // Reset to initial mode when opening\n      setMode(initialMode);\n    }\n  }, [isOpen, initialMode]);\n\n  const handleSendCode = async () => {\n    // Validate email format\n    const emailRegex = /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/i;\n    if (!emailRegex.test(email)) {\n      setError('Please enter a valid email address');\n      return;\n    }\n    \n    setLoading(true);\n    setError('');\n    \n    try {\n      const endpoint = mode === 'register' ? '/auth/register' : '/auth/request-code';\n      const response = await fetch(`${apiUrl}${endpoint}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          workspace\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (response.ok) {\n        setSuccess(mode === 'register' \n          ? 'Welcome! Check your email for verification code.' \n          : 'Code sent! Check your email.');\n        setStep('code');\n      } else {\n        setError(data.error || 'Failed to send code');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleVerifyCode = async () => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      const response = await fetch(`${apiUrl}/auth/verify-code`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email,\n          code,\n          workspace\n        }),\n      });\n\n      const data = await response.json();\n      \n      if (response.ok) {\n        // Store token\n        localStorage.setItem(`${workspace}_token`, data.access_token);\n        localStorage.setItem(`${workspace}_user`, JSON.stringify(data.user));\n        \n        // Call success callback\n        if (onSuccess) {\n          onSuccess(data.user, data.access_token);\n        }\n        \n        // Reset and close\n        setEmail('');\n        setCode('');\n        setStep('email');\n        onClose();\n      } else {\n        setError(data.error || 'Invalid code');\n      }\n    } catch (err) {\n      setError('Network error. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReset = () => {\n    setStep('email');\n    setCode('');\n    setError('');\n    setSuccess('');\n  };\n\n  const toggleMode = () => {\n    setMode(mode === 'login' ? 'register' : 'login');\n    setStep('email');\n    setError('');\n    setSuccess('');\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      size=\"sm\"\n      showCloseButton={true}\n    >\n      <ModalHeader>\n        <div className=\"flex flex-col items-center mb-6\">\n          <img \n            src=\"/images/logo.png\" \n            alt=\"Logo\" \n            width={60} \n            height={60}\n            className=\"mb-2\"\n            style={{ width: '60px', height: '60px', objectFit: 'contain' }}\n          />\n          <div className=\"text-2xl font-bold text-primary\">\n            {workspace.toUpperCase()}\n          </div>\n        </div>\n        <ModalTitle className=\"text-center\">\n          {mode === 'login' ? 'Sign In' : 'Create Account'}\n        </ModalTitle>\n        <ModalDescription className=\"text-center\">\n          {step === 'email' \n            ? `Enter your email to ${mode === 'login' ? 'sign in' : 'register'}`\n            : 'Enter the code sent to your email'\n          }\n        </ModalDescription>\n      </ModalHeader>\n\n      <ModalBody>\n        <div className=\"space-y-4\">\n          {error && (\n            <div className=\"p-3 bg-red-50 border border-red-200 text-red-700 rounded-md text-sm\">\n              {error}\n            </div>\n          )}\n          \n          {success && (\n            <div className=\"p-3 bg-green-50 border border-green-200 text-green-700 rounded-md text-sm\">\n              {success}\n            </div>\n          )}\n\n          {step === 'email' ? (\n            <>\n              <div style={{ position: 'relative', marginBottom: '8px' }}>\n                <i className=\"fas fa-envelope\" style={{\n                  position: 'absolute',\n                  left: '12px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  color: '#999',\n                  fontSize: '14px',\n                  zIndex: 1\n                }}></i>\n                <Input\n                  type=\"email\"\n                  placeholder=\"Enter your email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  disabled={loading}\n                  fullWidth={true}\n                  style={{ paddingLeft: '2.5rem' }}\n                  error={!!error && step === 'email'}\n                  pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$\"\n                  title=\"Please enter a valid email address\"\n                  required\n                />\n              </div>\n              <Button\n                fullWidth\n                onClick={handleSendCode}\n                loading={loading}\n                disabled={!email}\n                style={{ \n                  backgroundColor: '#E67E22',\n                  color: 'white',\n                  opacity: !email ? 0.6 : 1\n                }}\n              >\n                Send Code\n              </Button>\n            </>\n          ) : (\n            <>\n              <div className=\"text-center text-sm text-gray-600 mb-4\">\n                Code sent to: <strong>{email}</strong>\n              </div>\n              \n              <OTPInput\n                value={code}\n                onChange={setCode}\n                onComplete={() => {\n                  // Auto-submit when all digits are entered\n                  if (code.length === 6) {\n                    handleVerifyCode();\n                  }\n                }}\n                disabled={loading}\n                error={!!error}\n                autoFocus={true}\n              />\n              \n              <div className=\"mt-4\">\n                <OTPTimer\n                  duration={600}\n                  onExpire={() => setError('Code expired. Please request a new one.')}\n                  onResend={handleSendCode}\n                />\n              </div>\n\n              <Button\n                fullWidth\n                onClick={handleVerifyCode}\n                loading={loading}\n                disabled={!code || code.length !== 6}\n                className=\"mt-4\"\n              >\n                Verify Code\n              </Button>\n              \n              <Button\n                fullWidth\n                variant=\"ghost\"\n                onClick={handleReset}\n                disabled={loading}\n              >\n                Use Different Email\n              </Button>\n            </>\n          )}\n        </div>\n      </ModalBody>\n\n      <ModalFooter align=\"center\">\n        <Text size=\"sm\">\n          {mode === 'login' ? \"Don't have an account? \" : \"Already have an account? \"}\n          <button\n            onClick={toggleMode}\n            className=\"text-blue-500 hover:underline\"\n            disabled={loading}\n          >\n            {mode === 'login' ? 'Register' : 'Sign In'}\n          </button>\n        </Text>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\n// Auth Status Component\nexport interface AuthStatusProps {\n  workspace?: string;\n  onLogin?: () => void;\n  onLogout?: () => void;\n}\n\nexport const AuthStatus: React.FC<AuthStatusProps> = ({\n  workspace = 'qwanyx-ui',\n  onLogin,\n  onLogout\n}) => {\n  const userStr = localStorage.getItem(`${workspace}_user`);\n  const user = userStr ? JSON.parse(userStr) : null;\n\n  if (user) {\n    return (\n      <div className=\"flex items-center gap-3\">\n        <Text size=\"sm\">{user.email}</Text>\n        <Button\n          size=\"sm\"\n          variant=\"ghost\"\n          onClick={() => {\n            localStorage.removeItem(`${workspace}_token`);\n            localStorage.removeItem(`${workspace}_user`);\n            if (onLogout) onLogout();\n          }}\n        >\n          Sign Out\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <Button size=\"sm\" onClick={onLogin}>\n      Sign In\n    </Button>\n  );\n};","import { useEffect } from 'react';\n\nexport interface FaviconProps {\n  href?: string;\n  autoDetect?: boolean;\n}\n\nexport const Favicon: React.FC<FaviconProps> = ({ \n  href,\n  autoDetect = true \n}) => {\n  useEffect(() => {\n    // Remove existing favicons\n    const existingFavicons = document.querySelectorAll(\"link[rel*='icon']\");\n    existingFavicons.forEach(favicon => favicon.remove());\n\n    if (href) {\n      // Use specified favicon\n      setFavicon(href);\n    } else if (autoDetect) {\n      // Auto-detect from available logo files\n      const possiblePaths = [\n        '/favicon.ico',\n        '/favicon.svg',\n        '/favicon.png',\n        '/images/logo.svg',\n        '/images/logo.png',\n        '/images/logo.jpg',\n        '/images/logo-icon.svg',\n        '/images/logo-icon.png',\n        '/images/icon.svg',\n        '/images/icon.png'\n      ];\n\n      // Try to find the first available favicon\n      tryNextFavicon(possiblePaths, 0);\n    }\n  }, [href, autoDetect]);\n\n  const tryNextFavicon = (paths: string[], index: number) => {\n    if (index >= paths.length) {\n      // No favicon found, use default or generate from text\n      console.warn('No favicon found, using fallback');\n      generateTextFavicon('Q'); // First letter of QWANYX\n      return;\n    }\n\n    const path = paths[index];\n    const img = new Image();\n    \n    img.onload = () => {\n      setFavicon(path);\n    };\n    \n    img.onerror = () => {\n      tryNextFavicon(paths, index + 1);\n    };\n    \n    img.src = path;\n  };\n\n  const setFavicon = (href: string) => {\n    // Determine type based on extension\n    const extension = href.split('.').pop()?.toLowerCase();\n    let type = 'image/x-icon';\n    \n    if (extension === 'png') type = 'image/png';\n    else if (extension === 'svg') type = 'image/svg+xml';\n    else if (extension === 'jpg' || extension === 'jpeg') type = 'image/jpeg';\n\n    // Create and add favicon link\n    const link = document.createElement('link');\n    link.rel = extension === 'svg' ? 'icon' : 'shortcut icon';\n    link.type = type;\n    link.href = href;\n    document.head.appendChild(link);\n\n    // Also add as apple-touch-icon for iOS if it's not an ico\n    if (extension !== 'ico') {\n      const appleLink = document.createElement('link');\n      appleLink.rel = 'apple-touch-icon';\n      appleLink.href = href;\n      document.head.appendChild(appleLink);\n    }\n  };\n\n  const generateTextFavicon = (text: string) => {\n    // Create a canvas favicon with text\n    const canvas = document.createElement('canvas');\n    canvas.width = 32;\n    canvas.height = 32;\n    const ctx = canvas.getContext('2d');\n    \n    if (ctx) {\n      // Background\n      ctx.fillStyle = '#3B82F6'; // Blue background\n      ctx.fillRect(0, 0, 32, 32);\n      \n      // Text\n      ctx.fillStyle = '#FFFFFF';\n      ctx.font = 'bold 20px Arial';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText(text.charAt(0).toUpperCase(), 16, 16);\n      \n      // Convert to favicon\n      canvas.toBlob((blob) => {\n        if (blob) {\n          const url = URL.createObjectURL(blob);\n          setFavicon(url);\n        }\n      });\n    }\n  };\n\n  return null; // This component doesn't render anything\n};\n\n// Hook version for more control\nexport const useFavicon = (href?: string, options: { autoDetect?: boolean } = {}) => {\n  const { autoDetect = true } = options;\n  \n  useEffect(() => {\n    // Remove existing favicons\n    const existingFavicons = document.querySelectorAll(\"link[rel*='icon']\");\n    existingFavicons.forEach(favicon => favicon.remove());\n\n    if (href) {\n      // Use specified favicon\n      const setFavicon = (faviconHref: string) => {\n        const extension = faviconHref.split('.').pop()?.toLowerCase();\n        let type = 'image/x-icon';\n        \n        if (extension === 'png') type = 'image/png';\n        else if (extension === 'svg') type = 'image/svg+xml';\n        else if (extension === 'jpg' || extension === 'jpeg') type = 'image/jpeg';\n\n        const link = document.createElement('link');\n        link.rel = extension === 'svg' ? 'icon' : 'shortcut icon';\n        link.type = type;\n        link.href = faviconHref;\n        document.head.appendChild(link);\n      };\n      \n      setFavicon(href);\n    } else if (autoDetect) {\n      // Auto-detect logic (simplified for hook)\n      const possiblePaths = [\n        '/favicon.ico',\n        '/favicon.svg',\n        '/favicon.png',\n        '/images/logo.svg',\n        '/images/logo.png',\n        '/images/logo.jpg'\n      ];\n\n      const tryFavicon = (path: string) => {\n        const img = new Image();\n        img.src = path;\n        return new Promise<string>((resolve, reject) => {\n          img.onload = () => resolve(path);\n          img.onerror = reject;\n        });\n      };\n\n      // Try each path until one works\n      Promise.any(possiblePaths.map(tryFavicon))\n        .then((workingPath: string) => {\n          const extension = workingPath.split('.').pop()?.toLowerCase();\n          let type = 'image/x-icon';\n          \n          if (extension === 'png') type = 'image/png';\n          else if (extension === 'svg') type = 'image/svg+xml';\n          else if (extension === 'jpg' || extension === 'jpeg') type = 'image/jpeg';\n\n          const link = document.createElement('link');\n          link.rel = extension === 'svg' ? 'icon' : 'shortcut icon';\n          link.type = type;\n          link.href = workingPath;\n          document.head.appendChild(link);\n        })\n        .catch(() => {\n          console.warn('No favicon found');\n        });\n    }\n  }, [href, autoDetect]);\n};","import{get as e,set as t}from\"react-hook-form\";const r=(t,r,o)=>{if(t&&\"reportValidity\"in t){const s=e(o,r);t.setCustomValidity(s&&s.message||\"\"),t.reportValidity()}},o=(e,t)=>{for(const o in t.fields){const s=t.fields[o];s&&s.ref&&\"reportValidity\"in s.ref?r(s.ref,o,e):s&&s.refs&&s.refs.forEach(t=>r(t,o,e))}},s=(r,s)=>{s.shouldUseNativeValidation&&o(r,s);const n={};for(const o in r){const f=e(s.fields,o),c=Object.assign(r[o]||{},{ref:f&&f.ref});if(i(s.names||Object.keys(r),o)){const r=Object.assign({},e(n,o));t(r,\"root\",c),t(n,o,r)}else t(n,o,c)}return n},i=(e,t)=>{const r=n(t);return e.some(e=>n(e).match(`^${r}\\\\.\\\\d+`))};function n(e){return e.replace(/\\]|\\[/g,\"\")}export{s as toNestErrors,o as validateFieldsNatively};\n//# sourceMappingURL=resolvers.mjs.map\n","/** A special constant with type `never` */\nexport const NEVER = Object.freeze({\n    status: \"aborted\",\n});\nexport /*@__NO_SIDE_EFFECTS__*/ function $constructor(name, initializer, params) {\n    function init(inst, def) {\n        var _a;\n        Object.defineProperty(inst, \"_zod\", {\n            value: inst._zod ?? {},\n            enumerable: false,\n        });\n        (_a = inst._zod).traits ?? (_a.traits = new Set());\n        inst._zod.traits.add(name);\n        initializer(inst, def);\n        // support prototype modifications\n        for (const k in _.prototype) {\n            if (!(k in inst))\n                Object.defineProperty(inst, k, { value: _.prototype[k].bind(inst) });\n        }\n        inst._zod.constr = _;\n        inst._zod.def = def;\n    }\n    // doesn't work if Parent has a constructor with arguments\n    const Parent = params?.Parent ?? Object;\n    class Definition extends Parent {\n    }\n    Object.defineProperty(Definition, \"name\", { value: name });\n    function _(def) {\n        var _a;\n        const inst = params?.Parent ? new Definition() : this;\n        init(inst, def);\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        for (const fn of inst._zod.deferred) {\n            fn();\n        }\n        return inst;\n    }\n    Object.defineProperty(_, \"init\", { value: init });\n    Object.defineProperty(_, Symbol.hasInstance, {\n        value: (inst) => {\n            if (params?.Parent && inst instanceof params.Parent)\n                return true;\n            return inst?._zod?.traits?.has(name);\n        },\n    });\n    Object.defineProperty(_, \"name\", { value: name });\n    return _;\n}\n//////////////////////////////   UTILITIES   ///////////////////////////////////////\nexport const $brand = Symbol(\"zod_brand\");\nexport class $ZodAsyncError extends Error {\n    constructor() {\n        super(`Encountered Promise during synchronous parse. Use .parseAsync() instead.`);\n    }\n}\nexport const globalConfig = {};\nexport function config(newConfig) {\n    if (newConfig)\n        Object.assign(globalConfig, newConfig);\n    return globalConfig;\n}\n","// functions\nexport function assertEqual(val) {\n    return val;\n}\nexport function assertNotEqual(val) {\n    return val;\n}\nexport function assertIs(_arg) { }\nexport function assertNever(_x) {\n    throw new Error();\n}\nexport function assert(_) { }\nexport function getEnumValues(entries) {\n    const numericValues = Object.values(entries).filter((v) => typeof v === \"number\");\n    const values = Object.entries(entries)\n        .filter(([k, _]) => numericValues.indexOf(+k) === -1)\n        .map(([_, v]) => v);\n    return values;\n}\nexport function joinValues(array, separator = \"|\") {\n    return array.map((val) => stringifyPrimitive(val)).join(separator);\n}\nexport function jsonStringifyReplacer(_, value) {\n    if (typeof value === \"bigint\")\n        return value.toString();\n    return value;\n}\nexport function cached(getter) {\n    const set = false;\n    return {\n        get value() {\n            if (!set) {\n                const value = getter();\n                Object.defineProperty(this, \"value\", { value });\n                return value;\n            }\n            throw new Error(\"cached value already set\");\n        },\n    };\n}\nexport function nullish(input) {\n    return input === null || input === undefined;\n}\nexport function cleanRegex(source) {\n    const start = source.startsWith(\"^\") ? 1 : 0;\n    const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n    return source.slice(start, end);\n}\nexport function floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepString = step.toString();\n    let stepDecCount = (stepString.split(\".\")[1] || \"\").length;\n    if (stepDecCount === 0 && /\\d?e-\\d?/.test(stepString)) {\n        const match = stepString.match(/\\d?e-(\\d?)/);\n        if (match?.[1]) {\n            stepDecCount = Number.parseInt(match[1]);\n        }\n    }\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = Number.parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = Number.parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / 10 ** decCount;\n}\nconst EVALUATING = Symbol(\"evaluating\");\nexport function defineLazy(object, key, getter) {\n    let value = undefined;\n    Object.defineProperty(object, key, {\n        get() {\n            if (value === EVALUATING) {\n                // Circular reference detected, return undefined to break the cycle\n                return undefined;\n            }\n            if (value === undefined) {\n                value = EVALUATING;\n                value = getter();\n            }\n            return value;\n        },\n        set(v) {\n            Object.defineProperty(object, key, {\n                value: v,\n                // configurable: true,\n            });\n            // object[key] = v;\n        },\n        configurable: true,\n    });\n}\nexport function objectClone(obj) {\n    return Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\n}\nexport function assignProp(target, prop, value) {\n    Object.defineProperty(target, prop, {\n        value,\n        writable: true,\n        enumerable: true,\n        configurable: true,\n    });\n}\nexport function mergeDefs(...defs) {\n    const mergedDescriptors = {};\n    for (const def of defs) {\n        const descriptors = Object.getOwnPropertyDescriptors(def);\n        Object.assign(mergedDescriptors, descriptors);\n    }\n    return Object.defineProperties({}, mergedDescriptors);\n}\nexport function cloneDef(schema) {\n    return mergeDefs(schema._zod.def);\n}\nexport function getElementAtPath(obj, path) {\n    if (!path)\n        return obj;\n    return path.reduce((acc, key) => acc?.[key], obj);\n}\nexport function promiseAllObject(promisesObj) {\n    const keys = Object.keys(promisesObj);\n    const promises = keys.map((key) => promisesObj[key]);\n    return Promise.all(promises).then((results) => {\n        const resolvedObj = {};\n        for (let i = 0; i < keys.length; i++) {\n            resolvedObj[keys[i]] = results[i];\n        }\n        return resolvedObj;\n    });\n}\nexport function randomString(length = 10) {\n    const chars = \"abcdefghijklmnopqrstuvwxyz\";\n    let str = \"\";\n    for (let i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n    }\n    return str;\n}\nexport function esc(str) {\n    return JSON.stringify(str);\n}\nexport const captureStackTrace = (\"captureStackTrace\" in Error ? Error.captureStackTrace : (..._args) => { });\nexport function isObject(data) {\n    return typeof data === \"object\" && data !== null && !Array.isArray(data);\n}\nexport const allowsEval = cached(() => {\n    // @ts-ignore\n    if (typeof navigator !== \"undefined\" && navigator?.userAgent?.includes(\"Cloudflare\")) {\n        return false;\n    }\n    try {\n        const F = Function;\n        new F(\"\");\n        return true;\n    }\n    catch (_) {\n        return false;\n    }\n});\nexport function isPlainObject(o) {\n    if (isObject(o) === false)\n        return false;\n    // modified constructor\n    const ctor = o.constructor;\n    if (ctor === undefined)\n        return true;\n    // modified prototype\n    const prot = ctor.prototype;\n    if (isObject(prot) === false)\n        return false;\n    // ctor doesn't have static `isPrototypeOf`\n    if (Object.prototype.hasOwnProperty.call(prot, \"isPrototypeOf\") === false) {\n        return false;\n    }\n    return true;\n}\nexport function shallowClone(o) {\n    if (isPlainObject(o))\n        return { ...o };\n    return o;\n}\nexport function numKeys(data) {\n    let keyCount = 0;\n    for (const key in data) {\n        if (Object.prototype.hasOwnProperty.call(data, key)) {\n            keyCount++;\n        }\n    }\n    return keyCount;\n}\nexport const getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return \"undefined\";\n        case \"string\":\n            return \"string\";\n        case \"number\":\n            return Number.isNaN(data) ? \"nan\" : \"number\";\n        case \"boolean\":\n            return \"boolean\";\n        case \"function\":\n            return \"function\";\n        case \"bigint\":\n            return \"bigint\";\n        case \"symbol\":\n            return \"symbol\";\n        case \"object\":\n            if (Array.isArray(data)) {\n                return \"array\";\n            }\n            if (data === null) {\n                return \"null\";\n            }\n            if (data.then && typeof data.then === \"function\" && data.catch && typeof data.catch === \"function\") {\n                return \"promise\";\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return \"map\";\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return \"set\";\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return \"date\";\n            }\n            // @ts-ignore\n            if (typeof File !== \"undefined\" && data instanceof File) {\n                return \"file\";\n            }\n            return \"object\";\n        default:\n            throw new Error(`Unknown data type: ${t}`);\n    }\n};\nexport const propertyKeyTypes = new Set([\"string\", \"number\", \"symbol\"]);\nexport const primitiveTypes = new Set([\"string\", \"number\", \"bigint\", \"boolean\", \"symbol\", \"undefined\"]);\nexport function escapeRegex(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n}\n// zod-specific utils\nexport function clone(inst, def, params) {\n    const cl = new inst._zod.constr(def ?? inst._zod.def);\n    if (!def || params?.parent)\n        cl._zod.parent = inst;\n    return cl;\n}\nexport function normalizeParams(_params) {\n    const params = _params;\n    if (!params)\n        return {};\n    if (typeof params === \"string\")\n        return { error: () => params };\n    if (params?.message !== undefined) {\n        if (params?.error !== undefined)\n            throw new Error(\"Cannot specify both `message` and `error` params\");\n        params.error = params.message;\n    }\n    delete params.message;\n    if (typeof params.error === \"string\")\n        return { ...params, error: () => params.error };\n    return params;\n}\nexport function createTransparentProxy(getter) {\n    let target;\n    return new Proxy({}, {\n        get(_, prop, receiver) {\n            target ?? (target = getter());\n            return Reflect.get(target, prop, receiver);\n        },\n        set(_, prop, value, receiver) {\n            target ?? (target = getter());\n            return Reflect.set(target, prop, value, receiver);\n        },\n        has(_, prop) {\n            target ?? (target = getter());\n            return Reflect.has(target, prop);\n        },\n        deleteProperty(_, prop) {\n            target ?? (target = getter());\n            return Reflect.deleteProperty(target, prop);\n        },\n        ownKeys(_) {\n            target ?? (target = getter());\n            return Reflect.ownKeys(target);\n        },\n        getOwnPropertyDescriptor(_, prop) {\n            target ?? (target = getter());\n            return Reflect.getOwnPropertyDescriptor(target, prop);\n        },\n        defineProperty(_, prop, descriptor) {\n            target ?? (target = getter());\n            return Reflect.defineProperty(target, prop, descriptor);\n        },\n    });\n}\nexport function stringifyPrimitive(value) {\n    if (typeof value === \"bigint\")\n        return value.toString() + \"n\";\n    if (typeof value === \"string\")\n        return `\"${value}\"`;\n    return `${value}`;\n}\nexport function optionalKeys(shape) {\n    return Object.keys(shape).filter((k) => {\n        return shape[k]._zod.optin === \"optional\" && shape[k]._zod.optout === \"optional\";\n    });\n}\nexport const NUMBER_FORMAT_RANGES = {\n    safeint: [Number.MIN_SAFE_INTEGER, Number.MAX_SAFE_INTEGER],\n    int32: [-2147483648, 2147483647],\n    uint32: [0, 4294967295],\n    float32: [-3.4028234663852886e38, 3.4028234663852886e38],\n    float64: [-Number.MAX_VALUE, Number.MAX_VALUE],\n};\nexport const BIGINT_FORMAT_RANGES = {\n    int64: [/* @__PURE__*/ BigInt(\"-9223372036854775808\"), /* @__PURE__*/ BigInt(\"9223372036854775807\")],\n    uint64: [/* @__PURE__*/ BigInt(0), /* @__PURE__*/ BigInt(\"18446744073709551615\")],\n};\nexport function pick(schema, mask) {\n    const currDef = schema._zod.def;\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const newShape = {};\n            for (const key in mask) {\n                if (!(key in currDef.shape)) {\n                    throw new Error(`Unrecognized key: \"${key}\"`);\n                }\n                if (!mask[key])\n                    continue;\n                newShape[key] = currDef.shape[key];\n            }\n            assignProp(this, \"shape\", newShape); // self-caching\n            return newShape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function omit(schema, mask) {\n    const currDef = schema._zod.def;\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const newShape = { ...schema._zod.def.shape };\n            for (const key in mask) {\n                if (!(key in currDef.shape)) {\n                    throw new Error(`Unrecognized key: \"${key}\"`);\n                }\n                if (!mask[key])\n                    continue;\n                delete newShape[key];\n            }\n            assignProp(this, \"shape\", newShape); // self-caching\n            return newShape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function extend(schema, shape) {\n    if (!isPlainObject(shape)) {\n        throw new Error(\"Invalid input to extend: expected a plain object\");\n    }\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const _shape = { ...schema._zod.def.shape, ...shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function merge(a, b) {\n    const def = mergeDefs(a._zod.def, {\n        get shape() {\n            const _shape = { ...a._zod.def.shape, ...b._zod.def.shape };\n            assignProp(this, \"shape\", _shape); // self-caching\n            return _shape;\n        },\n        get catchall() {\n            return b._zod.def.catchall;\n        },\n        checks: [], // delete existing checks\n    });\n    return clone(a, def);\n}\nexport function partial(Class, schema, mask) {\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const oldShape = schema._zod.def.shape;\n            const shape = { ...oldShape };\n            if (mask) {\n                for (const key in mask) {\n                    if (!(key in oldShape)) {\n                        throw new Error(`Unrecognized key: \"${key}\"`);\n                    }\n                    if (!mask[key])\n                        continue;\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\n                    shape[key] = Class\n                        ? new Class({\n                            type: \"optional\",\n                            innerType: oldShape[key],\n                        })\n                        : oldShape[key];\n                }\n            }\n            else {\n                for (const key in oldShape) {\n                    // if (oldShape[key]!._zod.optin === \"optional\") continue;\n                    shape[key] = Class\n                        ? new Class({\n                            type: \"optional\",\n                            innerType: oldShape[key],\n                        })\n                        : oldShape[key];\n                }\n            }\n            assignProp(this, \"shape\", shape); // self-caching\n            return shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\nexport function required(Class, schema, mask) {\n    const def = mergeDefs(schema._zod.def, {\n        get shape() {\n            const oldShape = schema._zod.def.shape;\n            const shape = { ...oldShape };\n            if (mask) {\n                for (const key in mask) {\n                    if (!(key in shape)) {\n                        throw new Error(`Unrecognized key: \"${key}\"`);\n                    }\n                    if (!mask[key])\n                        continue;\n                    // overwrite with non-optional\n                    shape[key] = new Class({\n                        type: \"nonoptional\",\n                        innerType: oldShape[key],\n                    });\n                }\n            }\n            else {\n                for (const key in oldShape) {\n                    // overwrite with non-optional\n                    shape[key] = new Class({\n                        type: \"nonoptional\",\n                        innerType: oldShape[key],\n                    });\n                }\n            }\n            assignProp(this, \"shape\", shape); // self-caching\n            return shape;\n        },\n        checks: [],\n    });\n    return clone(schema, def);\n}\n// invalid_type | too_big | too_small | invalid_format | not_multiple_of | unrecognized_keys | invalid_union | invalid_key | invalid_element | invalid_value | custom\nexport function aborted(x, startIndex = 0) {\n    for (let i = startIndex; i < x.issues.length; i++) {\n        if (x.issues[i]?.continue !== true) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function prefixIssues(path, issues) {\n    return issues.map((iss) => {\n        var _a;\n        (_a = iss).path ?? (_a.path = []);\n        iss.path.unshift(path);\n        return iss;\n    });\n}\nexport function unwrapMessage(message) {\n    return typeof message === \"string\" ? message : message?.message;\n}\nexport function finalizeIssue(iss, ctx, config) {\n    const full = { ...iss, path: iss.path ?? [] };\n    // for backwards compatibility\n    if (!iss.message) {\n        const message = unwrapMessage(iss.inst?._zod.def?.error?.(iss)) ??\n            unwrapMessage(ctx?.error?.(iss)) ??\n            unwrapMessage(config.customError?.(iss)) ??\n            unwrapMessage(config.localeError?.(iss)) ??\n            \"Invalid input\";\n        full.message = message;\n    }\n    // delete (full as any).def;\n    delete full.inst;\n    delete full.continue;\n    if (!ctx?.reportInput) {\n        delete full.input;\n    }\n    return full;\n}\nexport function getSizableOrigin(input) {\n    if (input instanceof Set)\n        return \"set\";\n    if (input instanceof Map)\n        return \"map\";\n    // @ts-ignore\n    if (input instanceof File)\n        return \"file\";\n    return \"unknown\";\n}\nexport function getLengthableOrigin(input) {\n    if (Array.isArray(input))\n        return \"array\";\n    if (typeof input === \"string\")\n        return \"string\";\n    return \"unknown\";\n}\nexport function issue(...args) {\n    const [iss, input, inst] = args;\n    if (typeof iss === \"string\") {\n        return {\n            message: iss,\n            code: \"custom\",\n            input,\n            inst,\n        };\n    }\n    return { ...iss };\n}\nexport function cleanEnum(obj) {\n    return Object.entries(obj)\n        .filter(([k, _]) => {\n        // return true if NaN, meaning it's not a number, thus a string key\n        return Number.isNaN(Number.parseInt(k, 10));\n    })\n        .map((el) => el[1]);\n}\n// instanceof\nexport class Class {\n    constructor(..._args) { }\n}\n","import { $constructor } from \"./core.js\";\nimport * as util from \"./util.js\";\nconst initializer = (inst, def) => {\n    inst.name = \"$ZodError\";\n    Object.defineProperty(inst, \"_zod\", {\n        value: inst._zod,\n        enumerable: false,\n    });\n    Object.defineProperty(inst, \"issues\", {\n        value: def,\n        enumerable: false,\n    });\n    inst.message = JSON.stringify(def, util.jsonStringifyReplacer, 2);\n    Object.defineProperty(inst, \"toString\", {\n        value: () => inst.message,\n        enumerable: false,\n    });\n};\nexport const $ZodError = $constructor(\"$ZodError\", initializer);\nexport const $ZodRealError = $constructor(\"$ZodError\", initializer, { Parent: Error });\nexport function flattenError(error, mapper = (issue) => issue.message) {\n    const fieldErrors = {};\n    const formErrors = [];\n    for (const sub of error.issues) {\n        if (sub.path.length > 0) {\n            fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n            fieldErrors[sub.path[0]].push(mapper(sub));\n        }\n        else {\n            formErrors.push(mapper(sub));\n        }\n    }\n    return { formErrors, fieldErrors };\n}\nexport function formatError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const fieldErrors = { _errors: [] };\n    const processError = (error) => {\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                issue.errors.map((issues) => processError({ issues }));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues });\n            }\n            else if (issue.path.length === 0) {\n                fieldErrors._errors.push(mapper(issue));\n            }\n            else {\n                let curr = fieldErrors;\n                let i = 0;\n                while (i < issue.path.length) {\n                    const el = issue.path[i];\n                    const terminal = i === issue.path.length - 1;\n                    if (!terminal) {\n                        curr[el] = curr[el] || { _errors: [] };\n                    }\n                    else {\n                        curr[el] = curr[el] || { _errors: [] };\n                        curr[el]._errors.push(mapper(issue));\n                    }\n                    curr = curr[el];\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return fieldErrors;\n}\nexport function treeifyError(error, _mapper) {\n    const mapper = _mapper ||\n        function (issue) {\n            return issue.message;\n        };\n    const result = { errors: [] };\n    const processError = (error, path = []) => {\n        var _a, _b;\n        for (const issue of error.issues) {\n            if (issue.code === \"invalid_union\" && issue.errors.length) {\n                // regular union error\n                issue.errors.map((issues) => processError({ issues }, issue.path));\n            }\n            else if (issue.code === \"invalid_key\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else if (issue.code === \"invalid_element\") {\n                processError({ issues: issue.issues }, issue.path);\n            }\n            else {\n                const fullpath = [...path, ...issue.path];\n                if (fullpath.length === 0) {\n                    result.errors.push(mapper(issue));\n                    continue;\n                }\n                let curr = result;\n                let i = 0;\n                while (i < fullpath.length) {\n                    const el = fullpath[i];\n                    const terminal = i === fullpath.length - 1;\n                    if (typeof el === \"string\") {\n                        curr.properties ?? (curr.properties = {});\n                        (_a = curr.properties)[el] ?? (_a[el] = { errors: [] });\n                        curr = curr.properties[el];\n                    }\n                    else {\n                        curr.items ?? (curr.items = []);\n                        (_b = curr.items)[el] ?? (_b[el] = { errors: [] });\n                        curr = curr.items[el];\n                    }\n                    if (terminal) {\n                        curr.errors.push(mapper(issue));\n                    }\n                    i++;\n                }\n            }\n        }\n    };\n    processError(error);\n    return result;\n}\n/** Format a ZodError as a human-readable string in the following form.\n *\n * From\n *\n * ```ts\n * ZodError {\n *   issues: [\n *     {\n *       expected: 'string',\n *       code: 'invalid_type',\n *       path: [ 'username' ],\n *       message: 'Invalid input: expected string'\n *     },\n *     {\n *       expected: 'number',\n *       code: 'invalid_type',\n *       path: [ 'favoriteNumbers', 1 ],\n *       message: 'Invalid input: expected number'\n *     }\n *   ];\n * }\n * ```\n *\n * to\n *\n * ```\n * username\n *   ✖ Expected number, received string at \"username\n * favoriteNumbers[0]\n *   ✖ Invalid input: expected number\n * ```\n */\nexport function toDotPath(_path) {\n    const segs = [];\n    const path = _path.map((seg) => (typeof seg === \"object\" ? seg.key : seg));\n    for (const seg of path) {\n        if (typeof seg === \"number\")\n            segs.push(`[${seg}]`);\n        else if (typeof seg === \"symbol\")\n            segs.push(`[${JSON.stringify(String(seg))}]`);\n        else if (/[^\\w$]/.test(seg))\n            segs.push(`[${JSON.stringify(seg)}]`);\n        else {\n            if (segs.length)\n                segs.push(\".\");\n            segs.push(seg);\n        }\n    }\n    return segs.join(\"\");\n}\nexport function prettifyError(error) {\n    const lines = [];\n    // sort by path length\n    const issues = [...error.issues].sort((a, b) => (a.path ?? []).length - (b.path ?? []).length);\n    // Process each issue\n    for (const issue of issues) {\n        lines.push(`✖ ${issue.message}`);\n        if (issue.path?.length)\n            lines.push(`  → at ${toDotPath(issue.path)}`);\n    }\n    // Convert Map to formatted string\n    return lines.join(\"\\n\");\n}\n","import * as core from \"./core.js\";\nimport * as errors from \"./errors.js\";\nimport * as util from \"./util.js\";\nexport const _parse = (_Err) => (schema, value, _ctx, _params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: false }) : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    if (result.issues.length) {\n        const e = new (_params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, _params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parse = /* @__PURE__*/ _parse(errors.$ZodRealError);\nexport const _parseAsync = (_Err) => async (schema, value, _ctx, params) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    if (result.issues.length) {\n        const e = new (params?.Err ?? _Err)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())));\n        util.captureStackTrace(e, params?.callee);\n        throw e;\n    }\n    return result.value;\n};\nexport const parseAsync = /* @__PURE__*/ _parseAsync(errors.$ZodRealError);\nexport const _safeParse = (_Err) => (schema, value, _ctx) => {\n    const ctx = _ctx ? { ..._ctx, async: false } : { async: false };\n    const result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise) {\n        throw new core.$ZodAsyncError();\n    }\n    return result.issues.length\n        ? {\n            success: false,\n            error: new (_Err ?? errors.$ZodError)(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParse = /* @__PURE__*/ _safeParse(errors.$ZodRealError);\nexport const _safeParseAsync = (_Err) => async (schema, value, _ctx) => {\n    const ctx = _ctx ? Object.assign(_ctx, { async: true }) : { async: true };\n    let result = schema._zod.run({ value, issues: [] }, ctx);\n    if (result instanceof Promise)\n        result = await result;\n    return result.issues.length\n        ? {\n            success: false,\n            error: new _Err(result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n        }\n        : { success: true, data: result.value };\n};\nexport const safeParseAsync = /* @__PURE__*/ _safeParseAsync(errors.$ZodRealError);\n","export const cuid = /^[cC][^\\s-]{8,}$/;\nexport const cuid2 = /^[0-9a-z]+$/;\nexport const ulid = /^[0-9A-HJKMNP-TV-Za-hjkmnp-tv-z]{26}$/;\nexport const xid = /^[0-9a-vA-V]{20}$/;\nexport const ksuid = /^[A-Za-z0-9]{27}$/;\nexport const nanoid = /^[a-zA-Z0-9_-]{21}$/;\n/** ISO 8601-1 duration regex. Does not support the 8601-2 extensions like negative durations or fractional/negative components. */\nexport const duration = /^P(?:(\\d+W)|(?!.*W)(?=\\d|T\\d)(\\d+Y)?(\\d+M)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+([.,]\\d+)?S)?)?)$/;\n/** Implements ISO 8601-2 extensions like explicit +- prefixes, mixing weeks with other units, and fractional/negative components. */\nexport const extendedDuration = /^[-+]?P(?!$)(?:(?:[-+]?\\d+Y)|(?:[-+]?\\d+[.,]\\d+Y$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:(?:[-+]?\\d+W)|(?:[-+]?\\d+[.,]\\d+W$))?(?:(?:[-+]?\\d+D)|(?:[-+]?\\d+[.,]\\d+D$))?(?:T(?=[\\d+-])(?:(?:[-+]?\\d+H)|(?:[-+]?\\d+[.,]\\d+H$))?(?:(?:[-+]?\\d+M)|(?:[-+]?\\d+[.,]\\d+M$))?(?:[-+]?\\d+(?:[.,]\\d+)?S)?)??$/;\n/** A regex for any UUID-like identifier: 8-4-4-4-12 hex pattern */\nexport const guid = /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12})$/;\n/** Returns a regex for validating an RFC 9562/4122 UUID.\n *\n * @param version Optionally specify a version 1-8. If no version is specified, all versions are supported. */\nexport const uuid = (version) => {\n    if (!version)\n        return /^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-8][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}|00000000-0000-0000-0000-000000000000)$/;\n    return new RegExp(`^([0-9a-fA-F]{8}-[0-9a-fA-F]{4}-${version}[0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12})$`);\n};\nexport const uuid4 = /*@__PURE__*/ uuid(4);\nexport const uuid6 = /*@__PURE__*/ uuid(6);\nexport const uuid7 = /*@__PURE__*/ uuid(7);\n/** Practical email validation */\nexport const email = /^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$/;\n/** Equivalent to the HTML5 input[type=email] validation implemented by browsers. Source: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/email */\nexport const html5Email = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/** The classic emailregex.com regex for RFC 5322-compliant emails */\nexport const rfc5322Email = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n/** A loose regex that allows Unicode characters, enforces length limits, and that's about it. */\nexport const unicodeEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const idnEmail = /^[^\\s@\"]{1,64}@[^\\s@]{1,255}$/u;\nexport const browserEmail = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n// from https://thekevinscott.com/emojis-in-javascript/#writing-a-regular-expression\nconst _emoji = `^(\\\\p{Extended_Pictographic}|\\\\p{Emoji_Component})+$`;\nexport function emoji() {\n    return new RegExp(_emoji, \"u\");\n}\nexport const ipv4 = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/;\nexport const ipv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})$/;\nexport const cidrv4 = /^((25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\\/([0-9]|[1-2][0-9]|3[0-2])$/;\nexport const cidrv6 = /^(([0-9a-fA-F]{1,4}:){7}[0-9a-fA-F]{1,4}|::|([0-9a-fA-F]{1,4})?::([0-9a-fA-F]{1,4}:?){0,6})\\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/;\n// https://stackoverflow.com/questions/7860392/determine-if-string-is-in-base64-using-javascript\nexport const base64 = /^$|^(?:[0-9a-zA-Z+/]{4})*(?:(?:[0-9a-zA-Z+/]{2}==)|(?:[0-9a-zA-Z+/]{3}=))?$/;\nexport const base64url = /^[A-Za-z0-9_-]*$/;\n// based on https://stackoverflow.com/questions/106179/regular-expression-to-match-dns-hostname-or-ip-address\n// export const hostname: RegExp = /^([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+$/;\nexport const hostname = /^(?=.{1,253}\\.?$)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[-0-9a-zA-Z]{0,61}[0-9a-zA-Z])?)*\\.?$/;\nexport const domain = /^([a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,}$/;\n// https://blog.stevenlevithan.com/archives/validate-phone-number#r4-3 (regex sans spaces)\nexport const e164 = /^\\+(?:[0-9]){6,14}[0-9]$/;\n// const dateSource = `((\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\\\d|30)|(02)-(0[1-9]|1\\\\d|2[0-8])))`;\nconst dateSource = `(?:(?:\\\\d\\\\d[2468][048]|\\\\d\\\\d[13579][26]|\\\\d\\\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\\\d{4}-(?:(?:0[13578]|1[02])-(?:0[1-9]|[12]\\\\d|3[01])|(?:0[469]|11)-(?:0[1-9]|[12]\\\\d|30)|(?:02)-(?:0[1-9]|1\\\\d|2[0-8])))`;\nexport const date = /*@__PURE__*/ new RegExp(`^${dateSource}$`);\nfunction timeSource(args) {\n    const hhmm = `(?:[01]\\\\d|2[0-3]):[0-5]\\\\d`;\n    const regex = typeof args.precision === \"number\"\n        ? args.precision === -1\n            ? `${hhmm}`\n            : args.precision === 0\n                ? `${hhmm}:[0-5]\\\\d`\n                : `${hhmm}:[0-5]\\\\d\\\\.\\\\d{${args.precision}}`\n        : `${hhmm}(?::[0-5]\\\\d(?:\\\\.\\\\d+)?)?`;\n    return regex;\n}\nexport function time(args) {\n    return new RegExp(`^${timeSource(args)}$`);\n}\n// Adapted from https://stackoverflow.com/a/3143231\nexport function datetime(args) {\n    const time = timeSource({ precision: args.precision });\n    const opts = [\"Z\"];\n    if (args.local)\n        opts.push(\"\");\n    // if (args.offset) opts.push(`([+-]\\\\d{2}:\\\\d{2})`);\n    if (args.offset)\n        opts.push(`([+-](?:[01]\\\\d|2[0-3]):[0-5]\\\\d)`);\n    const timeRegex = `${time}(?:${opts.join(\"|\")})`;\n    return new RegExp(`^${dateSource}T(?:${timeRegex})$`);\n}\nexport const string = (params) => {\n    const regex = params ? `[\\\\s\\\\S]{${params?.minimum ?? 0},${params?.maximum ?? \"\"}}` : `[\\\\s\\\\S]*`;\n    return new RegExp(`^${regex}$`);\n};\nexport const bigint = /^\\d+n?$/;\nexport const integer = /^\\d+$/;\nexport const number = /^-?\\d+(?:\\.\\d+)?/i;\nexport const boolean = /true|false/i;\nconst _null = /null/i;\nexport { _null as null };\nconst _undefined = /undefined/i;\nexport { _undefined as undefined };\n// regex for string with no uppercase letters\nexport const lowercase = /^[^A-Z]*$/;\n// regex for string with no lowercase letters\nexport const uppercase = /^[^a-z]*$/;\n","// import { $ZodType } from \"./schemas.js\";\nimport * as core from \"./core.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nexport const $ZodCheck = /*@__PURE__*/ core.$constructor(\"$ZodCheck\", (inst, def) => {\n    var _a;\n    inst._zod ?? (inst._zod = {});\n    inst._zod.def = def;\n    (_a = inst._zod).onattach ?? (_a.onattach = []);\n});\nconst numericOriginMap = {\n    number: \"number\",\n    bigint: \"bigint\",\n    object: \"date\",\n};\nexport const $ZodCheckLessThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckLessThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.maximum : bag.exclusiveMaximum) ?? Number.POSITIVE_INFINITY;\n        if (def.value < curr) {\n            if (def.inclusive)\n                bag.maximum = def.value;\n            else\n                bag.exclusiveMaximum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value <= def.value : payload.value < def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckGreaterThan = /*@__PURE__*/ core.$constructor(\"$ZodCheckGreaterThan\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const origin = numericOriginMap[typeof def.value];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        const curr = (def.inclusive ? bag.minimum : bag.exclusiveMinimum) ?? Number.NEGATIVE_INFINITY;\n        if (def.value > curr) {\n            if (def.inclusive)\n                bag.minimum = def.value;\n            else\n                bag.exclusiveMinimum = def.value;\n        }\n    });\n    inst._zod.check = (payload) => {\n        if (def.inclusive ? payload.value >= def.value : payload.value > def.value) {\n            return;\n        }\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.value,\n            input: payload.value,\n            inclusive: def.inclusive,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMultipleOf = \n/*@__PURE__*/ core.$constructor(\"$ZodCheckMultipleOf\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        var _a;\n        (_a = inst._zod.bag).multipleOf ?? (_a.multipleOf = def.value);\n    });\n    inst._zod.check = (payload) => {\n        if (typeof payload.value !== typeof def.value)\n            throw new Error(\"Cannot mix number and bigint in multiple_of check.\");\n        const isMultiple = typeof payload.value === \"bigint\"\n            ? payload.value % def.value === BigInt(0)\n            : util.floatSafeRemainder(payload.value, def.value) === 0;\n        if (isMultiple)\n            return;\n        payload.issues.push({\n            origin: typeof payload.value,\n            code: \"not_multiple_of\",\n            divisor: def.value,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckNumberFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    def.format = def.format || \"float64\";\n    const isInt = def.format?.includes(\"int\");\n    const origin = isInt ? \"int\" : \"number\";\n    const [minimum, maximum] = util.NUMBER_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n        if (isInt)\n            bag.pattern = regexes.integer;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (isInt) {\n            if (!Number.isInteger(input)) {\n                // invalid_format issue\n                // payload.issues.push({\n                //   expected: def.format,\n                //   format: def.format,\n                //   code: \"invalid_format\",\n                //   input,\n                //   inst,\n                // });\n                // invalid_type issue\n                payload.issues.push({\n                    expected: origin,\n                    format: def.format,\n                    code: \"invalid_type\",\n                    continue: false,\n                    input,\n                    inst,\n                });\n                return;\n                // not_multiple_of issue\n                // payload.issues.push({\n                //   code: \"not_multiple_of\",\n                //   origin: \"number\",\n                //   input,\n                //   inst,\n                //   divisor: 1,\n                // });\n            }\n            if (!Number.isSafeInteger(input)) {\n                if (input > 0) {\n                    // too_big\n                    payload.issues.push({\n                        input,\n                        code: \"too_big\",\n                        maximum: Number.MAX_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                else {\n                    // too_small\n                    payload.issues.push({\n                        input,\n                        code: \"too_small\",\n                        minimum: Number.MIN_SAFE_INTEGER,\n                        note: \"Integers must be within the safe integer range.\",\n                        inst,\n                        origin,\n                        continue: !def.abort,\n                    });\n                }\n                return;\n            }\n        }\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_small\",\n                minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"number\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckBigIntFormat\", (inst, def) => {\n    $ZodCheck.init(inst, def); // no format checks\n    const [minimum, maximum] = util.BIGINT_FORMAT_RANGES[def.format];\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        bag.minimum = minimum;\n        bag.maximum = maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        if (input < minimum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_small\",\n                minimum: minimum,\n                inclusive: true,\n                inst,\n                continue: !def.abort,\n            });\n        }\n        if (input > maximum) {\n            payload.issues.push({\n                origin: \"bigint\",\n                input,\n                code: \"too_big\",\n                maximum,\n                inst,\n            });\n        }\n    };\n});\nexport const $ZodCheckMaxSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size <= def.maximum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_big\",\n            maximum: def.maximum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinSize = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinSize\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size >= def.minimum)\n            return;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            code: \"too_small\",\n            minimum: def.minimum,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckSizeEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckSizeEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.size !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.size;\n        bag.maximum = def.size;\n        bag.size = def.size;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const size = input.size;\n        if (size === def.size)\n            return;\n        const tooBig = size > def.size;\n        payload.issues.push({\n            origin: util.getSizableOrigin(input),\n            ...(tooBig ? { code: \"too_big\", maximum: def.size } : { code: \"too_small\", minimum: def.size }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMaxLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMaxLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.maximum ?? Number.POSITIVE_INFINITY);\n        if (def.maximum < curr)\n            inst._zod.bag.maximum = def.maximum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length <= def.maximum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_big\",\n            maximum: def.maximum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckMinLength = /*@__PURE__*/ core.$constructor(\"$ZodCheckMinLength\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const curr = (inst._zod.bag.minimum ?? Number.NEGATIVE_INFINITY);\n        if (def.minimum > curr)\n            inst._zod.bag.minimum = def.minimum;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length >= def.minimum)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        payload.issues.push({\n            origin,\n            code: \"too_small\",\n            minimum: def.minimum,\n            inclusive: true,\n            input,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLengthEquals = /*@__PURE__*/ core.$constructor(\"$ZodCheckLengthEquals\", (inst, def) => {\n    var _a;\n    $ZodCheck.init(inst, def);\n    (_a = inst._zod.def).when ?? (_a.when = (payload) => {\n        const val = payload.value;\n        return !util.nullish(val) && val.length !== undefined;\n    });\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.minimum = def.length;\n        bag.maximum = def.length;\n        bag.length = def.length;\n    });\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const length = input.length;\n        if (length === def.length)\n            return;\n        const origin = util.getLengthableOrigin(input);\n        const tooBig = length > def.length;\n        payload.issues.push({\n            origin,\n            ...(tooBig ? { code: \"too_big\", maximum: def.length } : { code: \"too_small\", minimum: def.length }),\n            inclusive: true,\n            exact: true,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCheckStringFormat\", (inst, def) => {\n    var _a, _b;\n    $ZodCheck.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = def.format;\n        if (def.pattern) {\n            bag.patterns ?? (bag.patterns = new Set());\n            bag.patterns.add(def.pattern);\n        }\n    });\n    if (def.pattern)\n        (_a = inst._zod).check ?? (_a.check = (payload) => {\n            def.pattern.lastIndex = 0;\n            if (def.pattern.test(payload.value))\n                return;\n            payload.issues.push({\n                origin: \"string\",\n                code: \"invalid_format\",\n                format: def.format,\n                input: payload.value,\n                ...(def.pattern ? { pattern: def.pattern.toString() } : {}),\n                inst,\n                continue: !def.abort,\n            });\n        });\n    else\n        (_b = inst._zod).check ?? (_b.check = () => { });\n});\nexport const $ZodCheckRegex = /*@__PURE__*/ core.$constructor(\"$ZodCheckRegex\", (inst, def) => {\n    $ZodCheckStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        def.pattern.lastIndex = 0;\n        if (def.pattern.test(payload.value))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"regex\",\n            input: payload.value,\n            pattern: def.pattern.toString(),\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckLowerCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckLowerCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.lowercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckUpperCase = /*@__PURE__*/ core.$constructor(\"$ZodCheckUpperCase\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.uppercase);\n    $ZodCheckStringFormat.init(inst, def);\n});\nexport const $ZodCheckIncludes = /*@__PURE__*/ core.$constructor(\"$ZodCheckIncludes\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const escapedRegex = util.escapeRegex(def.includes);\n    const pattern = new RegExp(typeof def.position === \"number\" ? `^.{${def.position}}${escapedRegex}` : escapedRegex);\n    def.pattern = pattern;\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.includes(def.includes, def.position))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"includes\",\n            includes: def.includes,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckStartsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckStartsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`^${util.escapeRegex(def.prefix)}.*`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.startsWith(def.prefix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"starts_with\",\n            prefix: def.prefix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckEndsWith = /*@__PURE__*/ core.$constructor(\"$ZodCheckEndsWith\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const pattern = new RegExp(`.*${util.escapeRegex(def.suffix)}$`);\n    def.pattern ?? (def.pattern = pattern);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.patterns ?? (bag.patterns = new Set());\n        bag.patterns.add(pattern);\n    });\n    inst._zod.check = (payload) => {\n        if (payload.value.endsWith(def.suffix))\n            return;\n        payload.issues.push({\n            origin: \"string\",\n            code: \"invalid_format\",\n            format: \"ends_with\",\n            suffix: def.suffix,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n///////////////////////////////////\n/////    $ZodCheckProperty    /////\n///////////////////////////////////\nfunction handleCheckPropertyResult(result, payload, property) {\n    if (result.issues.length) {\n        payload.issues.push(...util.prefixIssues(property, result.issues));\n    }\n}\nexport const $ZodCheckProperty = /*@__PURE__*/ core.$constructor(\"$ZodCheckProperty\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        const result = def.schema._zod.run({\n            value: payload.value[def.property],\n            issues: [],\n        }, {});\n        if (result instanceof Promise) {\n            return result.then((result) => handleCheckPropertyResult(result, payload, def.property));\n        }\n        handleCheckPropertyResult(result, payload, def.property);\n        return;\n    };\n});\nexport const $ZodCheckMimeType = /*@__PURE__*/ core.$constructor(\"$ZodCheckMimeType\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    const mimeSet = new Set(def.mime);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.mime = def.mime;\n    });\n    inst._zod.check = (payload) => {\n        if (mimeSet.has(payload.value.type))\n            return;\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.mime,\n            input: payload.value.type,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCheckOverwrite = /*@__PURE__*/ core.$constructor(\"$ZodCheckOverwrite\", (inst, def) => {\n    $ZodCheck.init(inst, def);\n    inst._zod.check = (payload) => {\n        payload.value = def.tx(payload.value);\n    };\n});\n","export class Doc {\n    constructor(args = []) {\n        this.content = [];\n        this.indent = 0;\n        if (this)\n            this.args = args;\n    }\n    indented(fn) {\n        this.indent += 1;\n        fn(this);\n        this.indent -= 1;\n    }\n    write(arg) {\n        if (typeof arg === \"function\") {\n            arg(this, { execution: \"sync\" });\n            arg(this, { execution: \"async\" });\n            return;\n        }\n        const content = arg;\n        const lines = content.split(\"\\n\").filter((x) => x);\n        const minIndent = Math.min(...lines.map((x) => x.length - x.trimStart().length));\n        const dedented = lines.map((x) => x.slice(minIndent)).map((x) => \" \".repeat(this.indent * 2) + x);\n        for (const line of dedented) {\n            this.content.push(line);\n        }\n    }\n    compile() {\n        const F = Function;\n        const args = this?.args;\n        const content = this?.content ?? [``];\n        const lines = [...content.map((x) => `  ${x}`)];\n        // console.log(lines.join(\"\\n\"));\n        return new F(...args, lines.join(\"\\n\"));\n    }\n}\n","export const version = {\n    major: 4,\n    minor: 0,\n    patch: 17,\n};\n","import * as checks from \"./checks.js\";\nimport * as core from \"./core.js\";\nimport { Doc } from \"./doc.js\";\nimport { safeParse, safeParseAsync } from \"./parse.js\";\nimport * as regexes from \"./regexes.js\";\nimport * as util from \"./util.js\";\nimport { version } from \"./versions.js\";\nexport const $ZodType = /*@__PURE__*/ core.$constructor(\"$ZodType\", (inst, def) => {\n    var _a;\n    inst ?? (inst = {});\n    inst._zod.def = def; // set _def property\n    inst._zod.bag = inst._zod.bag || {}; // initialize _bag object\n    inst._zod.version = version;\n    const checks = [...(inst._zod.def.checks ?? [])];\n    // if inst is itself a checks.$ZodCheck, run it as a check\n    if (inst._zod.traits.has(\"$ZodCheck\")) {\n        checks.unshift(inst);\n    }\n    //\n    for (const ch of checks) {\n        for (const fn of ch._zod.onattach) {\n            fn(inst);\n        }\n    }\n    if (checks.length === 0) {\n        // deferred initializer\n        // inst._zod.parse is not yet defined\n        (_a = inst._zod).deferred ?? (_a.deferred = []);\n        inst._zod.deferred?.push(() => {\n            inst._zod.run = inst._zod.parse;\n        });\n    }\n    else {\n        const runChecks = (payload, checks, ctx) => {\n            let isAborted = util.aborted(payload);\n            let asyncResult;\n            for (const ch of checks) {\n                if (ch._zod.def.when) {\n                    const shouldRun = ch._zod.def.when(payload);\n                    if (!shouldRun)\n                        continue;\n                }\n                else if (isAborted) {\n                    continue;\n                }\n                const currLen = payload.issues.length;\n                const _ = ch._zod.check(payload);\n                if (_ instanceof Promise && ctx?.async === false) {\n                    throw new core.$ZodAsyncError();\n                }\n                if (asyncResult || _ instanceof Promise) {\n                    asyncResult = (asyncResult ?? Promise.resolve()).then(async () => {\n                        await _;\n                        const nextLen = payload.issues.length;\n                        if (nextLen === currLen)\n                            return;\n                        if (!isAborted)\n                            isAborted = util.aborted(payload, currLen);\n                    });\n                }\n                else {\n                    const nextLen = payload.issues.length;\n                    if (nextLen === currLen)\n                        continue;\n                    if (!isAborted)\n                        isAborted = util.aborted(payload, currLen);\n                }\n            }\n            if (asyncResult) {\n                return asyncResult.then(() => {\n                    return payload;\n                });\n            }\n            return payload;\n        };\n        inst._zod.run = (payload, ctx) => {\n            const result = inst._zod.parse(payload, ctx);\n            if (result instanceof Promise) {\n                if (ctx.async === false)\n                    throw new core.$ZodAsyncError();\n                return result.then((result) => runChecks(result, checks, ctx));\n            }\n            return runChecks(result, checks, ctx);\n        };\n    }\n    inst[\"~standard\"] = {\n        validate: (value) => {\n            try {\n                const r = safeParse(inst, value);\n                return r.success ? { value: r.data } : { issues: r.error?.issues };\n            }\n            catch (_) {\n                return safeParseAsync(inst, value).then((r) => (r.success ? { value: r.data } : { issues: r.error?.issues }));\n            }\n        },\n        vendor: \"zod\",\n        version: 1,\n    };\n});\nexport { clone } from \"./util.js\";\nexport const $ZodString = /*@__PURE__*/ core.$constructor(\"$ZodString\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = [...(inst?._zod.bag?.patterns ?? [])].pop() ?? regexes.string(inst._zod.bag);\n    inst._zod.parse = (payload, _) => {\n        if (def.coerce)\n            try {\n                payload.value = String(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"string\")\n            return payload;\n        payload.issues.push({\n            expected: \"string\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodStringFormat\", (inst, def) => {\n    // check initialization must come first\n    checks.$ZodCheckStringFormat.init(inst, def);\n    $ZodString.init(inst, def);\n});\nexport const $ZodGUID = /*@__PURE__*/ core.$constructor(\"$ZodGUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.guid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodUUID = /*@__PURE__*/ core.$constructor(\"$ZodUUID\", (inst, def) => {\n    if (def.version) {\n        const versionMap = {\n            v1: 1,\n            v2: 2,\n            v3: 3,\n            v4: 4,\n            v5: 5,\n            v6: 6,\n            v7: 7,\n            v8: 8,\n        };\n        const v = versionMap[def.version];\n        if (v === undefined)\n            throw new Error(`Invalid UUID version: \"${def.version}\"`);\n        def.pattern ?? (def.pattern = regexes.uuid(v));\n    }\n    else\n        def.pattern ?? (def.pattern = regexes.uuid());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodEmail = /*@__PURE__*/ core.$constructor(\"$ZodEmail\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.email);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodURL = /*@__PURE__*/ core.$constructor(\"$ZodURL\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        try {\n            // Trim whitespace from input\n            const trimmed = payload.value.trim();\n            // @ts-ignore\n            const url = new URL(trimmed);\n            if (def.hostname) {\n                def.hostname.lastIndex = 0;\n                if (!def.hostname.test(url.hostname)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid hostname\",\n                        pattern: regexes.hostname.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            if (def.protocol) {\n                def.protocol.lastIndex = 0;\n                if (!def.protocol.test(url.protocol.endsWith(\":\") ? url.protocol.slice(0, -1) : url.protocol)) {\n                    payload.issues.push({\n                        code: \"invalid_format\",\n                        format: \"url\",\n                        note: \"Invalid protocol\",\n                        pattern: def.protocol.source,\n                        input: payload.value,\n                        inst,\n                        continue: !def.abort,\n                    });\n                }\n            }\n            // Set the output value based on normalize flag\n            if (def.normalize) {\n                // Use normalized URL\n                payload.value = url.href;\n            }\n            else {\n                // Preserve the original input (trimmed)\n                payload.value = trimmed;\n            }\n            return;\n        }\n        catch (_) {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"url\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodEmoji = /*@__PURE__*/ core.$constructor(\"$ZodEmoji\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.emoji());\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodNanoID = /*@__PURE__*/ core.$constructor(\"$ZodNanoID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.nanoid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID = /*@__PURE__*/ core.$constructor(\"$ZodCUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCUID2 = /*@__PURE__*/ core.$constructor(\"$ZodCUID2\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cuid2);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodULID = /*@__PURE__*/ core.$constructor(\"$ZodULID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ulid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodXID = /*@__PURE__*/ core.$constructor(\"$ZodXID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.xid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodKSUID = /*@__PURE__*/ core.$constructor(\"$ZodKSUID\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ksuid);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODateTime = /*@__PURE__*/ core.$constructor(\"$ZodISODateTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.datetime(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODate = /*@__PURE__*/ core.$constructor(\"$ZodISODate\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.date);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISOTime = /*@__PURE__*/ core.$constructor(\"$ZodISOTime\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.time(def));\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodISODuration = /*@__PURE__*/ core.$constructor(\"$ZodISODuration\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.duration);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodIPv4 = /*@__PURE__*/ core.$constructor(\"$ZodIPv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv4);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv4`;\n    });\n});\nexport const $ZodIPv6 = /*@__PURE__*/ core.$constructor(\"$ZodIPv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.ipv6);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        const bag = inst._zod.bag;\n        bag.format = `ipv6`;\n    });\n    inst._zod.check = (payload) => {\n        try {\n            // @ts-ignore\n            new URL(`http://[${payload.value}]`);\n            // return;\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"ipv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\nexport const $ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv4\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv4);\n    $ZodStringFormat.init(inst, def);\n});\nexport const $ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"$ZodCIDRv6\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.cidrv6); // not used for validation\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        const [address, prefix] = payload.value.split(\"/\");\n        try {\n            if (!prefix)\n                throw new Error();\n            const prefixNum = Number(prefix);\n            if (`${prefixNum}` !== prefix)\n                throw new Error();\n            if (prefixNum < 0 || prefixNum > 128)\n                throw new Error();\n            // @ts-ignore\n            new URL(`http://[${address}]`);\n        }\n        catch {\n            payload.issues.push({\n                code: \"invalid_format\",\n                format: \"cidrv6\",\n                input: payload.value,\n                inst,\n                continue: !def.abort,\n            });\n        }\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64(data) {\n    if (data === \"\")\n        return true;\n    if (data.length % 4 !== 0)\n        return false;\n    try {\n        // @ts-ignore\n        atob(data);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodBase64 = /*@__PURE__*/ core.$constructor(\"$ZodBase64\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\n//////////////////////////////   ZodBase64   //////////////////////////////\nexport function isValidBase64URL(data) {\n    if (!regexes.base64url.test(data))\n        return false;\n    const base64 = data.replace(/[-_]/g, (c) => (c === \"-\" ? \"+\" : \"/\"));\n    const padded = base64.padEnd(Math.ceil(base64.length / 4) * 4, \"=\");\n    return isValidBase64(padded);\n}\nexport const $ZodBase64URL = /*@__PURE__*/ core.$constructor(\"$ZodBase64URL\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.base64url);\n    $ZodStringFormat.init(inst, def);\n    inst._zod.onattach.push((inst) => {\n        inst._zod.bag.contentEncoding = \"base64url\";\n    });\n    inst._zod.check = (payload) => {\n        if (isValidBase64URL(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"base64url\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodE164 = /*@__PURE__*/ core.$constructor(\"$ZodE164\", (inst, def) => {\n    def.pattern ?? (def.pattern = regexes.e164);\n    $ZodStringFormat.init(inst, def);\n});\n//////////////////////////////   ZodJWT   //////////////////////////////\nexport function isValidJWT(token, algorithm = null) {\n    try {\n        const tokensParts = token.split(\".\");\n        if (tokensParts.length !== 3)\n            return false;\n        const [header] = tokensParts;\n        if (!header)\n            return false;\n        // @ts-ignore\n        const parsedHeader = JSON.parse(atob(header));\n        if (\"typ\" in parsedHeader && parsedHeader?.typ !== \"JWT\")\n            return false;\n        if (!parsedHeader.alg)\n            return false;\n        if (algorithm && (!(\"alg\" in parsedHeader) || parsedHeader.alg !== algorithm))\n            return false;\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\nexport const $ZodJWT = /*@__PURE__*/ core.$constructor(\"$ZodJWT\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (isValidJWT(payload.value, def.alg))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: \"jwt\",\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"$ZodCustomStringFormat\", (inst, def) => {\n    $ZodStringFormat.init(inst, def);\n    inst._zod.check = (payload) => {\n        if (def.fn(payload.value))\n            return;\n        payload.issues.push({\n            code: \"invalid_format\",\n            format: def.format,\n            input: payload.value,\n            inst,\n            continue: !def.abort,\n        });\n    };\n});\nexport const $ZodNumber = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = inst._zod.bag.pattern ?? regexes.number;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Number(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"number\" && !Number.isNaN(input) && Number.isFinite(input)) {\n            return payload;\n        }\n        const received = typeof input === \"number\"\n            ? Number.isNaN(input)\n                ? \"NaN\"\n                : !Number.isFinite(input)\n                    ? \"Infinity\"\n                    : undefined\n            : undefined;\n        payload.issues.push({\n            expected: \"number\",\n            code: \"invalid_type\",\n            input,\n            inst,\n            ...(received ? { received } : {}),\n        });\n        return payload;\n    };\n});\nexport const $ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"$ZodNumber\", (inst, def) => {\n    checks.$ZodCheckNumberFormat.init(inst, def);\n    $ZodNumber.init(inst, def); // no format checksp\n});\nexport const $ZodBoolean = /*@__PURE__*/ core.$constructor(\"$ZodBoolean\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.boolean;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = Boolean(payload.value);\n            }\n            catch (_) { }\n        const input = payload.value;\n        if (typeof input === \"boolean\")\n            return payload;\n        payload.issues.push({\n            expected: \"boolean\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigInt = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.bigint;\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce)\n            try {\n                payload.value = BigInt(payload.value);\n            }\n            catch (_) { }\n        if (typeof payload.value === \"bigint\")\n            return payload;\n        payload.issues.push({\n            expected: \"bigint\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"$ZodBigInt\", (inst, def) => {\n    checks.$ZodCheckBigIntFormat.init(inst, def);\n    $ZodBigInt.init(inst, def); // no format checks\n});\nexport const $ZodSymbol = /*@__PURE__*/ core.$constructor(\"$ZodSymbol\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"symbol\")\n            return payload;\n        payload.issues.push({\n            expected: \"symbol\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodUndefined = /*@__PURE__*/ core.$constructor(\"$ZodUndefined\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.undefined;\n    inst._zod.values = new Set([undefined]);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"undefined\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodNull = /*@__PURE__*/ core.$constructor(\"$ZodNull\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.pattern = regexes.null;\n    inst._zod.values = new Set([null]);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (input === null)\n            return payload;\n        payload.issues.push({\n            expected: \"null\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodAny = /*@__PURE__*/ core.$constructor(\"$ZodAny\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodUnknown = /*@__PURE__*/ core.$constructor(\"$ZodUnknown\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload) => payload;\n});\nexport const $ZodNever = /*@__PURE__*/ core.$constructor(\"$ZodNever\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.issues.push({\n            expected: \"never\",\n            code: \"invalid_type\",\n            input: payload.value,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodVoid = /*@__PURE__*/ core.$constructor(\"$ZodVoid\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (typeof input === \"undefined\")\n            return payload;\n        payload.issues.push({\n            expected: \"void\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodDate = /*@__PURE__*/ core.$constructor(\"$ZodDate\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (def.coerce) {\n            try {\n                payload.value = new Date(payload.value);\n            }\n            catch (_err) { }\n        }\n        const input = payload.value;\n        const isDate = input instanceof Date;\n        const isValidDate = isDate && !Number.isNaN(input.getTime());\n        if (isValidDate)\n            return payload;\n        payload.issues.push({\n            expected: \"date\",\n            code: \"invalid_type\",\n            input,\n            ...(isDate ? { received: \"Invalid Date\" } : {}),\n            inst,\n        });\n        return payload;\n    };\n});\nfunction handleArrayResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodArray = /*@__PURE__*/ core.$constructor(\"$ZodArray\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                expected: \"array\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        payload.value = Array(input.length);\n        const proms = [];\n        for (let i = 0; i < input.length; i++) {\n            const item = input[i];\n            const result = def.element._zod.run({\n                value: item,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleArrayResult(result, payload, i)));\n            }\n            else {\n                handleArrayResult(result, payload, i);\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload; //handleArrayResultsAsync(parseResults, final);\n    };\n});\nfunction handlePropertyResult(result, final, key, input) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(key, result.issues));\n    }\n    if (result.value === undefined) {\n        if (key in input) {\n            final.value[key] = undefined;\n        }\n    }\n    else {\n        final.value[key] = result.value;\n    }\n}\nexport const $ZodObject = /*@__PURE__*/ core.$constructor(\"$ZodObject\", (inst, def) => {\n    // requires cast because technically $ZodObject doesn't extend\n    $ZodType.init(inst, def);\n    const _normalized = util.cached(() => {\n        const keys = Object.keys(def.shape);\n        for (const k of keys) {\n            if (!def.shape[k]._zod.traits.has(\"$ZodType\")) {\n                throw new Error(`Invalid element at key \"${k}\": expected a Zod schema`);\n            }\n        }\n        const okeys = util.optionalKeys(def.shape);\n        return {\n            shape: def.shape,\n            keys,\n            keySet: new Set(keys),\n            numKeys: keys.length,\n            optionalKeys: new Set(okeys),\n        };\n    });\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const shape = def.shape;\n        const propValues = {};\n        for (const key in shape) {\n            const field = shape[key]._zod;\n            if (field.values) {\n                propValues[key] ?? (propValues[key] = new Set());\n                for (const v of field.values)\n                    propValues[key].add(v);\n            }\n        }\n        return propValues;\n    });\n    const generateFastpass = (shape) => {\n        const doc = new Doc([\"shape\", \"payload\", \"ctx\"]);\n        const normalized = _normalized.value;\n        const parseStr = (key) => {\n            const k = util.esc(key);\n            return `shape[${k}]._zod.run({ value: input[${k}], issues: [] }, ctx)`;\n        };\n        doc.write(`const input = payload.value;`);\n        const ids = Object.create(null);\n        let counter = 0;\n        for (const key of normalized.keys) {\n            ids[key] = `key_${counter++}`;\n        }\n        // A: preserve key order {\n        doc.write(`const newResult = {}`);\n        for (const key of normalized.keys) {\n            const id = ids[key];\n            const k = util.esc(key);\n            doc.write(`const ${id} = ${parseStr(key)};`);\n            doc.write(`\n        if (${id}.issues.length) {\n          payload.issues = payload.issues.concat(${id}.issues.map(iss => ({\n            ...iss,\n            path: iss.path ? [${k}, ...iss.path] : [${k}]\n          })));\n        }\n        \n        if (${id}.value === undefined) {\n          if (${k} in input) {\n            newResult[${k}] = undefined;\n          }\n        } else {\n          newResult[${k}] = ${id}.value;\n        }\n      `);\n        }\n        doc.write(`payload.value = newResult;`);\n        doc.write(`return payload;`);\n        const fn = doc.compile();\n        return (payload, ctx) => fn(shape, payload, ctx);\n    };\n    let fastpass;\n    const isObject = util.isObject;\n    const jit = !core.globalConfig.jitless;\n    const allowsEval = util.allowsEval;\n    const fastEnabled = jit && allowsEval.value; // && !def.catchall;\n    const catchall = def.catchall;\n    let value;\n    inst._zod.parse = (payload, ctx) => {\n        value ?? (value = _normalized.value);\n        const input = payload.value;\n        if (!isObject(input)) {\n            payload.issues.push({\n                expected: \"object\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (jit && fastEnabled && ctx?.async === false && ctx.jitless !== true) {\n            // always synchronous\n            if (!fastpass)\n                fastpass = generateFastpass(def.shape);\n            payload = fastpass(payload, ctx);\n        }\n        else {\n            payload.value = {};\n            const shape = value.shape;\n            for (const key of value.keys) {\n                const el = shape[key];\n                const r = el._zod.run({ value: input[key], issues: [] }, ctx);\n                if (r instanceof Promise) {\n                    proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\n                }\n                else {\n                    handlePropertyResult(r, payload, key, input);\n                }\n            }\n        }\n        if (!catchall) {\n            return proms.length ? Promise.all(proms).then(() => payload) : payload;\n        }\n        const unrecognized = [];\n        // iterate over input keys\n        const keySet = value.keySet;\n        const _catchall = catchall._zod;\n        const t = _catchall.def.type;\n        for (const key of Object.keys(input)) {\n            if (keySet.has(key))\n                continue;\n            if (t === \"never\") {\n                unrecognized.push(key);\n                continue;\n            }\n            const r = _catchall.run({ value: input[key], issues: [] }, ctx);\n            if (r instanceof Promise) {\n                proms.push(r.then((r) => handlePropertyResult(r, payload, key, input)));\n            }\n            else {\n                handlePropertyResult(r, payload, key, input);\n            }\n        }\n        if (unrecognized.length) {\n            payload.issues.push({\n                code: \"unrecognized_keys\",\n                keys: unrecognized,\n                input,\n                inst,\n            });\n        }\n        if (!proms.length)\n            return payload;\n        return Promise.all(proms).then(() => {\n            return payload;\n        });\n    };\n});\nfunction handleUnionResults(results, final, inst, ctx) {\n    for (const result of results) {\n        if (result.issues.length === 0) {\n            final.value = result.value;\n            return final;\n        }\n    }\n    const nonaborted = results.filter((r) => !util.aborted(r));\n    if (nonaborted.length === 1) {\n        final.value = nonaborted[0].value;\n        return nonaborted[0];\n    }\n    final.issues.push({\n        code: \"invalid_union\",\n        input: final.value,\n        inst,\n        errors: results.map((result) => result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config()))),\n    });\n    return final;\n}\nexport const $ZodUnion = /*@__PURE__*/ core.$constructor(\"$ZodUnion\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.options.some((o) => o._zod.optin === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"optout\", () => def.options.some((o) => o._zod.optout === \"optional\") ? \"optional\" : undefined);\n    util.defineLazy(inst._zod, \"values\", () => {\n        if (def.options.every((o) => o._zod.values)) {\n            return new Set(def.options.flatMap((option) => Array.from(option._zod.values)));\n        }\n        return undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        if (def.options.every((o) => o._zod.pattern)) {\n            const patterns = def.options.map((o) => o._zod.pattern);\n            return new RegExp(`^(${patterns.map((p) => util.cleanRegex(p.source)).join(\"|\")})$`);\n        }\n        return undefined;\n    });\n    const single = def.options.length === 1;\n    const first = def.options[0]._zod.run;\n    inst._zod.parse = (payload, ctx) => {\n        if (single) {\n            return first(payload, ctx);\n        }\n        let async = false;\n        const results = [];\n        for (const option of def.options) {\n            const result = option._zod.run({\n                value: payload.value,\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                results.push(result);\n                async = true;\n            }\n            else {\n                if (result.issues.length === 0)\n                    return result;\n                results.push(result);\n            }\n        }\n        if (!async)\n            return handleUnionResults(results, payload, inst, ctx);\n        return Promise.all(results).then((results) => {\n            return handleUnionResults(results, payload, inst, ctx);\n        });\n    };\n});\nexport const $ZodDiscriminatedUnion = \n/*@__PURE__*/\ncore.$constructor(\"$ZodDiscriminatedUnion\", (inst, def) => {\n    $ZodUnion.init(inst, def);\n    const _super = inst._zod.parse;\n    util.defineLazy(inst._zod, \"propValues\", () => {\n        const propValues = {};\n        for (const option of def.options) {\n            const pv = option._zod.propValues;\n            if (!pv || Object.keys(pv).length === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(option)}\"`);\n            for (const [k, v] of Object.entries(pv)) {\n                if (!propValues[k])\n                    propValues[k] = new Set();\n                for (const val of v) {\n                    propValues[k].add(val);\n                }\n            }\n        }\n        return propValues;\n    });\n    const disc = util.cached(() => {\n        const opts = def.options;\n        const map = new Map();\n        for (const o of opts) {\n            const values = o._zod.propValues?.[def.discriminator];\n            if (!values || values.size === 0)\n                throw new Error(`Invalid discriminated union option at index \"${def.options.indexOf(o)}\"`);\n            for (const v of values) {\n                if (map.has(v)) {\n                    throw new Error(`Duplicate discriminator value \"${String(v)}\"`);\n                }\n                map.set(v, o);\n            }\n        }\n        return map;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isObject(input)) {\n            payload.issues.push({\n                code: \"invalid_type\",\n                expected: \"object\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const opt = disc.value.get(input?.[def.discriminator]);\n        if (opt) {\n            return opt._zod.run(payload, ctx);\n        }\n        if (def.unionFallback) {\n            return _super(payload, ctx);\n        }\n        // no matching discriminator\n        payload.issues.push({\n            code: \"invalid_union\",\n            errors: [],\n            note: \"No matching discriminator\",\n            discriminator: def.discriminator,\n            input,\n            path: [def.discriminator],\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodIntersection = /*@__PURE__*/ core.$constructor(\"$ZodIntersection\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        const left = def.left._zod.run({ value: input, issues: [] }, ctx);\n        const right = def.right._zod.run({ value: input, issues: [] }, ctx);\n        const async = left instanceof Promise || right instanceof Promise;\n        if (async) {\n            return Promise.all([left, right]).then(([left, right]) => {\n                return handleIntersectionResults(payload, left, right);\n            });\n        }\n        return handleIntersectionResults(payload, left, right);\n    };\n});\nfunction mergeValues(a, b) {\n    // const aType = parse.t(a);\n    // const bType = parse.t(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    if (a instanceof Date && b instanceof Date && +a === +b) {\n        return { valid: true, data: a };\n    }\n    if (util.isPlainObject(a) && util.isPlainObject(b)) {\n        const bKeys = Object.keys(b);\n        const sharedKeys = Object.keys(a).filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [key, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    if (Array.isArray(a) && Array.isArray(b)) {\n        if (a.length !== b.length) {\n            return { valid: false, mergeErrorPath: [] };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return {\n                    valid: false,\n                    mergeErrorPath: [index, ...sharedValue.mergeErrorPath],\n                };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    return { valid: false, mergeErrorPath: [] };\n}\nfunction handleIntersectionResults(result, left, right) {\n    if (left.issues.length) {\n        result.issues.push(...left.issues);\n    }\n    if (right.issues.length) {\n        result.issues.push(...right.issues);\n    }\n    if (util.aborted(result))\n        return result;\n    const merged = mergeValues(left.value, right.value);\n    if (!merged.valid) {\n        throw new Error(`Unmergable intersection. Error path: ` + `${JSON.stringify(merged.mergeErrorPath)}`);\n    }\n    result.value = merged.data;\n    return result;\n}\nexport const $ZodTuple = /*@__PURE__*/ core.$constructor(\"$ZodTuple\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const items = def.items;\n    const optStart = items.length - [...items].reverse().findIndex((item) => item._zod.optin !== \"optional\");\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!Array.isArray(input)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"tuple\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        payload.value = [];\n        const proms = [];\n        if (!def.rest) {\n            const tooBig = input.length > items.length;\n            const tooSmall = input.length < optStart - 1;\n            if (tooBig || tooSmall) {\n                payload.issues.push({\n                    ...(tooBig ? { code: \"too_big\", maximum: items.length } : { code: \"too_small\", minimum: items.length }),\n                    input,\n                    inst,\n                    origin: \"array\",\n                });\n                return payload;\n            }\n        }\n        let i = -1;\n        for (const item of items) {\n            i++;\n            if (i >= input.length)\n                if (i >= optStart)\n                    continue;\n            const result = item._zod.run({\n                value: input[i],\n                issues: [],\n            }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n            }\n            else {\n                handleTupleResult(result, payload, i);\n            }\n        }\n        if (def.rest) {\n            const rest = input.slice(items.length);\n            for (const el of rest) {\n                i++;\n                const result = def.rest._zod.run({\n                    value: el,\n                    issues: [],\n                }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => handleTupleResult(result, payload, i)));\n                }\n                else {\n                    handleTupleResult(result, payload, i);\n                }\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleTupleResult(result, final, index) {\n    if (result.issues.length) {\n        final.issues.push(...util.prefixIssues(index, result.issues));\n    }\n    final.value[index] = result.value;\n}\nexport const $ZodRecord = /*@__PURE__*/ core.$constructor(\"$ZodRecord\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!util.isPlainObject(input)) {\n            payload.issues.push({\n                expected: \"record\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        if (def.keyType._zod.values) {\n            const values = def.keyType._zod.values;\n            payload.value = {};\n            for (const key of values) {\n                if (typeof key === \"string\" || typeof key === \"number\" || typeof key === \"symbol\") {\n                    const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                    if (result instanceof Promise) {\n                        proms.push(result.then((result) => {\n                            if (result.issues.length) {\n                                payload.issues.push(...util.prefixIssues(key, result.issues));\n                            }\n                            payload.value[key] = result.value;\n                        }));\n                    }\n                    else {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[key] = result.value;\n                    }\n                }\n            }\n            let unrecognized;\n            for (const key in input) {\n                if (!values.has(key)) {\n                    unrecognized = unrecognized ?? [];\n                    unrecognized.push(key);\n                }\n            }\n            if (unrecognized && unrecognized.length > 0) {\n                payload.issues.push({\n                    code: \"unrecognized_keys\",\n                    input,\n                    inst,\n                    keys: unrecognized,\n                });\n            }\n        }\n        else {\n            payload.value = {};\n            for (const key of Reflect.ownKeys(input)) {\n                if (key === \"__proto__\")\n                    continue;\n                const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n                if (keyResult instanceof Promise) {\n                    throw new Error(\"Async schemas not supported in object keys currently\");\n                }\n                if (keyResult.issues.length) {\n                    payload.issues.push({\n                        code: \"invalid_key\",\n                        origin: \"record\",\n                        issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        input: key,\n                        path: [key],\n                        inst,\n                    });\n                    payload.value[keyResult.value] = keyResult.value;\n                    continue;\n                }\n                const result = def.valueType._zod.run({ value: input[key], issues: [] }, ctx);\n                if (result instanceof Promise) {\n                    proms.push(result.then((result) => {\n                        if (result.issues.length) {\n                            payload.issues.push(...util.prefixIssues(key, result.issues));\n                        }\n                        payload.value[keyResult.value] = result.value;\n                    }));\n                }\n                else {\n                    if (result.issues.length) {\n                        payload.issues.push(...util.prefixIssues(key, result.issues));\n                    }\n                    payload.value[keyResult.value] = result.value;\n                }\n            }\n        }\n        if (proms.length) {\n            return Promise.all(proms).then(() => payload);\n        }\n        return payload;\n    };\n});\nexport const $ZodMap = /*@__PURE__*/ core.$constructor(\"$ZodMap\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Map)) {\n            payload.issues.push({\n                expected: \"map\",\n                code: \"invalid_type\",\n                input,\n                inst,\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Map();\n        for (const [key, value] of input) {\n            const keyResult = def.keyType._zod.run({ value: key, issues: [] }, ctx);\n            const valueResult = def.valueType._zod.run({ value: value, issues: [] }, ctx);\n            if (keyResult instanceof Promise || valueResult instanceof Promise) {\n                proms.push(Promise.all([keyResult, valueResult]).then(([keyResult, valueResult]) => {\n                    handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n                }));\n            }\n            else {\n                handleMapResult(keyResult, valueResult, payload, key, input, inst, ctx);\n            }\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleMapResult(keyResult, valueResult, final, key, input, inst, ctx) {\n    if (keyResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, keyResult.issues));\n        }\n        else {\n            final.issues.push({\n                code: \"invalid_key\",\n                origin: \"map\",\n                input,\n                inst,\n                issues: keyResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    if (valueResult.issues.length) {\n        if (util.propertyKeyTypes.has(typeof key)) {\n            final.issues.push(...util.prefixIssues(key, valueResult.issues));\n        }\n        else {\n            final.issues.push({\n                origin: \"map\",\n                code: \"invalid_element\",\n                input,\n                inst,\n                key: key,\n                issues: valueResult.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n            });\n        }\n    }\n    final.value.set(keyResult.value, valueResult.value);\n}\nexport const $ZodSet = /*@__PURE__*/ core.$constructor(\"$ZodSet\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const input = payload.value;\n        if (!(input instanceof Set)) {\n            payload.issues.push({\n                input,\n                inst,\n                expected: \"set\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        const proms = [];\n        payload.value = new Set();\n        for (const item of input) {\n            const result = def.valueType._zod.run({ value: item, issues: [] }, ctx);\n            if (result instanceof Promise) {\n                proms.push(result.then((result) => handleSetResult(result, payload)));\n            }\n            else\n                handleSetResult(result, payload);\n        }\n        if (proms.length)\n            return Promise.all(proms).then(() => payload);\n        return payload;\n    };\n});\nfunction handleSetResult(result, final) {\n    if (result.issues.length) {\n        final.issues.push(...result.issues);\n    }\n    final.value.add(result.value);\n}\nexport const $ZodEnum = /*@__PURE__*/ core.$constructor(\"$ZodEnum\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const values = util.getEnumValues(def.entries);\n    const valuesSet = new Set(values);\n    inst._zod.values = valuesSet;\n    inst._zod.pattern = new RegExp(`^(${values\n        .filter((k) => util.propertyKeyTypes.has(typeof k))\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o.toString()))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (valuesSet.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodLiteral = /*@__PURE__*/ core.$constructor(\"$ZodLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    if (def.values.length === 0) {\n        throw new Error(\"Cannot create literal schema with no valid values\");\n    }\n    inst._zod.values = new Set(def.values);\n    inst._zod.pattern = new RegExp(`^(${def.values\n        .map((o) => (typeof o === \"string\" ? util.escapeRegex(o) : o ? util.escapeRegex(o.toString()) : String(o)))\n        .join(\"|\")})$`);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        if (inst._zod.values.has(input)) {\n            return payload;\n        }\n        payload.issues.push({\n            code: \"invalid_value\",\n            values: def.values,\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodFile = /*@__PURE__*/ core.$constructor(\"$ZodFile\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const input = payload.value;\n        // @ts-ignore\n        if (input instanceof File)\n            return payload;\n        payload.issues.push({\n            expected: \"file\",\n            code: \"invalid_type\",\n            input,\n            inst,\n        });\n        return payload;\n    };\n});\nexport const $ZodTransform = /*@__PURE__*/ core.$constructor(\"$ZodTransform\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        const _out = def.transform(payload.value, payload);\n        if (_ctx.async) {\n            const output = _out instanceof Promise ? _out : Promise.resolve(_out);\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        if (_out instanceof Promise) {\n            throw new core.$ZodAsyncError();\n        }\n        payload.value = _out;\n        return payload;\n    };\n});\nfunction handleOptionalResult(result, input) {\n    if (result.issues.length && input === undefined) {\n        return { issues: [], value: undefined };\n    }\n    return result;\n}\nexport const $ZodOptional = /*@__PURE__*/ core.$constructor(\"$ZodOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    inst._zod.optout = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, undefined]) : undefined;\n    });\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)})?$`) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (def.innerType._zod.optin === \"optional\") {\n            const result = def.innerType._zod.run(payload, ctx);\n            if (result instanceof Promise)\n                return result.then((r) => handleOptionalResult(r, payload.value));\n            return handleOptionalResult(result, payload.value);\n        }\n        if (payload.value === undefined) {\n            return payload;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNullable = /*@__PURE__*/ core.$constructor(\"$ZodNullable\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"pattern\", () => {\n        const pattern = def.innerType._zod.pattern;\n        return pattern ? new RegExp(`^(${util.cleanRegex(pattern.source)}|null)$`) : undefined;\n    });\n    util.defineLazy(inst._zod, \"values\", () => {\n        return def.innerType._zod.values ? new Set([...def.innerType._zod.values, null]) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === null)\n            return payload;\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodDefault = /*@__PURE__*/ core.$constructor(\"$ZodDefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // inst._zod.qin = \"true\";\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n            /**\n             * $ZodDefault always returns the default value immediately.\n             * It doesn't pass the default value into the validator (\"prefault\"). There's no reason to pass the default value through validation. The validity of the default is enforced by TypeScript statically. Otherwise, it's the responsibility of the user to ensure the default is valid. In the case of pipes with divergent in/out types, you can specify the default on the `in` schema of your ZodPipe to set a \"prefault\" for the pipe.   */\n            return payload;\n        }\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleDefaultResult(result, def));\n        }\n        return handleDefaultResult(result, def);\n    };\n});\nfunction handleDefaultResult(payload, def) {\n    if (payload.value === undefined) {\n        payload.value = def.defaultValue;\n    }\n    return payload;\n}\nexport const $ZodPrefault = /*@__PURE__*/ core.$constructor(\"$ZodPrefault\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.optin = \"optional\";\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        if (payload.value === undefined) {\n            payload.value = def.defaultValue;\n        }\n        return def.innerType._zod.run(payload, ctx);\n    };\n});\nexport const $ZodNonOptional = /*@__PURE__*/ core.$constructor(\"$ZodNonOptional\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => {\n        const v = def.innerType._zod.values;\n        return v ? new Set([...v].filter((x) => x !== undefined)) : undefined;\n    });\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => handleNonOptionalResult(result, inst));\n        }\n        return handleNonOptionalResult(result, inst);\n    };\n});\nfunction handleNonOptionalResult(payload, inst) {\n    if (!payload.issues.length && payload.value === undefined) {\n        payload.issues.push({\n            code: \"invalid_type\",\n            expected: \"nonoptional\",\n            input: payload.value,\n            inst,\n        });\n    }\n    return payload;\n}\nexport const $ZodSuccess = /*@__PURE__*/ core.$constructor(\"$ZodSuccess\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.issues.length === 0;\n                return payload;\n            });\n        }\n        payload.value = result.issues.length === 0;\n        return payload;\n    };\n});\nexport const $ZodCatch = /*@__PURE__*/ core.$constructor(\"$ZodCatch\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then((result) => {\n                payload.value = result.value;\n                if (result.issues.length) {\n                    payload.value = def.catchValue({\n                        ...payload,\n                        error: {\n                            issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                        },\n                        input: payload.value,\n                    });\n                    payload.issues = [];\n                }\n                return payload;\n            });\n        }\n        payload.value = result.value;\n        if (result.issues.length) {\n            payload.value = def.catchValue({\n                ...payload,\n                error: {\n                    issues: result.issues.map((iss) => util.finalizeIssue(iss, ctx, core.config())),\n                },\n                input: payload.value,\n            });\n            payload.issues = [];\n        }\n        return payload;\n    };\n});\nexport const $ZodNaN = /*@__PURE__*/ core.$constructor(\"$ZodNaN\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"number\" || !Number.isNaN(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"nan\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPipe = /*@__PURE__*/ core.$constructor(\"$ZodPipe\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"values\", () => def.in._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.in._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.out._zod.optout);\n    util.defineLazy(inst._zod, \"propValues\", () => def.in._zod.propValues);\n    inst._zod.parse = (payload, ctx) => {\n        const left = def.in._zod.run(payload, ctx);\n        if (left instanceof Promise) {\n            return left.then((left) => handlePipeResult(left, def, ctx));\n        }\n        return handlePipeResult(left, def, ctx);\n    };\n});\nfunction handlePipeResult(left, def, ctx) {\n    if (left.issues.length) {\n        return left;\n    }\n    return def.out._zod.run({ value: left.value, issues: left.issues }, ctx);\n}\nexport const $ZodReadonly = /*@__PURE__*/ core.$constructor(\"$ZodReadonly\", (inst, def) => {\n    $ZodType.init(inst, def);\n    util.defineLazy(inst._zod, \"propValues\", () => def.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"values\", () => def.innerType._zod.values);\n    util.defineLazy(inst._zod, \"optin\", () => def.innerType._zod.optin);\n    util.defineLazy(inst._zod, \"optout\", () => def.innerType._zod.optout);\n    inst._zod.parse = (payload, ctx) => {\n        const result = def.innerType._zod.run(payload, ctx);\n        if (result instanceof Promise) {\n            return result.then(handleReadonlyResult);\n        }\n        return handleReadonlyResult(result);\n    };\n});\nfunction handleReadonlyResult(payload) {\n    payload.value = Object.freeze(payload.value);\n    return payload;\n}\nexport const $ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"$ZodTemplateLiteral\", (inst, def) => {\n    $ZodType.init(inst, def);\n    const regexParts = [];\n    for (const part of def.parts) {\n        if (typeof part === \"object\" && part !== null) {\n            // is Zod schema\n            if (!part._zod.pattern) {\n                // if (!source)\n                throw new Error(`Invalid template literal part, no pattern found: ${[...part._zod.traits].shift()}`);\n            }\n            const source = part._zod.pattern instanceof RegExp ? part._zod.pattern.source : part._zod.pattern;\n            if (!source)\n                throw new Error(`Invalid template literal part: ${part._zod.traits}`);\n            const start = source.startsWith(\"^\") ? 1 : 0;\n            const end = source.endsWith(\"$\") ? source.length - 1 : source.length;\n            regexParts.push(source.slice(start, end));\n        }\n        else if (part === null || util.primitiveTypes.has(typeof part)) {\n            regexParts.push(util.escapeRegex(`${part}`));\n        }\n        else {\n            throw new Error(`Invalid template literal part: ${part}`);\n        }\n    }\n    inst._zod.pattern = new RegExp(`^${regexParts.join(\"\")}$`);\n    inst._zod.parse = (payload, _ctx) => {\n        if (typeof payload.value !== \"string\") {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                expected: \"template_literal\",\n                code: \"invalid_type\",\n            });\n            return payload;\n        }\n        inst._zod.pattern.lastIndex = 0;\n        if (!inst._zod.pattern.test(payload.value)) {\n            payload.issues.push({\n                input: payload.value,\n                inst,\n                code: \"invalid_format\",\n                format: def.format ?? \"template_literal\",\n                pattern: inst._zod.pattern.source,\n            });\n            return payload;\n        }\n        return payload;\n    };\n});\nexport const $ZodPromise = /*@__PURE__*/ core.$constructor(\"$ZodPromise\", (inst, def) => {\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, ctx) => {\n        return Promise.resolve(payload.value).then((inner) => def.innerType._zod.run({ value: inner, issues: [] }, ctx));\n    };\n});\nexport const $ZodLazy = /*@__PURE__*/ core.$constructor(\"$ZodLazy\", (inst, def) => {\n    $ZodType.init(inst, def);\n    // let _innerType!: any;\n    // util.defineLazy(def, \"getter\", () => {\n    //   if (!_innerType) {\n    //     _innerType = def.getter();\n    //   }\n    //   return () => _innerType;\n    // });\n    util.defineLazy(inst._zod, \"innerType\", () => def.getter());\n    util.defineLazy(inst._zod, \"pattern\", () => inst._zod.innerType._zod.pattern);\n    util.defineLazy(inst._zod, \"propValues\", () => inst._zod.innerType._zod.propValues);\n    util.defineLazy(inst._zod, \"optin\", () => inst._zod.innerType._zod.optin ?? undefined);\n    util.defineLazy(inst._zod, \"optout\", () => inst._zod.innerType._zod.optout ?? undefined);\n    inst._zod.parse = (payload, ctx) => {\n        const inner = inst._zod.innerType;\n        return inner._zod.run(payload, ctx);\n    };\n});\nexport const $ZodCustom = /*@__PURE__*/ core.$constructor(\"$ZodCustom\", (inst, def) => {\n    checks.$ZodCheck.init(inst, def);\n    $ZodType.init(inst, def);\n    inst._zod.parse = (payload, _) => {\n        return payload;\n    };\n    inst._zod.check = (payload) => {\n        const input = payload.value;\n        const r = def.fn(input);\n        if (r instanceof Promise) {\n            return r.then((r) => handleRefineResult(r, payload, input, inst));\n        }\n        handleRefineResult(r, payload, input, inst);\n        return;\n    };\n});\nfunction handleRefineResult(result, payload, input, inst) {\n    if (!result) {\n        const _iss = {\n            code: \"custom\",\n            input,\n            inst, // incorporates params.error into issue reporting\n            path: [...(inst._zod.def.path ?? [])], // incorporates params.error into issue reporting\n            continue: !inst._zod.def.abort,\n            // params: inst._zod.def.params,\n        };\n        if (inst._zod.def.params)\n            _iss.params = inst._zod.def.params;\n        payload.issues.push(util.issue(_iss));\n    }\n}\n","export const $output = Symbol(\"ZodOutput\");\nexport const $input = Symbol(\"ZodInput\");\nexport class $ZodRegistry {\n    constructor() {\n        this._map = new Map();\n        this._idmap = new Map();\n    }\n    add(schema, ..._meta) {\n        const meta = _meta[0];\n        this._map.set(schema, meta);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            if (this._idmap.has(meta.id)) {\n                throw new Error(`ID ${meta.id} already exists in the registry`);\n            }\n            this._idmap.set(meta.id, schema);\n        }\n        return this;\n    }\n    clear() {\n        this._map = new Map();\n        this._idmap = new Map();\n        return this;\n    }\n    remove(schema) {\n        const meta = this._map.get(schema);\n        if (meta && typeof meta === \"object\" && \"id\" in meta) {\n            this._idmap.delete(meta.id);\n        }\n        this._map.delete(schema);\n        return this;\n    }\n    get(schema) {\n        // return this._map.get(schema) as any;\n        // inherit metadata\n        const p = schema._zod.parent;\n        if (p) {\n            const pm = { ...(this.get(p) ?? {}) };\n            delete pm.id; // do not inherit id\n            const f = { ...pm, ...this._map.get(schema) };\n            return Object.keys(f).length ? f : undefined;\n        }\n        return this._map.get(schema);\n    }\n    has(schema) {\n        return this._map.has(schema);\n    }\n}\n// registries\nexport function registry() {\n    return new $ZodRegistry();\n}\nexport const globalRegistry = /*@__PURE__*/ registry();\n","import * as checks from \"./checks.js\";\nimport * as schemas from \"./schemas.js\";\nimport * as util from \"./util.js\";\nexport function _string(Class, params) {\n    return new Class({\n        type: \"string\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedString(Class, params) {\n    return new Class({\n        type: \"string\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _email(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"email\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _guid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"guid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v4\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v6\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uuidv7(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"uuid\",\n        check: \"string_format\",\n        abort: false,\n        version: \"v7\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _emoji(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"emoji\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nanoid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"nanoid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cuid2(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cuid2\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ulid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ulid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _xid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"xid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ksuid(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ksuid\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _ipv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"ipv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv4(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv4\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _cidrv6(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"cidrv6\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _base64url(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"base64url\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _e164(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"e164\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _jwt(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"jwt\",\n        check: \"string_format\",\n        abort: false,\n        ...util.normalizeParams(params),\n    });\n}\nexport const TimePrecision = {\n    Any: null,\n    Minute: -1,\n    Second: 0,\n    Millisecond: 3,\n    Microsecond: 6,\n};\nexport function _isoDateTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"datetime\",\n        check: \"string_format\",\n        offset: false,\n        local: false,\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDate(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"date\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoTime(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"time\",\n        check: \"string_format\",\n        precision: null,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _isoDuration(Class, params) {\n    return new Class({\n        type: \"string\",\n        format: \"duration\",\n        check: \"string_format\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _number(Class, params) {\n    return new Class({\n        type: \"number\",\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedNumber(Class, params) {\n    return new Class({\n        type: \"number\",\n        coerce: true,\n        checks: [],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"safeint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _float64(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"float64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"int32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint32(Class, params) {\n    return new Class({\n        type: \"number\",\n        check: \"number_format\",\n        abort: false,\n        format: \"uint32\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _boolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBoolean(Class, params) {\n    return new Class({\n        type: \"boolean\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _bigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedBigint(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _int64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"int64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uint64(Class, params) {\n    return new Class({\n        type: \"bigint\",\n        check: \"bigint_format\",\n        abort: false,\n        format: \"uint64\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _symbol(Class, params) {\n    return new Class({\n        type: \"symbol\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _undefined(Class, params) {\n    return new Class({\n        type: \"undefined\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _null(Class, params) {\n    return new Class({\n        type: \"null\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _any(Class) {\n    return new Class({\n        type: \"any\",\n    });\n}\nexport function _unknown(Class) {\n    return new Class({\n        type: \"unknown\",\n    });\n}\nexport function _never(Class, params) {\n    return new Class({\n        type: \"never\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _void(Class, params) {\n    return new Class({\n        type: \"void\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _date(Class, params) {\n    return new Class({\n        type: \"date\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _coercedDate(Class, params) {\n    return new Class({\n        type: \"date\",\n        coerce: true,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _nan(Class, params) {\n    return new Class({\n        type: \"nan\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lt(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _lte(value, params) {\n    return new checks.$ZodCheckLessThan({\n        check: \"less_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.lte()` instead. */\n_lte as _max, };\nexport function _gt(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: false,\n    });\n}\nexport function _gte(value, params) {\n    return new checks.$ZodCheckGreaterThan({\n        check: \"greater_than\",\n        ...util.normalizeParams(params),\n        value,\n        inclusive: true,\n    });\n}\nexport { \n/** @deprecated Use `z.gte()` instead. */\n_gte as _min, };\nexport function _positive(params) {\n    return _gt(0, params);\n}\n// negative\nexport function _negative(params) {\n    return _lt(0, params);\n}\n// nonpositive\nexport function _nonpositive(params) {\n    return _lte(0, params);\n}\n// nonnegative\nexport function _nonnegative(params) {\n    return _gte(0, params);\n}\nexport function _multipleOf(value, params) {\n    return new checks.$ZodCheckMultipleOf({\n        check: \"multiple_of\",\n        ...util.normalizeParams(params),\n        value,\n    });\n}\nexport function _maxSize(maximum, params) {\n    return new checks.$ZodCheckMaxSize({\n        check: \"max_size\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n}\nexport function _minSize(minimum, params) {\n    return new checks.$ZodCheckMinSize({\n        check: \"min_size\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _size(size, params) {\n    return new checks.$ZodCheckSizeEquals({\n        check: \"size_equals\",\n        ...util.normalizeParams(params),\n        size,\n    });\n}\nexport function _maxLength(maximum, params) {\n    const ch = new checks.$ZodCheckMaxLength({\n        check: \"max_length\",\n        ...util.normalizeParams(params),\n        maximum,\n    });\n    return ch;\n}\nexport function _minLength(minimum, params) {\n    return new checks.$ZodCheckMinLength({\n        check: \"min_length\",\n        ...util.normalizeParams(params),\n        minimum,\n    });\n}\nexport function _length(length, params) {\n    return new checks.$ZodCheckLengthEquals({\n        check: \"length_equals\",\n        ...util.normalizeParams(params),\n        length,\n    });\n}\nexport function _regex(pattern, params) {\n    return new checks.$ZodCheckRegex({\n        check: \"string_format\",\n        format: \"regex\",\n        ...util.normalizeParams(params),\n        pattern,\n    });\n}\nexport function _lowercase(params) {\n    return new checks.$ZodCheckLowerCase({\n        check: \"string_format\",\n        format: \"lowercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _uppercase(params) {\n    return new checks.$ZodCheckUpperCase({\n        check: \"string_format\",\n        format: \"uppercase\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _includes(includes, params) {\n    return new checks.$ZodCheckIncludes({\n        check: \"string_format\",\n        format: \"includes\",\n        ...util.normalizeParams(params),\n        includes,\n    });\n}\nexport function _startsWith(prefix, params) {\n    return new checks.$ZodCheckStartsWith({\n        check: \"string_format\",\n        format: \"starts_with\",\n        ...util.normalizeParams(params),\n        prefix,\n    });\n}\nexport function _endsWith(suffix, params) {\n    return new checks.$ZodCheckEndsWith({\n        check: \"string_format\",\n        format: \"ends_with\",\n        ...util.normalizeParams(params),\n        suffix,\n    });\n}\nexport function _property(property, schema, params) {\n    return new checks.$ZodCheckProperty({\n        check: \"property\",\n        property,\n        schema,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _mime(types, params) {\n    return new checks.$ZodCheckMimeType({\n        check: \"mime_type\",\n        mime: types,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _overwrite(tx) {\n    return new checks.$ZodCheckOverwrite({\n        check: \"overwrite\",\n        tx,\n    });\n}\n// normalize\nexport function _normalize(form) {\n    return _overwrite((input) => input.normalize(form));\n}\n// trim\nexport function _trim() {\n    return _overwrite((input) => input.trim());\n}\n// toLowerCase\nexport function _toLowerCase() {\n    return _overwrite((input) => input.toLowerCase());\n}\n// toUpperCase\nexport function _toUpperCase() {\n    return _overwrite((input) => input.toUpperCase());\n}\nexport function _array(Class, element, params) {\n    return new Class({\n        type: \"array\",\n        element,\n        // get element() {\n        //   return element;\n        // },\n        ...util.normalizeParams(params),\n    });\n}\nexport function _union(Class, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _discriminatedUnion(Class, discriminator, options, params) {\n    return new Class({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _intersection(Class, left, right) {\n    return new Class({\n        type: \"intersection\",\n        left,\n        right,\n    });\n}\n// export function _tuple(\n//   Class: util.SchemaClass<schemas.$ZodTuple>,\n//   items: [],\n//   params?: string | $ZodTupleParams\n// ): schemas.$ZodTuple<[], null>;\nexport function _tuple(Class, items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof schemas.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new Class({\n        type: \"tuple\",\n        items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _record(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"record\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _map(Class, keyType, valueType, params) {\n    return new Class({\n        type: \"map\",\n        keyType,\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _set(Class, valueType, params) {\n    return new Class({\n        type: \"set\",\n        valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _enum(Class, values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    // if (Array.isArray(values)) {\n    //   for (const value of values) {\n    //     entries[value] = value;\n    //   }\n    // } else {\n    //   Object.assign(entries, values);\n    // }\n    // const entries: util.EnumLike = {};\n    // for (const val of values) {\n    //   entries[val] = val;\n    // }\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function _nativeEnum(Class, entries, params) {\n    return new Class({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _literal(Class, value, params) {\n    return new Class({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport function _file(Class, params) {\n    return new Class({\n        type: \"file\",\n        ...util.normalizeParams(params),\n    });\n}\nexport function _transform(Class, fn) {\n    return new Class({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport function _optional(Class, innerType) {\n    return new Class({\n        type: \"optional\",\n        innerType,\n    });\n}\nexport function _nullable(Class, innerType) {\n    return new Class({\n        type: \"nullable\",\n        innerType,\n    });\n}\nexport function _default(Class, innerType, defaultValue) {\n    return new Class({\n        type: \"default\",\n        innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport function _nonoptional(Class, innerType, params) {\n    return new Class({\n        type: \"nonoptional\",\n        innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _success(Class, innerType) {\n    return new Class({\n        type: \"success\",\n        innerType,\n    });\n}\nexport function _catch(Class, innerType, catchValue) {\n    return new Class({\n        type: \"catch\",\n        innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport function _pipe(Class, in_, out) {\n    return new Class({\n        type: \"pipe\",\n        in: in_,\n        out,\n    });\n}\nexport function _readonly(Class, innerType) {\n    return new Class({\n        type: \"readonly\",\n        innerType,\n    });\n}\nexport function _templateLiteral(Class, parts, params) {\n    return new Class({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport function _lazy(Class, getter) {\n    return new Class({\n        type: \"lazy\",\n        getter,\n    });\n}\nexport function _promise(Class, innerType) {\n    return new Class({\n        type: \"promise\",\n        innerType,\n    });\n}\nexport function _custom(Class, fn, _params) {\n    const norm = util.normalizeParams(_params);\n    norm.abort ?? (norm.abort = true); // default to abort:false\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...norm,\n    });\n    return schema;\n}\n// same as _custom but defaults to abort:false\nexport function _refine(Class, fn, _params) {\n    const schema = new Class({\n        type: \"custom\",\n        check: \"custom\",\n        fn: fn,\n        ...util.normalizeParams(_params),\n    });\n    return schema;\n}\nexport function _superRefine(fn) {\n    const ch = _check((payload) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, ch._zod.def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = ch);\n                _issue.continue ?? (_issue.continue = !ch._zod.def.abort);\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        return fn(payload.value, payload);\n    });\n    return ch;\n}\nexport function _check(fn, params) {\n    const ch = new checks.$ZodCheck({\n        check: \"custom\",\n        ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function _stringbool(Classes, _params) {\n    const params = util.normalizeParams(_params);\n    let truthyArray = params.truthy ?? [\"true\", \"1\", \"yes\", \"on\", \"y\", \"enabled\"];\n    let falsyArray = params.falsy ?? [\"false\", \"0\", \"no\", \"off\", \"n\", \"disabled\"];\n    if (params.case !== \"sensitive\") {\n        truthyArray = truthyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n        falsyArray = falsyArray.map((v) => (typeof v === \"string\" ? v.toLowerCase() : v));\n    }\n    const truthySet = new Set(truthyArray);\n    const falsySet = new Set(falsyArray);\n    const _Pipe = Classes.Pipe ?? schemas.$ZodPipe;\n    const _Boolean = Classes.Boolean ?? schemas.$ZodBoolean;\n    const _String = Classes.String ?? schemas.$ZodString;\n    const _Transform = Classes.Transform ?? schemas.$ZodTransform;\n    const tx = new _Transform({\n        type: \"transform\",\n        transform: (input, payload) => {\n            let data = input;\n            if (params.case !== \"sensitive\")\n                data = data.toLowerCase();\n            if (truthySet.has(data)) {\n                return true;\n            }\n            else if (falsySet.has(data)) {\n                return false;\n            }\n            else {\n                payload.issues.push({\n                    code: \"invalid_value\",\n                    expected: \"stringbool\",\n                    values: [...truthySet, ...falsySet],\n                    input: payload.value,\n                    inst: tx,\n                    continue: false,\n                });\n                return {};\n            }\n        },\n        error: params.error,\n    });\n    // params.error;\n    const innerPipe = new _Pipe({\n        type: \"pipe\",\n        in: new _String({ type: \"string\", error: params.error }),\n        out: tx,\n        error: params.error,\n    });\n    const outerPipe = new _Pipe({\n        type: \"pipe\",\n        in: innerPipe,\n        out: new _Boolean({\n            type: \"boolean\",\n            error: params.error,\n        }),\n        error: params.error,\n    });\n    return outerPipe;\n}\nexport function _stringFormat(Class, format, fnOrRegex, _params = {}) {\n    const params = util.normalizeParams(_params);\n    const def = {\n        ...util.normalizeParams(_params),\n        check: \"string_format\",\n        type: \"string\",\n        format,\n        fn: typeof fnOrRegex === \"function\" ? fnOrRegex : (val) => fnOrRegex.test(val),\n        ...params,\n    };\n    if (fnOrRegex instanceof RegExp) {\n        def.pattern = fnOrRegex;\n    }\n    const inst = new Class(def);\n    return inst;\n}\n","import{validateFieldsNatively as r,toNestErrors as e}from\"@hookform/resolvers\";import{appendErrors as o}from\"react-hook-form\";import*as n from\"zod/v4/core\";function t(r,e){try{var o=r()}catch(r){return e(r)}return o&&o.then?o.then(void 0,e):o}function s(r,e){for(var n={};r.length;){var t=r[0],s=t.code,i=t.message,a=t.path.join(\".\");if(!n[a])if(\"unionErrors\"in t){var u=t.unionErrors[0].errors[0];n[a]={message:u.message,type:u.code}}else n[a]={message:i,type:s};if(\"unionErrors\"in t&&t.unionErrors.forEach(function(e){return e.errors.forEach(function(e){return r.push(e)})}),e){var c=n[a].types,f=c&&c[t.code];n[a]=o(a,e,n,s,f?[].concat(f,t.message):t.message)}r.shift()}return n}function i(r,e){for(var n={};r.length;){var t=r[0],s=t.code,i=t.message,a=t.path.join(\".\");if(!n[a])if(\"invalid_union\"===t.code&&t.errors.length>0){var u=t.errors[0][0];n[a]={message:u.message,type:u.code}}else n[a]={message:i,type:s};if(\"invalid_union\"===t.code&&t.errors.forEach(function(e){return e.forEach(function(e){return r.push(e)})}),e){var c=n[a].types,f=c&&c[t.code];n[a]=o(a,e,n,s,f?[].concat(f,t.message):t.message)}r.shift()}return n}function a(o,a,u){if(void 0===u&&(u={}),function(r){return\"_def\"in r&&\"object\"==typeof r._def&&\"typeName\"in r._def}(o))return function(n,i,c){try{return Promise.resolve(t(function(){return Promise.resolve(o[\"sync\"===u.mode?\"parse\":\"parseAsync\"](n,a)).then(function(e){return c.shouldUseNativeValidation&&r({},c),{errors:{},values:u.raw?Object.assign({},n):e}})},function(r){if(function(r){return Array.isArray(null==r?void 0:r.issues)}(r))return{values:{},errors:e(s(r.errors,!c.shouldUseNativeValidation&&\"all\"===c.criteriaMode),c)};throw r}))}catch(r){return Promise.reject(r)}};if(function(r){return\"_zod\"in r&&\"object\"==typeof r._zod}(o))return function(s,c,f){try{return Promise.resolve(t(function(){return Promise.resolve((\"sync\"===u.mode?n.parse:n.parseAsync)(o,s,a)).then(function(e){return f.shouldUseNativeValidation&&r({},f),{errors:{},values:u.raw?Object.assign({},s):e}})},function(r){if(function(r){return r instanceof n.$ZodError}(r))return{values:{},errors:e(i(r.issues,!f.shouldUseNativeValidation&&\"all\"===f.criteriaMode),f)};throw r}))}catch(r){return Promise.reject(r)}};throw new Error(\"Invalid input: not a Zod schema\")}export{a as zodResolver};\n//# sourceMappingURL=zod.module.js.map\n","import React, { createContext, useContext, ReactNode } from 'react';\nimport { \n  useForm as useReactHookForm, \n  FormProvider, \n  useFormContext,\n  FieldValues,\n  UseFormReturn,\n  SubmitHandler,\n  DefaultValues,\n  RegisterOptions\n} from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { ZodSchema } from 'zod';\n\n// Form Context\ninterface FormContextValue {\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'bordered' | 'filled';\n}\n\nconst FormStyleContext = createContext<FormContextValue>({});\n\n// Form Component\nexport interface FormProps<T extends FieldValues = FieldValues> {\n  children: ReactNode;\n  onSubmit: SubmitHandler<T>;\n  schema?: ZodSchema;\n  defaultValues?: DefaultValues<T>;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n  variant?: 'default' | 'bordered' | 'filled';\n  methods?: UseFormReturn<T>;\n}\n\nexport function Form<T extends FieldValues = FieldValues>({\n  children,\n  onSubmit,\n  schema,\n  defaultValues,\n  className = '',\n  size = 'md',\n  variant = 'default',\n  methods: externalMethods\n}: FormProps<T>) {\n  const internalMethods = useReactHookForm<T>({\n    defaultValues,\n    resolver: schema ? zodResolver(schema as any) : undefined\n  });\n\n  const methods = externalMethods || internalMethods;\n\n  return (\n    <FormProvider {...methods}>\n      <FormStyleContext.Provider value={{ size, variant }}>\n        <form \n          onSubmit={methods.handleSubmit(onSubmit)}\n          className={`form ${className}`}\n          noValidate\n        >\n          {children}\n        </form>\n      </FormStyleContext.Provider>\n    </FormProvider>\n  );\n}\n\n// Field Component (wrapper for form fields with label and error)\nexport interface FieldProps {\n  name: string;\n  label?: string;\n  help?: string;\n  required?: boolean;\n  children: ReactNode;\n  className?: string;\n  horizontal?: boolean;\n}\n\nexport const Field: React.FC<FieldProps> = ({\n  name,\n  label,\n  help,\n  required,\n  children,\n  className = '',\n  horizontal = false\n}) => {\n  const methods = useFormContext();\n  const error = methods?.formState?.errors?.[name];\n\n  const fieldClass = horizontal ? 'field is-horizontal' : 'field';\n  const labelClass = horizontal ? 'field-label' : '';\n  const bodyClass = horizontal ? 'field-body' : '';\n\n  return (\n    <div className={`${fieldClass} ${className}`}>\n      {label && (\n        <div className={labelClass}>\n          <label className=\"label\" htmlFor={name}>\n            {label}\n            {required && <span className=\"text-red-500 ml-1\">*</span>}\n          </label>\n        </div>\n      )}\n      <div className={bodyClass}>\n        <div className=\"field\">\n          <div className=\"control\">\n            {children}\n          </div>\n          {help && !error && (\n            <p className=\"help text-gray-500\">{help}</p>\n          )}\n          {error && (\n            <p className=\"help text-red-500\">\n              {typeof error === 'object' && error !== null && 'message' in error \n                ? (error as any).message \n                : 'This field is invalid'}\n            </p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Control Component (wrapper for form controls)\nexport interface ControlProps {\n  children: ReactNode;\n  leftIcon?: ReactNode;\n  rightIcon?: ReactNode;\n  loading?: boolean;\n  className?: string;\n}\n\nexport const Control: React.FC<ControlProps> = ({\n  children,\n  leftIcon,\n  rightIcon,\n  loading = false,\n  className = ''\n}) => {\n  const hasIcons = leftIcon || rightIcon;\n  const controlClass = [\n    'control',\n    hasIcons && 'has-icons',\n    leftIcon && 'has-icons-left',\n    rightIcon && 'has-icons-right',\n    loading && 'is-loading',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={controlClass}>\n      {children}\n      {leftIcon && (\n        <span className=\"icon is-left\">\n          {leftIcon}\n        </span>\n      )}\n      {rightIcon && (\n        <span className=\"icon is-right\">\n          {rightIcon}\n        </span>\n      )}\n    </div>\n  );\n};\n\n// Select Component\nexport interface SelectOption {\n  value: string | number;\n  label: string;\n  disabled?: boolean;\n}\n\nexport interface SelectProps {\n  name: string;\n  options: SelectOption[];\n  placeholder?: string;\n  multiple?: boolean;\n  size?: number;\n  loading?: boolean;\n  disabled?: boolean;\n  rules?: RegisterOptions;\n  className?: string;\n  fullWidth?: boolean;\n}\n\nexport const Select: React.FC<SelectProps> = ({\n  name,\n  options,\n  placeholder,\n  multiple = false,\n  size,\n  loading = false,\n  disabled = false,\n  rules,\n  className = '',\n  fullWidth = false\n}) => {\n  const { register } = useFormContext();\n  const { size: formSize, variant } = useContext(FormStyleContext);\n\n  const sizeClasses = {\n    sm: 'text-sm py-1 px-2',\n    md: 'text-base py-2 px-3',\n    lg: 'text-lg py-3 px-4'\n  };\n\n  const variantClasses = {\n    default: 'border-gray-300 focus:border-blue-500',\n    bordered: 'border-2 border-gray-400 focus:border-blue-500',\n    filled: 'bg-gray-100 border-transparent focus:bg-white focus:border-blue-500'\n  };\n\n  const selectClass = [\n    'select',\n    sizeClasses[formSize || 'md'],\n    variantClasses[variant || 'default'],\n    'rounded-md',\n    'transition-colors',\n    'focus:outline-none',\n    'focus:ring-2',\n    'focus:ring-blue-500',\n    'focus:ring-opacity-50',\n    fullWidth && 'w-full',\n    disabled && 'opacity-50 cursor-not-allowed',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={`select-wrapper ${loading ? 'is-loading' : ''}`}>\n      <select\n        {...register(name, rules)}\n        multiple={multiple}\n        size={size}\n        disabled={disabled || loading}\n        className={selectClass}\n      >\n        {placeholder && (\n          <option value=\"\" disabled>\n            {placeholder}\n          </option>\n        )}\n        {options.map((option) => (\n          <option \n            key={option.value} \n            value={option.value}\n            disabled={option.disabled}\n          >\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\n// Checkbox Component\nexport interface CheckboxProps {\n  name?: string;\n  label?: string;\n  value?: string | number;\n  disabled?: boolean;\n  rules?: RegisterOptions;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n  checked?: boolean;\n  onChange?: (checked: boolean) => void;\n}\n\nexport const Checkbox: React.FC<CheckboxProps> = ({\n  name,\n  label,\n  value,\n  disabled = false,\n  rules,\n  className = '',\n  size = 'md',\n  checked,\n  onChange\n}) => {\n  // Try to get form context, but don't fail if it doesn't exist\n  let register = null;\n  try {\n    const formContext = useFormContext();\n    register = formContext?.register;\n  } catch (e) {\n    // No form context, will use standalone mode\n  }\n  \n  const { size: formSize } = useContext(FormStyleContext);\n  const actualSize = size || formSize || 'md';\n\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  const textSizeClasses = {\n    sm: 'text-sm',\n    md: 'text-base',\n    lg: 'text-lg'\n  };\n\n  // Handle change for standalone mode\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) {\n      onChange(e.target.checked);\n    }\n  };\n\n  return (\n    <label className={`inline-flex items-center gap-2 cursor-pointer ${disabled ? 'cursor-not-allowed opacity-50' : ''} ${className}`}>\n      {register && name ? (\n        // Form mode: use register\n        <input\n          type=\"checkbox\"\n          {...register(name, rules)}\n          value={value}\n          disabled={disabled}\n          className={`\n            ${sizeClasses[actualSize]}\n            rounded \n            border-gray-300 \n            text-blue-600 \n            focus:ring-2 \n            focus:ring-blue-500 \n            focus:ring-offset-0\n            disabled:opacity-50\n            disabled:cursor-not-allowed\n            cursor-pointer\n          `}\n        />\n      ) : (\n        // Standalone mode: use checked and onChange\n        <input\n          type=\"checkbox\"\n          checked={checked}\n          onChange={handleChange}\n          value={value}\n          disabled={disabled}\n          className={`\n            ${sizeClasses[actualSize]}\n            rounded \n            border-gray-300 \n            text-blue-600 \n            focus:ring-2 \n            focus:ring-blue-500 \n            focus:ring-offset-0\n            disabled:opacity-50\n            disabled:cursor-not-allowed\n            cursor-pointer\n          `}\n        />\n      )}\n      {label && (\n        <span className={`${textSizeClasses[actualSize]} select-none`}>\n          {label}\n        </span>\n      )}\n    </label>\n  );\n};\n\n// Radio Component\nexport interface RadioProps {\n  name: string;\n  label?: string;\n  value: string | number;\n  disabled?: boolean;\n  rules?: RegisterOptions;\n  className?: string;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nexport const Radio: React.FC<RadioProps> = ({\n  name,\n  label,\n  value,\n  disabled = false,\n  rules,\n  className = '',\n  size = 'md'\n}) => {\n  const { register } = useFormContext();\n  const { size: formSize } = useContext(FormStyleContext);\n  const actualSize = size || formSize || 'md';\n\n  const sizeClasses = {\n    sm: 'w-3 h-3',\n    md: 'w-4 h-4',\n    lg: 'w-5 h-5'\n  };\n\n  const textSizeClasses = {\n    sm: 'text-sm',\n    md: 'text-base',\n    lg: 'text-lg'\n  };\n\n  return (\n    <label className={`inline-flex items-center gap-2 cursor-pointer ${disabled ? 'cursor-not-allowed opacity-50' : ''} ${className}`}>\n      <input\n        type=\"radio\"\n        {...register(name, rules)}\n        value={value}\n        disabled={disabled}\n        className={`\n          ${sizeClasses[actualSize]}\n          border-gray-300 \n          text-blue-600 \n          focus:ring-2 \n          focus:ring-blue-500 \n          focus:ring-offset-0\n          disabled:opacity-50\n          disabled:cursor-not-allowed\n          cursor-pointer\n        `}\n      />\n      {label && (\n        <span className={`${textSizeClasses[actualSize]} select-none`}>\n          {label}\n        </span>\n      )}\n    </label>\n  );\n};\n\n// File Input Component\nexport interface FileInputProps {\n  name: string;\n  accept?: string;\n  multiple?: boolean;\n  disabled?: boolean;\n  boxed?: boolean;\n  centered?: boolean;\n  fullWidth?: boolean;\n  rules?: RegisterOptions;\n  className?: string;\n  label?: string;\n  icon?: ReactNode;\n}\n\nexport const FileInput: React.FC<FileInputProps> = ({\n  name,\n  accept,\n  multiple = false,\n  disabled = false,\n  boxed = false,\n  centered = false,\n  fullWidth = false,\n  rules,\n  className = '',\n  label = 'Choose a file...',\n  icon\n}) => {\n  const { register, watch } = useFormContext();\n  const files = watch(name);\n\n  const fileInputClass = [\n    'file',\n    boxed && 'has-boxed',\n    centered && 'is-centered',\n    fullWidth && 'is-fullwidth',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={fileInputClass}>\n      <label className=\"file-label\">\n        <input\n          className=\"file-input\"\n          type=\"file\"\n          {...register(name, rules)}\n          accept={accept}\n          multiple={multiple}\n          disabled={disabled}\n        />\n        <span className=\"file-cta\">\n          {icon && (\n            <span className=\"file-icon\">\n              {icon}\n            </span>\n          )}\n          <span className=\"file-label\">\n            {label}\n          </span>\n        </span>\n        {files && files.length > 0 && (\n          <span className=\"file-name\">\n            {multiple \n              ? `${files.length} files selected`\n              : files[0]?.name\n            }\n          </span>\n        )}\n      </label>\n    </div>\n  );\n};\n\n// Export useFormContext for custom components\nexport { useFormContext, useForm } from 'react-hook-form';\nexport type { FieldValues, UseFormReturn, SubmitHandler } from 'react-hook-form';","import * as core from \"../core/index.js\";\nimport * as schemas from \"./schemas.js\";\nexport const ZodISODateTime = /*@__PURE__*/ core.$constructor(\"ZodISODateTime\", (inst, def) => {\n    core.$ZodISODateTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function datetime(params) {\n    return core._isoDateTime(ZodISODateTime, params);\n}\nexport const ZodISODate = /*@__PURE__*/ core.$constructor(\"ZodISODate\", (inst, def) => {\n    core.$ZodISODate.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function date(params) {\n    return core._isoDate(ZodISODate, params);\n}\nexport const ZodISOTime = /*@__PURE__*/ core.$constructor(\"ZodISOTime\", (inst, def) => {\n    core.$ZodISOTime.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function time(params) {\n    return core._isoTime(ZodISOTime, params);\n}\nexport const ZodISODuration = /*@__PURE__*/ core.$constructor(\"ZodISODuration\", (inst, def) => {\n    core.$ZodISODuration.init(inst, def);\n    schemas.ZodStringFormat.init(inst, def);\n});\nexport function duration(params) {\n    return core._isoDuration(ZodISODuration, params);\n}\n","import * as core from \"../core/index.js\";\nimport { $ZodError } from \"../core/index.js\";\nimport * as util from \"../core/util.js\";\nconst initializer = (inst, issues) => {\n    $ZodError.init(inst, issues);\n    inst.name = \"ZodError\";\n    Object.defineProperties(inst, {\n        format: {\n            value: (mapper) => core.formatError(inst, mapper),\n            // enumerable: false,\n        },\n        flatten: {\n            value: (mapper) => core.flattenError(inst, mapper),\n            // enumerable: false,\n        },\n        addIssue: {\n            value: (issue) => {\n                inst.issues.push(issue);\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\n            },\n            // enumerable: false,\n        },\n        addIssues: {\n            value: (issues) => {\n                inst.issues.push(...issues);\n                inst.message = JSON.stringify(inst.issues, util.jsonStringifyReplacer, 2);\n            },\n            // enumerable: false,\n        },\n        isEmpty: {\n            get() {\n                return inst.issues.length === 0;\n            },\n            // enumerable: false,\n        },\n    });\n    // Object.defineProperty(inst, \"isEmpty\", {\n    //   get() {\n    //     return inst.issues.length === 0;\n    //   },\n    // });\n};\nexport const ZodError = core.$constructor(\"ZodError\", initializer);\nexport const ZodRealError = core.$constructor(\"ZodError\", initializer, {\n    Parent: Error,\n});\n// /** @deprecated Use `z.core.$ZodErrorMapCtx` instead. */\n// export type ErrorMapCtx = core.$ZodErrorMapCtx;\n","import * as core from \"../core/index.js\";\nimport { ZodRealError } from \"./errors.js\";\nexport const parse = /* @__PURE__ */ core._parse(ZodRealError);\nexport const parseAsync = /* @__PURE__ */ core._parseAsync(ZodRealError);\nexport const safeParse = /* @__PURE__ */ core._safeParse(ZodRealError);\nexport const safeParseAsync = /* @__PURE__ */ core._safeParseAsync(ZodRealError);\n","import * as core from \"../core/index.js\";\nimport { util } from \"../core/index.js\";\nimport * as checks from \"./checks.js\";\nimport * as iso from \"./iso.js\";\nimport * as parse from \"./parse.js\";\nexport const ZodType = /*@__PURE__*/ core.$constructor(\"ZodType\", (inst, def) => {\n    core.$ZodType.init(inst, def);\n    inst.def = def;\n    Object.defineProperty(inst, \"_def\", { value: def });\n    // base methods\n    inst.check = (...checks) => {\n        return inst.clone({\n            ...def,\n            checks: [\n                ...(def.checks ?? []),\n                ...checks.map((ch) => typeof ch === \"function\" ? { _zod: { check: ch, def: { check: \"custom\" }, onattach: [] } } : ch),\n            ],\n        }\n        // { parent: true }\n        );\n    };\n    inst.clone = (def, params) => core.clone(inst, def, params);\n    inst.brand = () => inst;\n    inst.register = ((reg, meta) => {\n        reg.add(inst, meta);\n        return inst;\n    });\n    // parsing\n    inst.parse = (data, params) => parse.parse(inst, data, params, { callee: inst.parse });\n    inst.safeParse = (data, params) => parse.safeParse(inst, data, params);\n    inst.parseAsync = async (data, params) => parse.parseAsync(inst, data, params, { callee: inst.parseAsync });\n    inst.safeParseAsync = async (data, params) => parse.safeParseAsync(inst, data, params);\n    inst.spa = inst.safeParseAsync;\n    // refinements\n    inst.refine = (check, params) => inst.check(refine(check, params));\n    inst.superRefine = (refinement) => inst.check(superRefine(refinement));\n    inst.overwrite = (fn) => inst.check(checks.overwrite(fn));\n    // wrappers\n    inst.optional = () => optional(inst);\n    inst.nullable = () => nullable(inst);\n    inst.nullish = () => optional(nullable(inst));\n    inst.nonoptional = (params) => nonoptional(inst, params);\n    inst.array = () => array(inst);\n    inst.or = (arg) => union([inst, arg]);\n    inst.and = (arg) => intersection(inst, arg);\n    inst.transform = (tx) => pipe(inst, transform(tx));\n    inst.default = (def) => _default(inst, def);\n    inst.prefault = (def) => prefault(inst, def);\n    // inst.coalesce = (def, params) => coalesce(inst, def, params);\n    inst.catch = (params) => _catch(inst, params);\n    inst.pipe = (target) => pipe(inst, target);\n    inst.readonly = () => readonly(inst);\n    // meta\n    inst.describe = (description) => {\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, { description });\n        return cl;\n    };\n    Object.defineProperty(inst, \"description\", {\n        get() {\n            return core.globalRegistry.get(inst)?.description;\n        },\n        configurable: true,\n    });\n    inst.meta = (...args) => {\n        if (args.length === 0) {\n            return core.globalRegistry.get(inst);\n        }\n        const cl = inst.clone();\n        core.globalRegistry.add(cl, args[0]);\n        return cl;\n    };\n    // helpers\n    inst.isOptional = () => inst.safeParse(undefined).success;\n    inst.isNullable = () => inst.safeParse(null).success;\n    return inst;\n});\n/** @internal */\nexport const _ZodString = /*@__PURE__*/ core.$constructor(\"_ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    ZodType.init(inst, def);\n    const bag = inst._zod.bag;\n    inst.format = bag.format ?? null;\n    inst.minLength = bag.minimum ?? null;\n    inst.maxLength = bag.maximum ?? null;\n    // validations\n    inst.regex = (...args) => inst.check(checks.regex(...args));\n    inst.includes = (...args) => inst.check(checks.includes(...args));\n    inst.startsWith = (...args) => inst.check(checks.startsWith(...args));\n    inst.endsWith = (...args) => inst.check(checks.endsWith(...args));\n    inst.min = (...args) => inst.check(checks.minLength(...args));\n    inst.max = (...args) => inst.check(checks.maxLength(...args));\n    inst.length = (...args) => inst.check(checks.length(...args));\n    inst.nonempty = (...args) => inst.check(checks.minLength(1, ...args));\n    inst.lowercase = (params) => inst.check(checks.lowercase(params));\n    inst.uppercase = (params) => inst.check(checks.uppercase(params));\n    // transforms\n    inst.trim = () => inst.check(checks.trim());\n    inst.normalize = (...args) => inst.check(checks.normalize(...args));\n    inst.toLowerCase = () => inst.check(checks.toLowerCase());\n    inst.toUpperCase = () => inst.check(checks.toUpperCase());\n});\nexport const ZodString = /*@__PURE__*/ core.$constructor(\"ZodString\", (inst, def) => {\n    core.$ZodString.init(inst, def);\n    _ZodString.init(inst, def);\n    inst.email = (params) => inst.check(core._email(ZodEmail, params));\n    inst.url = (params) => inst.check(core._url(ZodURL, params));\n    inst.jwt = (params) => inst.check(core._jwt(ZodJWT, params));\n    inst.emoji = (params) => inst.check(core._emoji(ZodEmoji, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.uuid = (params) => inst.check(core._uuid(ZodUUID, params));\n    inst.uuidv4 = (params) => inst.check(core._uuidv4(ZodUUID, params));\n    inst.uuidv6 = (params) => inst.check(core._uuidv6(ZodUUID, params));\n    inst.uuidv7 = (params) => inst.check(core._uuidv7(ZodUUID, params));\n    inst.nanoid = (params) => inst.check(core._nanoid(ZodNanoID, params));\n    inst.guid = (params) => inst.check(core._guid(ZodGUID, params));\n    inst.cuid = (params) => inst.check(core._cuid(ZodCUID, params));\n    inst.cuid2 = (params) => inst.check(core._cuid2(ZodCUID2, params));\n    inst.ulid = (params) => inst.check(core._ulid(ZodULID, params));\n    inst.base64 = (params) => inst.check(core._base64(ZodBase64, params));\n    inst.base64url = (params) => inst.check(core._base64url(ZodBase64URL, params));\n    inst.xid = (params) => inst.check(core._xid(ZodXID, params));\n    inst.ksuid = (params) => inst.check(core._ksuid(ZodKSUID, params));\n    inst.ipv4 = (params) => inst.check(core._ipv4(ZodIPv4, params));\n    inst.ipv6 = (params) => inst.check(core._ipv6(ZodIPv6, params));\n    inst.cidrv4 = (params) => inst.check(core._cidrv4(ZodCIDRv4, params));\n    inst.cidrv6 = (params) => inst.check(core._cidrv6(ZodCIDRv6, params));\n    inst.e164 = (params) => inst.check(core._e164(ZodE164, params));\n    // iso\n    inst.datetime = (params) => inst.check(iso.datetime(params));\n    inst.date = (params) => inst.check(iso.date(params));\n    inst.time = (params) => inst.check(iso.time(params));\n    inst.duration = (params) => inst.check(iso.duration(params));\n});\nexport function string(params) {\n    return core._string(ZodString, params);\n}\nexport const ZodStringFormat = /*@__PURE__*/ core.$constructor(\"ZodStringFormat\", (inst, def) => {\n    core.$ZodStringFormat.init(inst, def);\n    _ZodString.init(inst, def);\n});\nexport const ZodEmail = /*@__PURE__*/ core.$constructor(\"ZodEmail\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmail.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function email(params) {\n    return core._email(ZodEmail, params);\n}\nexport const ZodGUID = /*@__PURE__*/ core.$constructor(\"ZodGUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodGUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function guid(params) {\n    return core._guid(ZodGUID, params);\n}\nexport const ZodUUID = /*@__PURE__*/ core.$constructor(\"ZodUUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodUUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function uuid(params) {\n    return core._uuid(ZodUUID, params);\n}\nexport function uuidv4(params) {\n    return core._uuidv4(ZodUUID, params);\n}\n// ZodUUIDv6\nexport function uuidv6(params) {\n    return core._uuidv6(ZodUUID, params);\n}\n// ZodUUIDv7\nexport function uuidv7(params) {\n    return core._uuidv7(ZodUUID, params);\n}\nexport const ZodURL = /*@__PURE__*/ core.$constructor(\"ZodURL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodURL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function url(params) {\n    return core._url(ZodURL, params);\n}\nexport const ZodEmoji = /*@__PURE__*/ core.$constructor(\"ZodEmoji\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodEmoji.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function emoji(params) {\n    return core._emoji(ZodEmoji, params);\n}\nexport const ZodNanoID = /*@__PURE__*/ core.$constructor(\"ZodNanoID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodNanoID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function nanoid(params) {\n    return core._nanoid(ZodNanoID, params);\n}\nexport const ZodCUID = /*@__PURE__*/ core.$constructor(\"ZodCUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid(params) {\n    return core._cuid(ZodCUID, params);\n}\nexport const ZodCUID2 = /*@__PURE__*/ core.$constructor(\"ZodCUID2\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCUID2.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cuid2(params) {\n    return core._cuid2(ZodCUID2, params);\n}\nexport const ZodULID = /*@__PURE__*/ core.$constructor(\"ZodULID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodULID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ulid(params) {\n    return core._ulid(ZodULID, params);\n}\nexport const ZodXID = /*@__PURE__*/ core.$constructor(\"ZodXID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodXID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function xid(params) {\n    return core._xid(ZodXID, params);\n}\nexport const ZodKSUID = /*@__PURE__*/ core.$constructor(\"ZodKSUID\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodKSUID.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ksuid(params) {\n    return core._ksuid(ZodKSUID, params);\n}\nexport const ZodIPv4 = /*@__PURE__*/ core.$constructor(\"ZodIPv4\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv4(params) {\n    return core._ipv4(ZodIPv4, params);\n}\nexport const ZodIPv6 = /*@__PURE__*/ core.$constructor(\"ZodIPv6\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodIPv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function ipv6(params) {\n    return core._ipv6(ZodIPv6, params);\n}\nexport const ZodCIDRv4 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv4\", (inst, def) => {\n    core.$ZodCIDRv4.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv4(params) {\n    return core._cidrv4(ZodCIDRv4, params);\n}\nexport const ZodCIDRv6 = /*@__PURE__*/ core.$constructor(\"ZodCIDRv6\", (inst, def) => {\n    core.$ZodCIDRv6.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function cidrv6(params) {\n    return core._cidrv6(ZodCIDRv6, params);\n}\nexport const ZodBase64 = /*@__PURE__*/ core.$constructor(\"ZodBase64\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64(params) {\n    return core._base64(ZodBase64, params);\n}\nexport const ZodBase64URL = /*@__PURE__*/ core.$constructor(\"ZodBase64URL\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodBase64URL.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function base64url(params) {\n    return core._base64url(ZodBase64URL, params);\n}\nexport const ZodE164 = /*@__PURE__*/ core.$constructor(\"ZodE164\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodE164.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function e164(params) {\n    return core._e164(ZodE164, params);\n}\nexport const ZodJWT = /*@__PURE__*/ core.$constructor(\"ZodJWT\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodJWT.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function jwt(params) {\n    return core._jwt(ZodJWT, params);\n}\nexport const ZodCustomStringFormat = /*@__PURE__*/ core.$constructor(\"ZodCustomStringFormat\", (inst, def) => {\n    // ZodStringFormat.init(inst, def);\n    core.$ZodCustomStringFormat.init(inst, def);\n    ZodStringFormat.init(inst, def);\n});\nexport function stringFormat(format, fnOrRegex, _params = {}) {\n    return core._stringFormat(ZodCustomStringFormat, format, fnOrRegex, _params);\n}\nexport function hostname(_params) {\n    return core._stringFormat(ZodCustomStringFormat, \"hostname\", core.regexes.hostname, _params);\n}\nexport const ZodNumber = /*@__PURE__*/ core.$constructor(\"ZodNumber\", (inst, def) => {\n    core.$ZodNumber.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.int = (params) => inst.check(int(params));\n    inst.safe = (params) => inst.check(int(params));\n    inst.positive = (params) => inst.check(checks.gt(0, params));\n    inst.nonnegative = (params) => inst.check(checks.gte(0, params));\n    inst.negative = (params) => inst.check(checks.lt(0, params));\n    inst.nonpositive = (params) => inst.check(checks.lte(0, params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    inst.step = (value, params) => inst.check(checks.multipleOf(value, params));\n    // inst.finite = (params) => inst.check(core.finite(params));\n    inst.finite = () => inst;\n    const bag = inst._zod.bag;\n    inst.minValue =\n        Math.max(bag.minimum ?? Number.NEGATIVE_INFINITY, bag.exclusiveMinimum ?? Number.NEGATIVE_INFINITY) ?? null;\n    inst.maxValue =\n        Math.min(bag.maximum ?? Number.POSITIVE_INFINITY, bag.exclusiveMaximum ?? Number.POSITIVE_INFINITY) ?? null;\n    inst.isInt = (bag.format ?? \"\").includes(\"int\") || Number.isSafeInteger(bag.multipleOf ?? 0.5);\n    inst.isFinite = true;\n    inst.format = bag.format ?? null;\n});\nexport function number(params) {\n    return core._number(ZodNumber, params);\n}\nexport const ZodNumberFormat = /*@__PURE__*/ core.$constructor(\"ZodNumberFormat\", (inst, def) => {\n    core.$ZodNumberFormat.init(inst, def);\n    ZodNumber.init(inst, def);\n});\nexport function int(params) {\n    return core._int(ZodNumberFormat, params);\n}\nexport function float32(params) {\n    return core._float32(ZodNumberFormat, params);\n}\nexport function float64(params) {\n    return core._float64(ZodNumberFormat, params);\n}\nexport function int32(params) {\n    return core._int32(ZodNumberFormat, params);\n}\nexport function uint32(params) {\n    return core._uint32(ZodNumberFormat, params);\n}\nexport const ZodBoolean = /*@__PURE__*/ core.$constructor(\"ZodBoolean\", (inst, def) => {\n    core.$ZodBoolean.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function boolean(params) {\n    return core._boolean(ZodBoolean, params);\n}\nexport const ZodBigInt = /*@__PURE__*/ core.$constructor(\"ZodBigInt\", (inst, def) => {\n    core.$ZodBigInt.init(inst, def);\n    ZodType.init(inst, def);\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.gt = (value, params) => inst.check(checks.gt(value, params));\n    inst.gte = (value, params) => inst.check(checks.gte(value, params));\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.lt = (value, params) => inst.check(checks.lt(value, params));\n    inst.lte = (value, params) => inst.check(checks.lte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    inst.positive = (params) => inst.check(checks.gt(BigInt(0), params));\n    inst.negative = (params) => inst.check(checks.lt(BigInt(0), params));\n    inst.nonpositive = (params) => inst.check(checks.lte(BigInt(0), params));\n    inst.nonnegative = (params) => inst.check(checks.gte(BigInt(0), params));\n    inst.multipleOf = (value, params) => inst.check(checks.multipleOf(value, params));\n    const bag = inst._zod.bag;\n    inst.minValue = bag.minimum ?? null;\n    inst.maxValue = bag.maximum ?? null;\n    inst.format = bag.format ?? null;\n});\nexport function bigint(params) {\n    return core._bigint(ZodBigInt, params);\n}\nexport const ZodBigIntFormat = /*@__PURE__*/ core.$constructor(\"ZodBigIntFormat\", (inst, def) => {\n    core.$ZodBigIntFormat.init(inst, def);\n    ZodBigInt.init(inst, def);\n});\n// int64\nexport function int64(params) {\n    return core._int64(ZodBigIntFormat, params);\n}\n// uint64\nexport function uint64(params) {\n    return core._uint64(ZodBigIntFormat, params);\n}\nexport const ZodSymbol = /*@__PURE__*/ core.$constructor(\"ZodSymbol\", (inst, def) => {\n    core.$ZodSymbol.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function symbol(params) {\n    return core._symbol(ZodSymbol, params);\n}\nexport const ZodUndefined = /*@__PURE__*/ core.$constructor(\"ZodUndefined\", (inst, def) => {\n    core.$ZodUndefined.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _undefined(params) {\n    return core._undefined(ZodUndefined, params);\n}\nexport { _undefined as undefined };\nexport const ZodNull = /*@__PURE__*/ core.$constructor(\"ZodNull\", (inst, def) => {\n    core.$ZodNull.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _null(params) {\n    return core._null(ZodNull, params);\n}\nexport { _null as null };\nexport const ZodAny = /*@__PURE__*/ core.$constructor(\"ZodAny\", (inst, def) => {\n    core.$ZodAny.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function any() {\n    return core._any(ZodAny);\n}\nexport const ZodUnknown = /*@__PURE__*/ core.$constructor(\"ZodUnknown\", (inst, def) => {\n    core.$ZodUnknown.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function unknown() {\n    return core._unknown(ZodUnknown);\n}\nexport const ZodNever = /*@__PURE__*/ core.$constructor(\"ZodNever\", (inst, def) => {\n    core.$ZodNever.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function never(params) {\n    return core._never(ZodNever, params);\n}\nexport const ZodVoid = /*@__PURE__*/ core.$constructor(\"ZodVoid\", (inst, def) => {\n    core.$ZodVoid.init(inst, def);\n    ZodType.init(inst, def);\n});\nfunction _void(params) {\n    return core._void(ZodVoid, params);\n}\nexport { _void as void };\nexport const ZodDate = /*@__PURE__*/ core.$constructor(\"ZodDate\", (inst, def) => {\n    core.$ZodDate.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (value, params) => inst.check(checks.gte(value, params));\n    inst.max = (value, params) => inst.check(checks.lte(value, params));\n    const c = inst._zod.bag;\n    inst.minDate = c.minimum ? new Date(c.minimum) : null;\n    inst.maxDate = c.maximum ? new Date(c.maximum) : null;\n});\nexport function date(params) {\n    return core._date(ZodDate, params);\n}\nexport const ZodArray = /*@__PURE__*/ core.$constructor(\"ZodArray\", (inst, def) => {\n    core.$ZodArray.init(inst, def);\n    ZodType.init(inst, def);\n    inst.element = def.element;\n    inst.min = (minLength, params) => inst.check(checks.minLength(minLength, params));\n    inst.nonempty = (params) => inst.check(checks.minLength(1, params));\n    inst.max = (maxLength, params) => inst.check(checks.maxLength(maxLength, params));\n    inst.length = (len, params) => inst.check(checks.length(len, params));\n    inst.unwrap = () => inst.element;\n});\nexport function array(element, params) {\n    return core._array(ZodArray, element, params);\n}\n// .keyof\nexport function keyof(schema) {\n    const shape = schema._zod.def.shape;\n    return _enum(Object.keys(shape));\n}\nexport const ZodObject = /*@__PURE__*/ core.$constructor(\"ZodObject\", (inst, def) => {\n    core.$ZodObject.init(inst, def);\n    ZodType.init(inst, def);\n    util.defineLazy(inst, \"shape\", () => def.shape);\n    inst.keyof = () => _enum(Object.keys(inst._zod.def.shape));\n    inst.catchall = (catchall) => inst.clone({ ...inst._zod.def, catchall: catchall });\n    inst.passthrough = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.loose = () => inst.clone({ ...inst._zod.def, catchall: unknown() });\n    inst.strict = () => inst.clone({ ...inst._zod.def, catchall: never() });\n    inst.strip = () => inst.clone({ ...inst._zod.def, catchall: undefined });\n    inst.extend = (incoming) => {\n        return util.extend(inst, incoming);\n    };\n    inst.merge = (other) => util.merge(inst, other);\n    inst.pick = (mask) => util.pick(inst, mask);\n    inst.omit = (mask) => util.omit(inst, mask);\n    inst.partial = (...args) => util.partial(ZodOptional, inst, args[0]);\n    inst.required = (...args) => util.required(ZodNonOptional, inst, args[0]);\n});\nexport function object(shape, params) {\n    const def = {\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", shape ? util.objectClone(shape) : {});\n            return this.shape;\n        },\n        ...util.normalizeParams(params),\n    };\n    return new ZodObject(def);\n}\n// strictObject\nexport function strictObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", util.objectClone(shape));\n            return this.shape;\n        },\n        catchall: never(),\n        ...util.normalizeParams(params),\n    });\n}\n// looseObject\nexport function looseObject(shape, params) {\n    return new ZodObject({\n        type: \"object\",\n        get shape() {\n            util.assignProp(this, \"shape\", util.objectClone(shape));\n            return this.shape;\n        },\n        catchall: unknown(),\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodUnion = /*@__PURE__*/ core.$constructor(\"ZodUnion\", (inst, def) => {\n    core.$ZodUnion.init(inst, def);\n    ZodType.init(inst, def);\n    inst.options = def.options;\n});\nexport function union(options, params) {\n    return new ZodUnion({\n        type: \"union\",\n        options: options,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodDiscriminatedUnion = /*@__PURE__*/ core.$constructor(\"ZodDiscriminatedUnion\", (inst, def) => {\n    ZodUnion.init(inst, def);\n    core.$ZodDiscriminatedUnion.init(inst, def);\n});\nexport function discriminatedUnion(discriminator, options, params) {\n    // const [options, params] = args;\n    return new ZodDiscriminatedUnion({\n        type: \"union\",\n        options,\n        discriminator,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodIntersection = /*@__PURE__*/ core.$constructor(\"ZodIntersection\", (inst, def) => {\n    core.$ZodIntersection.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function intersection(left, right) {\n    return new ZodIntersection({\n        type: \"intersection\",\n        left: left,\n        right: right,\n    });\n}\nexport const ZodTuple = /*@__PURE__*/ core.$constructor(\"ZodTuple\", (inst, def) => {\n    core.$ZodTuple.init(inst, def);\n    ZodType.init(inst, def);\n    inst.rest = (rest) => inst.clone({\n        ...inst._zod.def,\n        rest: rest,\n    });\n});\nexport function tuple(items, _paramsOrRest, _params) {\n    const hasRest = _paramsOrRest instanceof core.$ZodType;\n    const params = hasRest ? _params : _paramsOrRest;\n    const rest = hasRest ? _paramsOrRest : null;\n    return new ZodTuple({\n        type: \"tuple\",\n        items: items,\n        rest,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodRecord = /*@__PURE__*/ core.$constructor(\"ZodRecord\", (inst, def) => {\n    core.$ZodRecord.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function record(keyType, valueType, params) {\n    return new ZodRecord({\n        type: \"record\",\n        keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\n// type alksjf = core.output<core.$ZodRecordKey>;\nexport function partialRecord(keyType, valueType, params) {\n    const k = core.clone(keyType);\n    k._zod.values = undefined;\n    return new ZodRecord({\n        type: \"record\",\n        keyType: k,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodMap = /*@__PURE__*/ core.$constructor(\"ZodMap\", (inst, def) => {\n    core.$ZodMap.init(inst, def);\n    ZodType.init(inst, def);\n    inst.keyType = def.keyType;\n    inst.valueType = def.valueType;\n});\nexport function map(keyType, valueType, params) {\n    return new ZodMap({\n        type: \"map\",\n        keyType: keyType,\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSet = /*@__PURE__*/ core.$constructor(\"ZodSet\", (inst, def) => {\n    core.$ZodSet.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (...args) => inst.check(core._minSize(...args));\n    inst.nonempty = (params) => inst.check(core._minSize(1, params));\n    inst.max = (...args) => inst.check(core._maxSize(...args));\n    inst.size = (...args) => inst.check(core._size(...args));\n});\nexport function set(valueType, params) {\n    return new ZodSet({\n        type: \"set\",\n        valueType: valueType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodEnum = /*@__PURE__*/ core.$constructor(\"ZodEnum\", (inst, def) => {\n    core.$ZodEnum.init(inst, def);\n    ZodType.init(inst, def);\n    inst.enum = def.entries;\n    inst.options = Object.values(def.entries);\n    const keys = new Set(Object.keys(def.entries));\n    inst.extract = (values, params) => {\n        const newEntries = {};\n        for (const value of values) {\n            if (keys.has(value)) {\n                newEntries[value] = def.entries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n    inst.exclude = (values, params) => {\n        const newEntries = { ...def.entries };\n        for (const value of values) {\n            if (keys.has(value)) {\n                delete newEntries[value];\n            }\n            else\n                throw new Error(`Key ${value} not found in enum`);\n        }\n        return new ZodEnum({\n            ...def,\n            checks: [],\n            ...util.normalizeParams(params),\n            entries: newEntries,\n        });\n    };\n});\nfunction _enum(values, params) {\n    const entries = Array.isArray(values) ? Object.fromEntries(values.map((v) => [v, v])) : values;\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport { _enum as enum };\n/** @deprecated This API has been merged into `z.enum()`. Use `z.enum()` instead.\n *\n * ```ts\n * enum Colors { red, green, blue }\n * z.enum(Colors);\n * ```\n */\nexport function nativeEnum(entries, params) {\n    return new ZodEnum({\n        type: \"enum\",\n        entries,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLiteral = /*@__PURE__*/ core.$constructor(\"ZodLiteral\", (inst, def) => {\n    core.$ZodLiteral.init(inst, def);\n    ZodType.init(inst, def);\n    inst.values = new Set(def.values);\n    Object.defineProperty(inst, \"value\", {\n        get() {\n            if (def.values.length > 1) {\n                throw new Error(\"This schema contains multiple valid literal values. Use `.values` instead.\");\n            }\n            return def.values[0];\n        },\n    });\n});\nexport function literal(value, params) {\n    return new ZodLiteral({\n        type: \"literal\",\n        values: Array.isArray(value) ? value : [value],\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodFile = /*@__PURE__*/ core.$constructor(\"ZodFile\", (inst, def) => {\n    core.$ZodFile.init(inst, def);\n    ZodType.init(inst, def);\n    inst.min = (size, params) => inst.check(core._minSize(size, params));\n    inst.max = (size, params) => inst.check(core._maxSize(size, params));\n    inst.mime = (types, params) => inst.check(core._mime(Array.isArray(types) ? types : [types], params));\n});\nexport function file(params) {\n    return core._file(ZodFile, params);\n}\nexport const ZodTransform = /*@__PURE__*/ core.$constructor(\"ZodTransform\", (inst, def) => {\n    core.$ZodTransform.init(inst, def);\n    ZodType.init(inst, def);\n    inst._zod.parse = (payload, _ctx) => {\n        payload.addIssue = (issue) => {\n            if (typeof issue === \"string\") {\n                payload.issues.push(util.issue(issue, payload.value, def));\n            }\n            else {\n                // for Zod 3 backwards compatibility\n                const _issue = issue;\n                if (_issue.fatal)\n                    _issue.continue = false;\n                _issue.code ?? (_issue.code = \"custom\");\n                _issue.input ?? (_issue.input = payload.value);\n                _issue.inst ?? (_issue.inst = inst);\n                // _issue.continue ??= true;\n                payload.issues.push(util.issue(_issue));\n            }\n        };\n        const output = def.transform(payload.value, payload);\n        if (output instanceof Promise) {\n            return output.then((output) => {\n                payload.value = output;\n                return payload;\n            });\n        }\n        payload.value = output;\n        return payload;\n    };\n});\nexport function transform(fn) {\n    return new ZodTransform({\n        type: \"transform\",\n        transform: fn,\n    });\n}\nexport const ZodOptional = /*@__PURE__*/ core.$constructor(\"ZodOptional\", (inst, def) => {\n    core.$ZodOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function optional(innerType) {\n    return new ZodOptional({\n        type: \"optional\",\n        innerType: innerType,\n    });\n}\nexport const ZodNullable = /*@__PURE__*/ core.$constructor(\"ZodNullable\", (inst, def) => {\n    core.$ZodNullable.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nullable(innerType) {\n    return new ZodNullable({\n        type: \"nullable\",\n        innerType: innerType,\n    });\n}\n// nullish\nexport function nullish(innerType) {\n    return optional(nullable(innerType));\n}\nexport const ZodDefault = /*@__PURE__*/ core.$constructor(\"ZodDefault\", (inst, def) => {\n    core.$ZodDefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeDefault = inst.unwrap;\n});\nexport function _default(innerType, defaultValue) {\n    return new ZodDefault({\n        type: \"default\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport const ZodPrefault = /*@__PURE__*/ core.$constructor(\"ZodPrefault\", (inst, def) => {\n    core.$ZodPrefault.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function prefault(innerType, defaultValue) {\n    return new ZodPrefault({\n        type: \"prefault\",\n        innerType: innerType,\n        get defaultValue() {\n            return typeof defaultValue === \"function\" ? defaultValue() : util.shallowClone(defaultValue);\n        },\n    });\n}\nexport const ZodNonOptional = /*@__PURE__*/ core.$constructor(\"ZodNonOptional\", (inst, def) => {\n    core.$ZodNonOptional.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function nonoptional(innerType, params) {\n    return new ZodNonOptional({\n        type: \"nonoptional\",\n        innerType: innerType,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodSuccess = /*@__PURE__*/ core.$constructor(\"ZodSuccess\", (inst, def) => {\n    core.$ZodSuccess.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function success(innerType) {\n    return new ZodSuccess({\n        type: \"success\",\n        innerType: innerType,\n    });\n}\nexport const ZodCatch = /*@__PURE__*/ core.$constructor(\"ZodCatch\", (inst, def) => {\n    core.$ZodCatch.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n    inst.removeCatch = inst.unwrap;\n});\nfunction _catch(innerType, catchValue) {\n    return new ZodCatch({\n        type: \"catch\",\n        innerType: innerType,\n        catchValue: (typeof catchValue === \"function\" ? catchValue : () => catchValue),\n    });\n}\nexport { _catch as catch };\nexport const ZodNaN = /*@__PURE__*/ core.$constructor(\"ZodNaN\", (inst, def) => {\n    core.$ZodNaN.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function nan(params) {\n    return core._nan(ZodNaN, params);\n}\nexport const ZodPipe = /*@__PURE__*/ core.$constructor(\"ZodPipe\", (inst, def) => {\n    core.$ZodPipe.init(inst, def);\n    ZodType.init(inst, def);\n    inst.in = def.in;\n    inst.out = def.out;\n});\nexport function pipe(in_, out) {\n    return new ZodPipe({\n        type: \"pipe\",\n        in: in_,\n        out: out,\n        // ...util.normalizeParams(params),\n    });\n}\nexport const ZodReadonly = /*@__PURE__*/ core.$constructor(\"ZodReadonly\", (inst, def) => {\n    core.$ZodReadonly.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function readonly(innerType) {\n    return new ZodReadonly({\n        type: \"readonly\",\n        innerType: innerType,\n    });\n}\nexport const ZodTemplateLiteral = /*@__PURE__*/ core.$constructor(\"ZodTemplateLiteral\", (inst, def) => {\n    core.$ZodTemplateLiteral.init(inst, def);\n    ZodType.init(inst, def);\n});\nexport function templateLiteral(parts, params) {\n    return new ZodTemplateLiteral({\n        type: \"template_literal\",\n        parts,\n        ...util.normalizeParams(params),\n    });\n}\nexport const ZodLazy = /*@__PURE__*/ core.$constructor(\"ZodLazy\", (inst, def) => {\n    core.$ZodLazy.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.getter();\n});\nexport function lazy(getter) {\n    return new ZodLazy({\n        type: \"lazy\",\n        getter: getter,\n    });\n}\nexport const ZodPromise = /*@__PURE__*/ core.$constructor(\"ZodPromise\", (inst, def) => {\n    core.$ZodPromise.init(inst, def);\n    ZodType.init(inst, def);\n    inst.unwrap = () => inst._zod.def.innerType;\n});\nexport function promise(innerType) {\n    return new ZodPromise({\n        type: \"promise\",\n        innerType: innerType,\n    });\n}\nexport const ZodCustom = /*@__PURE__*/ core.$constructor(\"ZodCustom\", (inst, def) => {\n    core.$ZodCustom.init(inst, def);\n    ZodType.init(inst, def);\n});\n// custom checks\nexport function check(fn) {\n    const ch = new core.$ZodCheck({\n        check: \"custom\",\n        // ...util.normalizeParams(params),\n    });\n    ch._zod.check = fn;\n    return ch;\n}\nexport function custom(fn, _params) {\n    return core._custom(ZodCustom, fn ?? (() => true), _params);\n}\nexport function refine(fn, _params = {}) {\n    return core._refine(ZodCustom, fn, _params);\n}\n// superRefine\nexport function superRefine(fn) {\n    return core._superRefine(fn);\n}\nfunction _instanceof(cls, params = {\n    error: `Input not instance of ${cls.name}`,\n}) {\n    const inst = new ZodCustom({\n        type: \"custom\",\n        check: \"custom\",\n        fn: (data) => data instanceof cls,\n        abort: true,\n        ...util.normalizeParams(params),\n    });\n    inst._zod.bag.Class = cls;\n    return inst;\n}\nexport { _instanceof as instanceof };\n// stringbool\nexport const stringbool = (...args) => core._stringbool({\n    Pipe: ZodPipe,\n    Boolean: ZodBoolean,\n    String: ZodString,\n    Transform: ZodTransform,\n}, ...args);\nexport function json(params) {\n    const jsonSchema = lazy(() => {\n        return union([string(params), number(), boolean(), _null(), array(jsonSchema), record(string(), jsonSchema)]);\n    });\n    return jsonSchema;\n}\n// preprocess\n// /** @deprecated Use `z.pipe()` and `z.transform()` instead. */\nexport function preprocess(fn, schema) {\n    return pipe(transform(fn), schema);\n}\n","import React, { useState } from 'react';\nimport { z } from 'zod';\nimport {\n  // Layout\n  Container,\n  Section,\n  Grid,\n  Flex,\n  // Typography\n  Heading,\n  Text,\n  // Navigation\n  SimpleNavbar,\n  // Hero\n  Hero,\n  HeroTitle,\n  HeroSubtitle,\n  HeroContent,\n  HeroActions,\n  // Features\n  Feature,\n  FeatureIcon,\n  FeatureTitle,\n  FeatureDescription,\n  FeaturesGrid,\n  // Cards\n  Card,\n  CardHeader,\n  CardTitle,\n  CardDescription,\n  CardContent,\n  CardFooter,\n  CardImage,\n  // Forms\n  Form,\n  Field,\n  Select,\n  Checkbox,\n  // Inputs\n  Input,\n  Textarea,\n  Button,\n  // Footer\n  Footer,\n  FooterSection,\n  FooterTitle,\n  FooterLink,\n  FooterLinks,\n  FooterGrid,\n  FooterBottom,\n  // Utilities\n  Badge,\n  Favicon\n} from '../index';\n\n// Contact form schema\nconst contactSchema = z.object({\n  name: z.string().min(2, 'Name must be at least 2 characters'),\n  email: z.string().email('Invalid email address'),\n  subject: z.string().min(1, 'Please select a subject'),\n  message: z.string().min(10, 'Message must be at least 10 characters'),\n  terms: z.boolean().refine((val) => val === true, {\n    message: 'You must accept the terms'\n  })\n});\n\ntype ContactFormData = z.infer<typeof contactSchema>;\n\nexport interface QwanyxTemplateProps {\n  companyName?: string;\n  tagline?: string;\n  primaryColor?: string;\n  accentColor?: string;\n}\n\nexport const QwanyxTemplate: React.FC<QwanyxTemplateProps> = ({\n  companyName = 'QWANYX',\n  tagline = 'Build Amazing Digital Experiences'\n}) => {\n  const [isScrolled, setIsScrolled] = useState(false);\n\n  // Handle scroll for navbar effect\n  React.useEffect(() => {\n    const handleScroll = () => {\n      setIsScrolled(window.scrollY > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  const handleContactSubmit = (data: ContactFormData) => {\n    console.log('Contact form submitted:', data);\n    alert('Thank you for your message! We will get back to you soon.');\n  };\n\n  const subjects = [\n    { value: '', label: 'Choose a subject', disabled: true },\n    { value: 'general', label: 'General Inquiry' },\n    { value: 'support', label: 'Technical Support' },\n    { value: 'sales', label: 'Sales' },\n    { value: 'partnership', label: 'Partnership' },\n    { value: 'other', label: 'Other' }\n  ];\n\n  const navItems = [\n    { label: 'Home', href: '#home', active: true },\n    { label: 'Features', href: '#features' },\n    { label: 'Services', href: '#services' },\n    { label: 'About', href: '#about' },\n    { label: 'Contact', href: '#contact' }\n  ];\n\n  return (\n    <>\n      <Favicon autoDetect={true} />\n      \n      {/* Navigation */}\n      <SimpleNavbar\n        title={companyName}\n        fixed={true}\n        className={`transition-all duration-300 ${\n          isScrolled ? 'bg-white shadow-lg' : 'bg-transparent'\n        }`}\n        items={navItems}\n        actions={\n          <Button variant=\"solid\" color=\"primary\" size=\"sm\">\n            Get Started\n          </Button>\n        }\n      />\n\n      {/* Hero Section */}\n      <Hero \n        id=\"home\"\n        size=\"lg\" \n        className=\"bg-gradient-to-br from-blue-600 to-purple-600 text-white\"\n        style={{ paddingTop: '100px' }}\n      >\n        <HeroContent>\n          <HeroTitle className=\"text-5xl md:text-6xl font-bold mb-6\">\n            {tagline}\n          </HeroTitle>\n          <HeroSubtitle className=\"text-xl md:text-2xl mb-8 opacity-90\">\n            Transform your ideas into reality with our cutting-edge solutions\n          </HeroSubtitle>\n          <HeroActions>\n            <Button size=\"lg\" variant=\"solid\" className=\"bg-white text-gray-900 hover:bg-gray-100\">\n              Start Free Trial\n            </Button>\n            <Button size=\"lg\" variant=\"outline\" className=\"border-white text-white hover:bg-white hover:text-gray-900\">\n              Watch Demo\n            </Button>\n          </HeroActions>\n        </HeroContent>\n      </Hero>\n\n      {/* Features Section */}\n      <Section id=\"features\" spacing=\"xl\" className=\"bg-gray-50\">\n        <Container>\n          <div className=\"text-center mb-12\">\n            <Heading as=\"h2\" className=\"text-4xl font-bold mb-4\">\n              Why Choose {companyName}?\n            </Heading>\n            <Text className=\"text-xl text-gray-600\">\n              Discover the features that make us stand out\n            </Text>\n          </div>\n\n          <FeaturesGrid cols={3}>\n            <Feature centered>\n              <FeatureIcon size=\"lg\" color=\"primary\" className=\"mb-4\">\n                <svg className=\"w-12 h-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M13 10V3L4 14h7v7l9-11h-7z\" />\n                </svg>\n              </FeatureIcon>\n              <FeatureTitle className=\"text-xl font-semibold mb-2\">\n                Lightning Fast\n              </FeatureTitle>\n              <FeatureDescription className=\"text-gray-600\">\n                Optimized performance with incredible speed. Your applications will run smoother than ever.\n              </FeatureDescription>\n            </Feature>\n\n            <Feature centered>\n              <FeatureIcon size=\"lg\" color=\"success\" className=\"mb-4\">\n                <svg className=\"w-12 h-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z\" />\n                </svg>\n              </FeatureIcon>\n              <FeatureTitle className=\"text-xl font-semibold mb-2\">\n                Secure by Default\n              </FeatureTitle>\n              <FeatureDescription className=\"text-gray-600\">\n                Enterprise-grade security built into every layer. Your data is protected with the latest encryption.\n              </FeatureDescription>\n            </Feature>\n\n            <Feature centered>\n              <FeatureIcon size=\"lg\" color=\"accent\" className=\"mb-4\">\n                <svg className=\"w-12 h-12\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} \n                    d=\"M7 21a4 4 0 01-4-4V5a2 2 0 012-2h4a2 2 0 012 2v12a4 4 0 01-4 4zm0 0h12a2 2 0 002-2v-4a2 2 0 00-2-2h-2.343M11 7.343l1.657-1.657a2 2 0 012.828 0l2.829 2.829a2 2 0 010 2.828l-8.486 8.485M7 17h.01\" />\n                </svg>\n              </FeatureIcon>\n              <FeatureTitle className=\"text-xl font-semibold mb-2\">\n                Fully Customizable\n              </FeatureTitle>\n              <FeatureDescription className=\"text-gray-600\">\n                Tailor every aspect to match your brand. Complete control over colors, layouts, and functionality.\n              </FeatureDescription>\n            </Feature>\n          </FeaturesGrid>\n        </Container>\n      </Section>\n\n      {/* Services/Products Section */}\n      <Section id=\"services\" spacing=\"xl\">\n        <Container>\n          <div className=\"text-center mb-12\">\n            <Heading as=\"h2\" className=\"text-4xl font-bold mb-4\">\n              Our Services\n            </Heading>\n            <Text className=\"text-xl text-gray-600\">\n              Professional solutions tailored to your needs\n            </Text>\n          </div>\n\n          <Grid cols={3} gap=\"lg\">\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardImage \n                src=\"https://images.unsplash.com/photo-1556761175-b413da4baf72?w=400&h=250&fit=crop\" \n                alt=\"Business Strategy\"\n              />\n              <CardHeader>\n                <CardTitle>Business Consulting</CardTitle>\n                <CardDescription>Strategic planning for growth</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Text>\n                  Expert guidance to transform your business operations and maximize efficiency with proven strategies.\n                </Text>\n              </CardContent>\n              <CardFooter>\n                <Button fullWidth variant=\"outline\">Learn More</Button>\n              </CardFooter>\n            </Card>\n\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardImage \n                src=\"https://images.unsplash.com/photo-1460925895917-afdab827c52f?w=400&h=250&fit=crop\" \n                alt=\"Digital Solutions\"\n              />\n              <CardHeader>\n                <CardTitle>Digital Transformation</CardTitle>\n                <CardDescription>Modernize your infrastructure</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Text>\n                  Comprehensive digital solutions to streamline your workflows and enhance productivity across teams.\n                </Text>\n              </CardContent>\n              <CardFooter>\n                <Button fullWidth variant=\"outline\">Learn More</Button>\n              </CardFooter>\n            </Card>\n\n            <Card className=\"hover:shadow-lg transition-shadow\">\n              <CardImage \n                src=\"https://images.unsplash.com/photo-1551434678-e076c223a692?w=400&h=250&fit=crop\" \n                alt=\"Team Training\"\n              />\n              <CardHeader>\n                <CardTitle>Team Development</CardTitle>\n                <CardDescription>Empower your workforce</CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Text>\n                  Professional training programs designed to upskill your team and foster a culture of innovation.\n                </Text>\n              </CardContent>\n              <CardFooter>\n                <Button fullWidth variant=\"outline\">Learn More</Button>\n              </CardFooter>\n            </Card>\n          </Grid>\n        </Container>\n      </Section>\n\n      {/* Stats Section */}\n      <Section spacing=\"lg\" className=\"bg-gray-900 text-white\">\n        <Container>\n          <Grid cols={4} gap=\"lg\">\n            <div className=\"text-center\">\n              <Heading as=\"h3\" className=\"text-4xl font-bold mb-2\">500+</Heading>\n              <Text className=\"text-gray-400\">Happy Clients</Text>\n            </div>\n            <div className=\"text-center\">\n              <Heading as=\"h3\" className=\"text-4xl font-bold mb-2\">1000+</Heading>\n              <Text className=\"text-gray-400\">Projects Completed</Text>\n            </div>\n            <div className=\"text-center\">\n              <Heading as=\"h3\" className=\"text-4xl font-bold mb-2\">50+</Heading>\n              <Text className=\"text-gray-400\">Team Members</Text>\n            </div>\n            <div className=\"text-center\">\n              <Heading as=\"h3\" className=\"text-4xl font-bold mb-2\">10+</Heading>\n              <Text className=\"text-gray-400\">Years Experience</Text>\n            </div>\n          </Grid>\n        </Container>\n      </Section>\n\n      {/* Contact Section */}\n      <Section id=\"contact\" spacing=\"xl\" className=\"bg-gray-50\">\n        <Container>\n          <div className=\"text-center mb-12\">\n            <Heading as=\"h2\" className=\"text-4xl font-bold mb-4\">\n              Get In Touch\n            </Heading>\n            <Text className=\"text-xl text-gray-600\">\n              We'd love to hear from you. Send us a message and we'll respond as soon as possible.\n            </Text>\n          </div>\n\n          <Card className=\"shadow-lg\">\n            <CardContent>\n              <Form<ContactFormData>\n                onSubmit={handleContactSubmit}\n                schema={contactSchema}\n                defaultValues={{\n                  name: '',\n                  email: '',\n                  subject: '',\n                  message: '',\n                  terms: false\n                }}\n              >\n                <div className=\"space-y-6\">\n                  <Grid cols={2} gap=\"md\">\n                    <Field name=\"name\" label=\"Your Name\" required>\n                      <Input name=\"name\" placeholder=\"John Doe\" fullWidth />\n                    </Field>\n                    \n                    <Field name=\"email\" label=\"Email Address\" required>\n                      <Input name=\"email\" type=\"email\" placeholder=\"john@example.com\" fullWidth />\n                    </Field>\n                  </Grid>\n\n                  <Field name=\"subject\" label=\"Subject\" required>\n                    <Select name=\"subject\" options={subjects} fullWidth />\n                  </Field>\n\n                  <Field name=\"message\" label=\"Message\" required>\n                    <Textarea \n                      name=\"message\" \n                      placeholder=\"Tell us about your project...\" \n                      rows={6} \n                      fullWidth \n                    />\n                  </Field>\n\n                  <Checkbox \n                    name=\"terms\" \n                    label=\"I agree to the terms and conditions and privacy policy\"\n                  />\n\n                  <Button type=\"submit\" variant=\"solid\" color=\"primary\" size=\"lg\" fullWidth>\n                    Send Message\n                  </Button>\n                </div>\n              </Form>\n            </CardContent>\n          </Card>\n        </Container>\n      </Section>\n\n      {/* Footer */}\n      <Footer className=\"bg-gray-900 text-white\">\n        <Container>\n          <FooterGrid cols={4}>\n            <FooterSection>\n              <Heading as=\"h4\" className=\"text-xl font-bold mb-4\">{companyName}</Heading>\n              <Text className=\"text-gray-400 mb-4\">\n                Building the future of digital experiences, one project at a time.\n              </Text>\n              <Flex gap=\"sm\">\n                <Badge variant=\"outline\" color=\"primary\">Innovation</Badge>\n                <Badge variant=\"outline\" color=\"success\">Quality</Badge>\n              </Flex>\n            </FooterSection>\n\n            <FooterSection>\n              <FooterTitle>Products</FooterTitle>\n              <FooterLinks>\n                <FooterLink href=\"#\">Features</FooterLink>\n                <FooterLink href=\"#\">Pricing</FooterLink>\n                <FooterLink href=\"#\">Documentation</FooterLink>\n                <FooterLink href=\"#\">API Reference</FooterLink>\n              </FooterLinks>\n            </FooterSection>\n\n            <FooterSection>\n              <FooterTitle>Company</FooterTitle>\n              <FooterLinks>\n                <FooterLink href=\"#\">About Us</FooterLink>\n                <FooterLink href=\"#\">Careers</FooterLink>\n                <FooterLink href=\"#\">Blog</FooterLink>\n                <FooterLink href=\"#\">Press Kit</FooterLink>\n              </FooterLinks>\n            </FooterSection>\n\n            <FooterSection>\n              <FooterTitle>Support</FooterTitle>\n              <FooterLinks>\n                <FooterLink href=\"#\">Help Center</FooterLink>\n                <FooterLink href=\"#\">Contact Us</FooterLink>\n                <FooterLink href=\"#\">Status</FooterLink>\n                <FooterLink href=\"#\">Terms of Service</FooterLink>\n              </FooterLinks>\n            </FooterSection>\n          </FooterGrid>\n\n          <FooterBottom className=\"border-t border-gray-800 mt-8 pt-8\">\n            <Flex justify=\"between\" align=\"center\">\n              <Text className=\"text-gray-400\">\n                © 2024 {companyName}. All rights reserved.\n              </Text>\n              <Flex gap=\"md\">\n                <FooterLink href=\"#\" className=\"text-gray-400 hover:text-white\">\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z\"/>\n                  </svg>\n                </FooterLink>\n                <FooterLink href=\"#\" className=\"text-gray-400 hover:text-white\">\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z\"/>\n                  </svg>\n                </FooterLink>\n                <FooterLink href=\"#\" className=\"text-gray-400 hover:text-white\">\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 0C5.373 0 0 5.373 0 12s5.373 12 12 12 12-5.373 12-12S18.627 0 12 0zm5.894 8.221l-1.97 9.28c-.145.658-.537.818-1.084.508l-3-2.21-1.446 1.394c-.14.18-.357.295-.6.295-.002 0-.003 0-.005 0l.213-3.054 5.56-5.022c.24-.213-.054-.334-.373-.121l-6.869 4.326-2.96-.924c-.64-.203-.658-.64.135-.954l11.566-4.458c.538-.196 1.006.128.832.941z\"/>\n                  </svg>\n                </FooterLink>\n                <FooterLink href=\"#\" className=\"text-gray-400 hover:text-white\">\n                  <svg className=\"w-5 h-5\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zM5.838 12a6.162 6.162 0 1112.324 0 6.162 6.162 0 01-12.324 0zM12 16a4 4 0 110-8 4 4 0 010 8zm4.965-10.405a1.44 1.44 0 112.881.001 1.44 1.44 0 01-2.881-.001z\"/>\n                  </svg>\n                </FooterLink>\n              </Flex>\n            </Flex>\n          </FooterBottom>\n        </Container>\n      </Footer>\n    </>\n  );\n};"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","getComponentNameFromType","REACT_CLIENT_REFERENCE","REACT_PROFILER_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_ACTIVITY_TYPE","REACT_PORTAL_TYPE","REACT_CONTEXT_TYPE","REACT_CONSUMER_TYPE","REACT_FORWARD_REF_TYPE","innerType","REACT_MEMO_TYPE","REACT_LAZY_TYPE","testStringCoercion","value","checkKeyStringCoercion","JSCompiler_inline_result","JSCompiler_temp_const","JSCompiler_inline_result$jscomp$0","getTaskName","name","getOwner","dispatcher","ReactSharedInternals","UnknownOwner","hasValidKey","hasOwnProperty","getter","defineKeyPropWarningGetter","props","displayName","warnAboutAccessingKey","specialPropKeyWarningShown","elementRefGetterWithDeprecationWarning","componentName","didWarnAboutElementRef","ReactElement","self","source","owner","debugStack","debugTask","jsxDEVImpl","isStaticChildren","children","isArrayImpl","validateChildKeys","keys","k","didWarnAboutKeySpread","node","React","require$$0","createTask","callStackForError","unknownOwnerDebugStack","unknownOwnerDebugTask","reactJsxRuntime_development","trackActualOwner","jsxRuntimeModule","require$$1","ThemeContext","createContext","useTheme","context","useContext","hexToRgb","hex","char","result","applyTheme","theme","root","rgbValue","varName","defaultThemes","ThemeProvider","defaultTheme","setThemeState","useState","themes","setThemes","useEffect","savedTheme","parsed","e","savedThemes","setTheme","newTheme","addTheme","updatedThemes","customThemes","t","dt","removeTheme","jsx","autodinTheme","belgicomicsTheme","getThemeByWorkspace","workspace","getAllThemes","WorkspaceContext","WorkspaceProvider","defaultWorkspace","apiUrl","setWorkspaceState","user","setUser","token","setToken","currentTheme","setCurrentTheme","templates","setTemplates","storedToken","storedUser","apiCall","endpoint","options","headers","response","error","login","newUser","newToken","logout","saveTheme","loadThemes","allThemes","workspaceTheme","deleteTheme","saveTemplate","loadTemplates","setWorkspace","newWorkspace","useWorkspace","Button","variant","color","size","fullWidth","loading","icon","iconPosition","className","disabled","ref","classNames","spinner","jsxs","Card","padding","hoverable","CardHeader","CardTitle","Component","CardDescription","CardContent","CardFooter","CardImage","aspectRatio","alt","aspectClasses","isCheckBoxInput","element","isDateObject","isNullOrUndefined","isObjectType","isObject","getEventValue","event","getNodeParentName","isNameInFieldArray","names","isPlainObject","tempObject","prototypeCopy","isWeb","cloneObject","data","copy","isArray","isFileListInstance","isKey","isUndefined","val","compact","stringToPath","input","get","object","path","defaultValue","isBoolean","set","index","tempPath","length","lastIndex","newValue","objValue","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","HookFormContext","useFormContext","FormProvider","getProxyFormState","formState","control","localProxyFormState","isRoot","_key","useIsomorphicLayoutEffect","isString","generateWatchOutput","_names","formValues","isGlobal","fieldName","isPrimitive","deepEqual","object1","object2","_internal_visited","keys1","keys2","val1","val2","appendErrors","validateAllFieldCriteria","errors","message","convertToArrayPayload","createSubject","_observers","observer","isEmptyObject","isFileInput","isFunction","isHTMLElement","isMultipleSelect","isRadioInput","isRadioOrCheckbox","live","baseGet","updatePath","isEmptyArray","obj","unset","paths","childObject","objectHasFunction","markFieldsDirty","fields","isParentNodeArray","getDirtyFieldsFromDefaultValues","dirtyFieldsFromValues","getDirtyFields","defaultValues","defaultResult","validResult","getCheckboxValue","values","option","getFieldValueAs","valueAsNumber","valueAsDate","setValueAs","defaultReturn","getRadioValue","previous","getFieldValue","_f","getResolverOptions","fieldsNames","_fields","criteriaMode","shouldUseNativeValidation","field","isRegex","getRuleValue","rule","getValidationModes","mode","ASYNC_FUNCTION","hasPromiseValidation","fieldReference","validateFunction","hasValidation","isWatched","isBlurEvent","watchName","iterateFieldsByAction","action","abortEarly","currentField","schemaErrorLookup","foundError","shouldRenderFormState","formStateData","_proxyFormState","updateFormState","shouldSubscribeByName","signalName","exact","currentName","skipValidation","isTouched","isSubmitted","reValidateMode","unsetEmptyArray","updateFieldArrayRootError","fieldArrayErrors","isMessage","getValidateError","getValueAndMessage","validationData","validateField","disabledFieldNames","isFieldArray","refs","required","maxLength","minLength","min","max","pattern","validate","mount","inputValue","inputRef","setCustomValidity","isRadio","isCheckBox","isEmpty","appendErrorsCurry","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","exceedMin","maxOutput","minOutput","valueNumber","valueDate","convertTimeToDate","time","isTime","isWeek","maxLengthOutput","minLengthOutput","patternValue","validateError","validationResult","defaultOptions","createFormControl","_options","_formState","_defaultValues","_formValues","_state","delayErrorCallback","timer","_proxySubscribeFormState","_subjects","shouldDisplayAllAssociatedErrors","debounce","callback","wait","_setValid","shouldUpdateValid","isValid","_runSchema","executeBuiltInValidation","_updateIsValidating","isValidating","_setFieldArray","method","args","shouldSetValues","shouldUpdateFieldsAndState","fieldValues","touchedFields","_getDirty","updateErrors","_setErrors","updateValidAndValue","shouldSkipSetValueAs","setFieldValue","updateTouchAndDirty","fieldValue","shouldDirty","shouldRender","shouldUpdateField","isPreviousDirty","output","isCurrentFieldPristine","isPreviousFieldTouched","shouldRenderByError","fieldState","previousFieldError","updatedFormState","executeSchemaAndUpdateState","shouldOnlyCheckValid","isFieldArrayRoot","isPromiseFunction","fieldError","_removeUnmounted","unregister","getValues","_getWatch","_getFieldArray","optionRef","checkboxRef","radioRef","trigger","setValues","fieldKey","setValue","cloneValue","onChange","target","isFieldValueUpdated","_updateIsFieldValueUpdated","validationModeBeforeSubmit","validationModeAfterSubmit","shouldSkipValidation","watched","previousErrorLookupResult","errorLookupResult","_focusInput","fieldNames","getFieldState","clearErrors","inputName","setError","currentError","currentRef","restOfErrorTree","watch","payload","_subscribe","_setFormState","subscribe","_setDisabledField","register","disabledIsDefined","fieldRef","radioOrCheckbox","_focusError","_disableForm","handleSubmit","onValid","onInvalid","onValidError","resetField","_reset","keepStateOptions","updatedValues","cloneUpdatedValues","isEmptyResetValues","fieldsToCheck","form","reset","setFocus","methods","useForm","_formControl","_values","formControl","rest","sub","isDirty","state","Input","inputSize","success","formContext","registration","inputClasses","wrapperClasses","iconClasses","Textarea","textareaSize","resize","textareaClasses","Heading","weight","align","autoSize","sizeClasses","weightClasses","colorClasses","alignClasses","combinedClassName","Text","italic","underline","lineThrough","style","decorationClasses","Code","language","Container","center","Section","spacing","fullHeight","Grid","cols","gap","responsive","Flex","direction","wrap","justify","Navbar","fixed","transparent","bordered","NavbarBrand","NavbarLogo","NavbarContent","NavbarItem","active","href","onClick","NavbarMenu","mobile","open","SimpleNavbar","logo","title","subtitle","items","actions","mobileMenuOpen","setMobileMenuOpen","item","TabsContext","Tabs","onValueChange","internalValue","setInternalValue","activeTab","setActiveTab","id","TabsList","baseClasses","variantClasses","widthClass","child","TabsTrigger","isActive","handleClick","TabsContent","SimpleTabs","tabs","defaultTab","_a","tab","Hero","centered","overlay","overlayOpacity","backgroundImage","backgroundColor","centerClasses","backgroundStyle","HeroTitle","HeroSubtitle","HeroContent","HeroActions","Feature","layoutClasses","iconSpacingClasses","FeatureIcon","FeatureTitle","FeatureDescription","FeaturesGrid","colsClasses","gapClasses","Footer","FooterSection","FooterTitle","FooterLink","FooterLinks","FooterGrid","FooterBottom","Badge","rounded","IconBadge","ClosableBadge","onClose","DotBadge","dot","dotPosition","dotColor","Avatar","src","shape","fallback","status","statusPosition","renderFallback","AvatarGroup","childrenArray","visibleChildren","remainingCount","InitialsAvatar","getInitials","parts","getColorIndexFromName","hash","i","getColorClass","Modal","isOpen","closeOnOverlayClick","closeOnEscape","showCloseButton","overlayClassName","modalRef","useRef","handleEscape","handleOverlayClick","combinedOverlayClassName","combinedModalClassName","createPortal","ModalHeader","ModalTitle","ModalDescription","ModalBody","ModalFooter","SimpleModal","description","footer","Alert","dismissible","onDismiss","icons","OTPInput","onComplete","autoFocus","digits","setDigits","initialDigits","inputRefs","handleChange","digit","newDigits","handleKeyDown","_b","_c","handlePaste","pastedData","paddedDigits","nextEmptyIndex","d","focusIndex","handleFocus","_","el","OTPTimer","duration","onExpire","onResend","canResend","timeLeft","setTimeLeft","expired","setExpired","prev","formatTime","seconds","mins","secs","handleResend","AuthModal","initialMode","onSuccess","setMode","step","setStep","email","setEmail","code","setCode","setLoading","setSuccess","handleSendCode","handleVerifyCode","handleReset","toggleMode","Fragment","AuthStatus","onLogin","onLogout","userStr","Favicon","autoDetect","favicon","setFavicon","tryNextFavicon","generateTextFavicon","img","extension","link","appleLink","text","canvas","ctx","blob","url","useFavicon","faviconHref","possiblePaths","tryFavicon","resolve","reject","workingPath","r","o","s","n","f","c","$constructor","initializer","params","init","inst","def","Parent","Definition","fn","$ZodAsyncError","globalConfig","newConfig","getEnumValues","entries","numericValues","v","jsonStringifyReplacer","cached","nullish","cleanRegex","start","end","EVALUATING","defineLazy","objectClone","assignProp","prop","mergeDefs","defs","mergedDescriptors","descriptors","esc","str","captureStackTrace","_args","allowsEval","F","ctor","prot","shallowClone","propertyKeyTypes","escapeRegex","clone","cl","normalizeParams","_params","optionalKeys","pick","schema","mask","currDef","newShape","omit","extend","_shape","merge","a","b","partial","Class","oldShape","aborted","x","startIndex","prefixIssues","issues","iss","unwrapMessage","finalizeIssue","full","_d","_e","getLengthableOrigin","issue","util.jsonStringifyReplacer","$ZodError","$ZodRealError","flattenError","mapper","fieldErrors","formErrors","formatError","_mapper","processError","curr","_parse","_Err","_ctx","core.$ZodAsyncError","util.finalizeIssue","core.config","util.captureStackTrace","parse","errors.$ZodRealError","_parseAsync","parseAsync","_safeParse","errors.$ZodError","safeParse","_safeParseAsync","safeParseAsync","cuid","cuid2","ulid","xid","ksuid","nanoid","guid","uuid","version","_emoji","emoji","ipv4","ipv6","cidrv4","cidrv6","base64","base64url","hostname","e164","dateSource","date","timeSource","hhmm","datetime","opts","timeRegex","string","regex","boolean","lowercase","uppercase","$ZodCheck","core.$constructor","$ZodCheckMaxLength","util.nullish","origin","util.getLengthableOrigin","$ZodCheckMinLength","$ZodCheckLengthEquals","bag","tooBig","$ZodCheckStringFormat","$ZodCheckRegex","$ZodCheckLowerCase","regexes.lowercase","$ZodCheckUpperCase","regexes.uppercase","$ZodCheckIncludes","escapedRegex","util.escapeRegex","$ZodCheckStartsWith","$ZodCheckEndsWith","$ZodCheckOverwrite","Doc","arg","lines","minIndent","dedented","line","$ZodType","checks","ch","runChecks","isAborted","util.aborted","asyncResult","currLen","$ZodString","regexes.string","$ZodStringFormat","checks.$ZodCheckStringFormat","$ZodGUID","regexes.guid","$ZodUUID","regexes.uuid","$ZodEmail","regexes.email","$ZodURL","trimmed","regexes.hostname","$ZodEmoji","regexes.emoji","$ZodNanoID","regexes.nanoid","$ZodCUID","regexes.cuid","$ZodCUID2","regexes.cuid2","$ZodULID","regexes.ulid","$ZodXID","regexes.xid","$ZodKSUID","regexes.ksuid","$ZodISODateTime","regexes.datetime","$ZodISODate","regexes.date","$ZodISOTime","regexes.time","$ZodISODuration","regexes.duration","$ZodIPv4","regexes.ipv4","$ZodIPv6","regexes.ipv6","$ZodCIDRv4","regexes.cidrv4","$ZodCIDRv6","regexes.cidrv6","address","prefix","prefixNum","isValidBase64","$ZodBase64","regexes.base64","isValidBase64URL","regexes.base64url","padded","$ZodBase64URL","$ZodE164","regexes.e164","isValidJWT","algorithm","tokensParts","header","parsedHeader","$ZodJWT","$ZodBoolean","regexes.boolean","$ZodUnknown","$ZodNever","handleArrayResult","final","util.prefixIssues","$ZodArray","proms","handlePropertyResult","$ZodObject","_normalized","util.cached","okeys","util.optionalKeys","util.defineLazy","propValues","generateFastpass","doc","normalized","parseStr","util.esc","ids","counter","fastpass","util.isObject","jit","core.globalConfig","fastEnabled","util.allowsEval","catchall","unrecognized","keySet","_catchall","handleUnionResults","results","nonaborted","$ZodUnion","patterns","p","util.cleanRegex","single","first","async","$ZodIntersection","left","right","handleIntersectionResults","mergeValues","util.isPlainObject","bKeys","sharedKeys","newObj","sharedValue","newArray","itemA","itemB","merged","$ZodEnum","util.getEnumValues","valuesSet","util.propertyKeyTypes","$ZodTransform","_out","handleOptionalResult","$ZodOptional","$ZodNullable","$ZodDefault","handleDefaultResult","$ZodPrefault","$ZodNonOptional","handleNonOptionalResult","$ZodCatch","$ZodPipe","handlePipeResult","$ZodReadonly","handleReadonlyResult","$ZodCustom","checks.$ZodCheck","handleRefineResult","_iss","util.issue","$ZodRegistry","_meta","meta","pm","registry","globalRegistry","_string","util.normalizeParams","_email","_guid","_uuid","_uuidv4","_uuidv6","_uuidv7","_url","_nanoid","_cuid","_cuid2","_ulid","_xid","_ksuid","_ipv4","_ipv6","_cidrv4","_cidrv6","_base64","_base64url","_e164","_jwt","_isoDateTime","_isoDate","_isoTime","_isoDuration","_boolean","_unknown","_never","_maxLength","maximum","checks.$ZodCheckMaxLength","_minLength","minimum","checks.$ZodCheckMinLength","_length","checks.$ZodCheckLengthEquals","_regex","checks.$ZodCheckRegex","_lowercase","checks.$ZodCheckLowerCase","_uppercase","checks.$ZodCheckUpperCase","_includes","includes","checks.$ZodCheckIncludes","_startsWith","checks.$ZodCheckStartsWith","_endsWith","suffix","checks.$ZodCheckEndsWith","_overwrite","tx","checks.$ZodCheckOverwrite","_normalize","_trim","_toLowerCase","_toUpperCase","_array","_refine","_superRefine","_check","_issue","u","n.parse","n.parseAsync","n.$ZodError","FormStyleContext","Form","onSubmit","externalMethods","internalMethods","useReactHookForm","zodResolver","Field","label","help","horizontal","fieldClass","labelClass","bodyClass","Control","leftIcon","rightIcon","controlClass","Select","placeholder","multiple","rules","formSize","selectClass","Checkbox","checked","actualSize","textSizeClasses","Radio","FileInput","accept","boxed","files","fileInputClass","ZodISODateTime","core.$ZodISODateTime","schemas.ZodStringFormat","core._isoDateTime","ZodISODate","core.$ZodISODate","core._isoDate","ZodISOTime","core.$ZodISOTime","core._isoTime","ZodISODuration","core.$ZodISODuration","core._isoDuration","core.formatError","core.flattenError","ZodRealError","core._parse","core._parseAsync","core._safeParse","core._safeParseAsync","ZodType","core.$ZodType","core.clone","reg","parse.parse","parse.safeParse","parse.parseAsync","parse.safeParseAsync","check","refine","refinement","superRefine","checks.overwrite","optional","nullable","nonoptional","array","union","intersection","pipe","transform","_default","prefault","_catch","readonly","core.globalRegistry","_ZodString","core.$ZodString","checks.regex","checks.includes","checks.startsWith","checks.endsWith","checks.minLength","checks.maxLength","checks.length","checks.lowercase","checks.uppercase","checks.trim","checks.normalize","checks.toLowerCase","checks.toUpperCase","ZodString","core._email","ZodEmail","core._url","ZodURL","core._jwt","ZodJWT","core._emoji","ZodEmoji","core._guid","ZodGUID","core._uuid","ZodUUID","core._uuidv4","core._uuidv6","core._uuidv7","core._nanoid","ZodNanoID","core._cuid","ZodCUID","core._cuid2","ZodCUID2","core._ulid","ZodULID","core._base64","ZodBase64","core._base64url","ZodBase64URL","core._xid","ZodXID","core._ksuid","ZodKSUID","core._ipv4","ZodIPv4","core._ipv6","ZodIPv6","core._cidrv4","ZodCIDRv4","core._cidrv6","ZodCIDRv6","core._e164","ZodE164","iso.datetime","iso.date","iso.time","iso.duration","core._string","ZodStringFormat","core.$ZodStringFormat","core.$ZodEmail","core.$ZodGUID","core.$ZodUUID","core.$ZodURL","core.$ZodEmoji","core.$ZodNanoID","core.$ZodCUID","core.$ZodCUID2","core.$ZodULID","core.$ZodXID","core.$ZodKSUID","core.$ZodIPv4","core.$ZodIPv6","core.$ZodCIDRv4","core.$ZodCIDRv6","core.$ZodBase64","core.$ZodBase64URL","core.$ZodE164","core.$ZodJWT","ZodBoolean","core.$ZodBoolean","core._boolean","ZodUnknown","core.$ZodUnknown","unknown","core._unknown","ZodNever","core.$ZodNever","never","core._never","ZodArray","core.$ZodArray","len","core._array","ZodObject","core.$ZodObject","_enum","incoming","util.extend","other","util.merge","util.pick","util.omit","util.partial","ZodOptional","util.required","ZodNonOptional","util.assignProp","util.objectClone","ZodUnion","core.$ZodUnion","ZodIntersection","core.$ZodIntersection","ZodEnum","core.$ZodEnum","newEntries","ZodTransform","core.$ZodTransform","core.$ZodOptional","ZodNullable","core.$ZodNullable","ZodDefault","core.$ZodDefault","util.shallowClone","ZodPrefault","core.$ZodPrefault","core.$ZodNonOptional","ZodCatch","core.$ZodCatch","catchValue","ZodPipe","core.$ZodPipe","in_","out","ZodReadonly","core.$ZodReadonly","ZodCustom","core.$ZodCustom","core._refine","core._superRefine","contactSchema","z.object","z.string","z.boolean","QwanyxTemplate","companyName","tagline","isScrolled","setIsScrolled","handleScroll","handleContactSubmit","subjects","navItems"],"mappings":"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","x_google_ignoreList":[0,1,2,8,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41]}