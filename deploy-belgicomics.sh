#!/bin/bash
# Script de dÃ©ploiement pour le nouveau Belgicomics React

echo "ðŸš€ DÃ©ploiement du nouveau Belgicomics React"
echo "============================================"

# Variables
SERVER="135.181.72.183"
SERVER_USER="root"  # ou votre utilisateur
REMOTE_PATH="/opt/qwanyx/apps/belgicomics-react"
LOCAL_BUILD_PATH="belgicomics-ui/dist"

# Build le projet localement (si pas dÃ©jÃ  fait)
echo "â†’ Build du projet..."
cd belgicomics-ui
npm run build
cd ..

# CrÃ©er le rÃ©pertoire sur le serveur s'il n'existe pas
echo "â†’ PrÃ©paration du serveur..."
ssh $SERVER_USER@$SERVER "mkdir -p $REMOTE_PATH"

# Copier les fichiers de build vers le serveur
echo "â†’ Copie des fichiers vers le serveur..."
scp -r $LOCAL_BUILD_PATH/* $SERVER_USER@$SERVER:$REMOTE_PATH/

# CrÃ©er un serveur simple avec Python pour servir le site React
echo "â†’ Configuration du serveur..."
ssh $SERVER_USER@$SERVER << 'EOF'
# ArrÃªter l'ancien serveur Flask Belgicomics
pkill -f "belgicomics.*app_bulma.py" || true

# CrÃ©er un script de dÃ©marrage pour le nouveau site
cat > /opt/qwanyx/apps/belgicomics-react/start.sh << 'SCRIPT'
#!/bin/bash
cd /opt/qwanyx/apps/belgicomics-react
python3 -m http.server 8091 --bind 0.0.0.0
SCRIPT

chmod +x /opt/qwanyx/apps/belgicomics-react/start.sh

# DÃ©marrer le nouveau serveur
cd /opt/qwanyx/apps/belgicomics-react
nohup python3 -m http.server 8091 --bind 0.0.0.0 > /tmp/belgicomics-react.log 2>&1 &

echo "âœ… Nouveau Belgicomics React dÃ©ployÃ© sur le port 8091"
EOF

echo ""
echo "âœ… DÃ©ploiement terminÃ©!"
echo "ðŸ”— Le site est accessible Ã : http://135.181.72.183:8091"
echo ""
echo "Pour voir les logs:"
echo "  ssh $SERVER_USER@$SERVER 'tail -f /tmp/belgicomics-react.log'"