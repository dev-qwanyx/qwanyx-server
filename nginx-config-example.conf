# /etc/nginx/sites-available/qwanyx-apps

# Autodin.be - Routes to Next.js on port 3001
server {
    listen 80;
    listen [::]:80;
    server_name autodin.be www.autodin.be;

    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Belgicomics.be - Routes to Next.js on port 3002
server {
    listen 80;
    listen [::]:80;
    server_name belgicomics.be www.belgicomics.be;

    location / {
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Development/Testing - Access by port on IP
# You can access directly: 
# - http://135.181.72.183:3001 → Autodin
# - http://135.181.72.183:3002 → Belgicomics

# Alternative: Subdirectory routing on main IP
server {
    listen 80;
    listen [::]:80;
    server_name 135.181.72.183;

    # Route /autodin/* to Autodin app
    location /autodin {
        rewrite ^/autodin(.*)$ $1 break;
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Route /belgicomics/* to Belgicomics app
    location /belgicomics {
        rewrite ^/belgicomics(.*)$ $1 break;
        proxy_pass http://localhost:3002;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # API stays on Python Flask
    location /api {
        proxy_pass http://localhost:5002;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}